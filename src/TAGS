
bin2c.cpp,108
#define BUFLEN BUFLEN3,21
unsigned char buf[BUFLEN];buf5,49
int main(int argc, char **argv) {main7,77

c_bind.cpp,2459
EMode *Modes = 0;Modes14,318
EEventMap *EventMaps = 0;EventMaps15,336
int CMacros = 0;CMacros17,363
ExMacro *Macros = 0;Macros18,380
const char *GetCommandName(int Command) {GetCommandName26,585
int CmdNum(char *Cmd) {CmdNum43,1103
EMode *FindMode(const char *Name) {FindMode57,1489
EEventMap *FindEventMap(const char *Name) {FindEventMap69,1724
EEventMap *FindActiveMap(EMode *Mode) {FindActiveMap81,1972
EKey *SetKey(EEventMap *aMap, const char *aKey) {SetKey90,2149
void InitWordChars() {InitWordChars179,4640
void SetWordChars(char *w, const char *s) {SetWordChars194,5071
EMode::EMode(EMode *aMode, EEventMap *Map, const char *aName) {EMode214,5503
EMode::~EMode() {~EMode259,6658
EKeyMap::EKeyMap() {EKeyMap277,7001
EKeyMap::~EKeyMap() {~EKeyMap282,7063
void EKeyMap::AddKey(EKey *aKey) {AddKey295,7246
int MatchKey(TKeyCode aKey, KeySel aSel) {MatchKey301,7328
EKey *EKeyMap::FindKey(TKeyCode aKey) {FindKey331,7990
EEventMap::EEventMap(const char *AName, EEventMap *AParent) {EEventMap341,8160
EEventMap::~EEventMap() {~EEventMap351,8407
void EEventMap::SetMenu(int which, const char *What) {SetMenu383,8898
char *EEventMap::GetMenu(int which) {GetMenu391,9097
int EEventMap::AddAbbrev(EAbbrev *ab) {AddAbbrev401,9329
EAbbrev *EMode::FindAbbrev(const char *string) {FindAbbrev408,9477
    const char *Name;Name430,9943
    TKeyCode Key;Key431,9965
} KeyList[] = {KeyList432,9983
int ParseKey(const char *Key, KeySel &ks) {ParseKey467,10741
int GetKeyName(char *Key, KeySel &ks) {GetKeyName513,12115
EKey::EKey(char *aKey) {EKey548,13086
EKey::EKey(char *aKey, EKeyMap *aKeyMap) {EKey555,13186
EKey::~EKey()~EKey562,13310
EAbbrev::EAbbrev(const char *aMatch, const char *aReplace) {EAbbrev569,13415
EAbbrev::EAbbrev(const char *aMatch, int aCmd) {EAbbrev576,13567
EAbbrev::~EAbbrev() {~EAbbrev583,13694
int AddCommand(int no, int Command, int count, int ign) {AddCommand591,13802
int AddString(int no, const char *String) {AddString603,14301
int AddNumber(int no, long number) {AddNumber613,14713
int AddConcat(int no) {AddConcat623,15107
int AddVariable(int no, int number) {AddVariable633,15483
int NewCommand(const char *Name) {NewCommand643,15880
int ExState::GetStrParam(EView *view, char *str, int maxlen) {GetStrParam652,16155
int ExState::GetIntParam(EView *view, int *value) {GetIntParam687,17137
int HashStr(const char *p, int maxim) {HashStr704,17607

c_color.cpp,2104
ChColor MsgColor[3] = { 0x07, 0x0B, 0x04 };MsgColor12,239
ChColor hcStatus_Normal = 0x30;hcStatus_Normal16,303
ChColor hcStatus_Active = 0x70;hcStatus_Active17,335
ChColor hcEntry_Field   = 0x07;hcEntry_Field19,368
ChColor hcEntry_Prompt  = 0x0F;hcEntry_Prompt20,400
ChColor hcEntry_Selection = 0x2F;hcEntry_Selection21,432
ChColor hcPlain_Normal = 0x07;hcPlain_Normal25,480
ChColor hcPlain_Background = 0x07;hcPlain_Background26,511
ChColor hcPlain_Selected = 0x80;hcPlain_Selected27,546
ChColor hcPlain_Markers = 0x03;hcPlain_Markers28,579
ChColor hcPlain_Found = 0x40;hcPlain_Found29,611
ChColor hcPlain_Keyword = 0x0F;hcPlain_Keyword30,641
ChColor hcPlain_Folds = 0x0A;hcPlain_Folds31,673
ChColor hcPlain_HilitWord = 0x0D;hcPlain_HilitWord32,703
ChColor hcList_Status    = 0x70;hcList_Status36,784
ChColor hcList_Normal    = 0x07;hcList_Normal37,817
ChColor hcList_Selected  = 0x1F;hcList_Selected38,850
ChColor hcScrollBar_Arrows = 0x70;hcScrollBar_Arrows40,884
ChColor hcScrollBar_Back   = 0x07;hcScrollBar_Back41,919
ChColor hcScrollBar_Fore   = 0x07;hcScrollBar_Fore42,954
ChColor hcAsciiChars = 0x07;hcAsciiChars44,990
ChColor hcMenu_Background = 0x70;hcMenu_Background46,1020
ChColor hcMenu_ActiveItem = 0x1F;hcMenu_ActiveItem47,1054
ChColor hcMenu_ActiveChar = 0x1C;hcMenu_ActiveChar48,1088
ChColor hcMenu_NormalItem = 0x70;hcMenu_NormalItem49,1122
ChColor hcMenu_NormalChar = 0x74;hcMenu_NormalChar50,1156
ChColor hcChoice_Title      = 0x1F;hcChoice_Title52,1191
ChColor hcChoice_Param      = 0x1B;hcChoice_Param53,1227
ChColor hcChoice_Background = 0x17;hcChoice_Background54,1263
ChColor hcChoice_ActiveItem = 0x20;hcChoice_ActiveItem55,1299
ChColor hcChoice_ActiveChar = 0x2F;hcChoice_ActiveChar56,1335
ChColor hcChoice_NormalItem = 0x1F;hcChoice_NormalItem57,1371
ChColor hcChoice_NormalChar = 0x1E;hcChoice_NormalChar58,1407
    const char *Name;Name61,1466
    ChColor *C;C62,1488
} Colors[] = Colors63,1504
#define NCOLORS NCOLORS109,3190
int SetColor(const char *ColorV, const char *Value) {SetColor111,3242

c_config.cpp,3435
typedef struct _CurPos {_CurPos12,240
    int sz;sz13,265
    const char *a;a14,277
    const char *c;c15,296
    const char *z;z16,315
    int line;line17,334
    const char *name; // filenamename18,348
} CurPos;CurPos19,382
int SystemClipboard = 0;SystemClipboard47,950
int ScreenSizeX = -1, ScreenSizeY = -1;ScreenSizeX48,975
int ScreenSizeX = -1, ScreenSizeY = -1;ScreenSizeY48,975
int ScrollBarWidth = 1;ScrollBarWidth49,1015
int CursorInsSize[2] = { 90, 100 };CursorInsSize50,1039
int CursorOverSize[2] = { 0, 100 };CursorOverSize51,1075
int OpenAfterClose = 1;OpenAfterClose52,1111
int SelectPathname = 0;SelectPathname53,1135
char DefaultModeName[32] = "";DefaultModeName54,1159
RxNode *CompletionFilter = NULL;CompletionFilter55,1190
char PrintDevice[MAXPATH] = "PRN";PrintDevice57,1259
char PrintDevice[MAXPATH] = "\\DEV\\PRN";PrintDevice59,1300
char CompileCommand[256] = "make";CompileCommand61,1349
int KeepHistory = 0;KeepHistory62,1384
int LoadDesktopOnEntry = 0;LoadDesktopOnEntry63,1405
int SaveDesktopOnExit = 0;SaveDesktopOnExit64,1433
char WindowFont[64] = "";WindowFont65,1460
int KeepMessages = 0;KeepMessages66,1486
int ScrollBorderX = 0;ScrollBorderX67,1508
int ScrollBorderY = 0;ScrollBorderY68,1531
int ScrollJumpX = 8;ScrollJumpX69,1554
int ScrollJumpY = 1;ScrollJumpY70,1575
int GUIDialogs = 1;GUIDialogs71,1596
int PMDisableAccel = 0;PMDisableAccel72,1616
int SevenBit = 0;SevenBit73,1640
int WeirdScroll = 0;WeirdScroll74,1658
int LoadDesktopMode = 0;LoadDesktopMode75,1679
char HelpCommand[128] = "man -a";HelpCommand76,1704
char *ConfigSourcePath = 0;ConfigSourcePath77,1738
int AddKeyword(ColorKeywords *tab, char color, const char *keyword) {AddKeyword80,1794
int SetModeNumber(EMode *mode, int what, int number) {SetModeNumber111,2610
int SetModeString(EMode *mode, int what, const char *string) {SetModeString119,2797
int SetGlobalNumber(int what, int number) {SetGlobalNumber157,4159
int SetGlobalString(long what, const char *string) {SetGlobalString212,7107
int SetEventString(EEventMap *Map, long what, const char *string) {SetEventString226,7664
int SetColorizeString(EColorize *Colorize, long what, const char *string) {SetColorizeString239,7930
unsigned char GetObj(CurPos &cp, unsigned short &len) {GetObj251,8185
const char *GetCharStr(CurPos &cp, unsigned short len) {GetCharStr265,8481
int GetNum(CurPos &cp, long &num) {GetNum273,8643
int ReadCommands(CurPos &cp, const char *Name) {ReadCommands289,8966
int ReadMenu(CurPos &cp, const char *MenuName) {ReadMenu367,11313
int ReadColors(CurPos &cp, const char *ObjName) {ReadColors423,12965
int ReadHilitColors(CurPos &cp, EColorize *Colorize, const char * /*ObjName*/) {ReadHilitColors453,13812
int ReadKeywords(CurPos &cp, ColorKeywords *keywords, int color) {ReadKeywords482,14580
int ReadEventMap(CurPos &cp, EEventMap *Map, const char * /*MapName*/) {ReadEventMap505,15138
int ReadColorize(CurPos &cp, EColorize *Colorize, const char *ModeName) {ReadColorize586,17515
int ReadMode(CurPos &cp, EMode *Mode, const char * /*ModeName*/) {ReadMode806,24444
int ReadObject(CurPos &cp, const char *ObjName) {ReadObject847,25578
int ReadConfigFile(CurPos &cp) {ReadConfigFile910,27505
int LoadConfig(int /*argc*/, char ** /*argv*/, char *CfgFileName) {LoadConfig1046,31737
int UseDefaultConfig() {UseDefaultConfig1110,33087

c_desktop.cpp,244
#define DESKTOP_VER DESKTOP_VER14,264
#define DESKTOP_VER1 DESKTOP_VER115,302
char DesktopFileName[256] = "";DesktopFileName17,342
int SaveDesktop(char *FileName) {SaveDesktop19,375
int LoadDesktop(char *FileName) {LoadDesktop61,1288

cfte.cpp,4385
#define slen(slen27,526
    char *Name;Name30,588
} ExMacro;ExMacro31,604
unsigned int CMacros = 0;CMacros33,616
ExMacro *Macros = 0;Macros34,642
FILE *output = 0;output36,664
int lntotal = 0;lntotal37,682
long offset = -1;offset38,699
long pos = 0;pos39,717
char XTarget[MAXPATH] = "";XTarget40,731
char StartDir[MAXPATH] = "";StartDir41,759
typedef struct _CurPos {_CurPos46,836
    int sz;sz47,861
    char *a;a48,873
    char *c;c49,886
    char *z;z50,899
    int line;line51,912
    const char *name; // filenamename52,926
} CurPos;CurPos53,960
void cleanup(int xerrno) {cleanup55,971
void Fail(CurPos &cp, const char *s, ...) {Fail63,1110
void PutObject(CurPos &cp, int xtag, int xlen, void *obj) {PutObject77,1454
void PutNull(CurPos &cp, int xtag) {PutNull97,1984
void PutString(CurPos &cp, int xtag, char *str) {PutString101,2055
void PutNumber(CurPos &cp, int xtag, long num) {PutNumber105,2149
int main(int argc, char **argv) {main116,2460
#define MODE_BFI(MODE_BFI253,5729
#define MODE_BFS(MODE_BFS254,5765
#define MODE_FLG(MODE_FLG255,5801
#define EVENT_FLG(EVENT_FLG256,5838
#define COLORIZE_FLG(COLORIZE_FLG257,5874
#define HILIT_CLR(HILIT_CLR258,5914
typedef struct _OrdLookup {_OrdLookup260,5952
    const char *Name;Name261,5980
    int num;num262,6002
} OrdLookup;OrdLookup263,6015
OrdLookup mode_num[] = {mode_num265,6029
OrdLookup mode_string[] = {mode_string312,7022
OrdLookup global_num[] = {global_num329,7365
OrdLookup global_string[] = {global_string380,8535
OrdLookup event_string[] = {event_string390,8728
OrdLookup colorize_string[] = {colorize_string396,8814
OrdLookup hilit_colors[] = {hilit_colors401,8888
int Lookup(OrdLookup *where, char *what) {Lookup433,9503
#define P_EOF P_EOF444,9765
#define P_SYNTAX P_SYNTAX445,9805
#define P_WORD P_WORD446,9841
#define P_NUMBER P_NUMBER447,9877
#define P_STRING P_STRING448,9909
#define P_ASSIGN P_ASSIGN449,9941
#define P_EOS P_EOS450,9971
#define P_KEYSPEC P_KEYSPEC451,10001
#define P_OPENBRACE P_OPENBRACE452,10032
#define P_CLOSEBRACE P_CLOSEBRACE453,10062
#define P_COLON P_COLON454,10092
#define P_COMMA P_COMMA455,10122
#define P_QUEST P_QUEST456,10152
#define P_VARIABLE P_VARIABLE457,10176
#define P_DOT P_DOT458,10206
#define K_UNKNOWN K_UNKNOWN460,10246
#define K_MODE K_MODE461,10270
#define K_KEY K_KEY462,10294
#define K_COLOR K_COLOR463,10318
#define K_KEYWORD K_KEYWORD464,10342
#define K_OBJECT K_OBJECT465,10366
#define K_MENU K_MENU466,10390
#define K_ITEM K_ITEM467,10414
#define K_SUBMENU K_SUBMENU468,10438
#define K_COMPILERX K_COMPILERX469,10462
#define K_EXTERN K_EXTERN470,10486
#define K_INCLUDE K_INCLUDE471,10510
#define K_SUB K_SUB472,10534
#define K_EVENTMAP K_EVENTMAP473,10558
#define K_COLORIZE K_COLORIZE474,10582
#define K_ABBREV K_ABBREV475,10606
#define K_HSTATE K_HSTATE476,10630
#define K_HTRANS K_HTRANS477,10654
#define K_HWORDS K_HWORDS478,10678
#define K_SUBMENUCOND K_SUBMENUCOND479,10702
#define K_HWTYPE K_HWTYPE480,10727
#define K_COLPALETTE K_COLPALETTE481,10751
typedef char Word[64];Word483,10776
OrdLookup CfgKW[] = {CfgKW485,10800
OrdLookup CfgVar[] = {CfgVar510,11359
char **words = 0;words525,11757
unsigned int wordCount = 0;wordCount526,11775
int DefinedWord(const char *w) {DefinedWord528,11804
void DefineWord(const char *w) {DefineWord537,12019
int colorCount;colorCount549,12328
struct _color {_color550,12344
    char *colorName;colorName551,12360
    char *colorValue;colorValue552,12381
} *colors;colors553,12403
int DefineColor(char *name, char *value) {DefineColor555,12415
char *DefinedColor(char *name) {DefinedColor569,12874
char *GetColor(CurPos &cp, char *name) {GetColor578,13116
int GetWord(CurPos &cp, char *w) {GetWord610,13950
int Parse(CurPos &cp) {Parse629,14361
void GetOp(CurPos &cp, int what) {GetOp763,19031
char *GetString(CurPos &cp) {GetString779,19297
int GetNumber(CurPos &cp) {GetNumber819,20358
int CmdNum(const char *Cmd) {CmdNum834,20697
int NewCommand(const char *Name) {NewCommand848,21093
int ParseCommands(CurPos &cp, char *Name) {ParseCommands857,21324
int ParseConfigFile(CurPos &cp) {ParseConfigFile922,23283
int LoadFile(const char *WhereName, const char *CfgName, int Level) {LoadFile1686,59941

c_hilit.cpp,1352
    const char *Name;Name14,288
    int Num;Num15,310
    SyntaxProc Proc;Proc16,323
} HilitModes[] = {HilitModes17,344
    const char *Name;Name70,1500
    int Num;Num71,1522
} IndentModes[] = {IndentModes72,1535
EColorize *Colorizers = 0;Colorizers85,1755
int GetIndentMode(const char *Str) {GetIndentMode87,1783
int GetHilitMode(const char *Str) {GetHilitMode94,2011
SyntaxProc GetHilitProc(int id) {GetHilitProc101,2244
int EBuffer::HilitAddWord(const char *Word) {HilitAddWord109,2478
int EBuffer::HilitFindWord(const char *Word) {HilitFindWord119,2764
int EBuffer::HilitRemoveWord(const char *Word) {HilitRemoveWord130,3065
int EBuffer::HilitWord() {HilitWord147,3626
EColorize::EColorize(const char *AName, const char *AParent) {EColorize167,4208
EColorize::~EColorize() {~EColorize184,4716
EColorize *FindColorizer(const char *AName) {FindColorizer193,4845
int EColorize::SetColor(int idx, const char *Value) {SetColor204,5046
void HTrans::InitTrans() {InitTrans223,5470
void HState::InitState() {InitState233,5666
int HState::GetHilitWord(int len, char *str, ChColor &clr) {GetHilitWord245,5931
HMachine::HMachine() {HMachine274,6592
HMachine::~HMachine() {~HMachine281,6688
void HMachine::AddState(HState &aState) {AddState312,7155
void HMachine::AddTrans(HTrans &aTrans) {AddTrans320,7392

c_history.cpp,869
#define HISTORY_VER HISTORY_VER14,264
char HistoryFileName[256] = "";HistoryFileName16,303
static FPosHistory **FPHistory = 0;FPHistory18,336
static int FPHistoryCount = 0;FPHistoryCount19,372
static InputHistory inputHistory = { 0, 0, 0 };inputHistory21,404
void ClearHistory() { /*FOLD00*/ClearHistory23,453
int SaveHistory(char *FileName) { /*FOLD00*/SaveHistory46,924
int LoadHistory(char *FileName) { /*fold00*/LoadHistory71,1623
int UpdateFPos(char *FileName, int Row, int Col) { /*fold00*/UpdateFPos134,3157
int RetrieveFPos(char *FileName, int &Row, int &Col) { /*FOLD00*/RetrieveFPos190,4516
int AddInputHistory(int Id, char *String) { /*fold00*/AddInputHistory213,5021
int CountInputHistory(int Id) { /*fold00*/CountInputHistory234,5862
int GetInputHistory(int Id, char *String, int len, int Nth) { /*fold00*/GetInputHistory242,6033

clip_gpm.cpp,70
int GetPMClip() {GetPMClip12,240
int PutPMClip() {PutPMClip16,275

clip_no.cpp,70
int GetPMClip() {GetPMClip12,239
int PutPMClip() {PutPMClip16,274

clip_os2.cpp,71
int GetPMClip() {GetPMClip13,258
int PutPMClip() {PutPMClip46,1135

clip_pm.cpp,135
#define INCL_WININCL_WIN13,257
int GetClipText(ClipData *cd) {GetClipText20,349
int PutClipText(ClipData *cd) {PutClipText36,682

clip_pmv.cpp,17086
#define INCL_WININCL_WIN13,257
#define INCL_DOSINCL_DOS14,274
#define INCL_ORDINALSINCL_ORDINALS15,291
#define ORD_WIN32ADDATOM ORD_WIN32ADDATOM28,617
#define ORD_WIN32ALARM ORD_WIN32ALARM29,662
#define ORD_WIN32BEGINENUMWINDOWS ORD_WIN32BEGINENUMWINDOWS30,707
#define ORD_WIN32BEGINPAINT ORD_WIN32BEGINPAINT31,752
#define ORD_WIN32CALCFRAMERECT ORD_WIN32CALCFRAMERECT32,797
#define ORD_WIN32CANCELSHUTDOWN ORD_WIN32CANCELSHUTDOWN33,842
#define ORD_WIN32CLOSECLIPBRD ORD_WIN32CLOSECLIPBRD34,887
#define ORD_WIN32COMPARESTRINGS ORD_WIN32COMPARESTRINGS35,932
#define ORD_WIN32COPYACCELTABLE ORD_WIN32COPYACCELTABLE36,977
#define ORD_WIN32COPYRECT ORD_WIN32COPYRECT37,1022
#define ORD_WIN32CPTRANSLATECHAR ORD_WIN32CPTRANSLATECHAR38,1067
#define ORD_WIN32CPTRANSLATESTRING ORD_WIN32CPTRANSLATESTRING39,1112
#define ORD_WIN32CREATEACCELTABLE ORD_WIN32CREATEACCELTABLE40,1157
#define ORD_WIN32CREATEATOMTABLE ORD_WIN32CREATEATOMTABLE41,1202
#define ORD_WIN32CREATECURSOR ORD_WIN32CREATECURSOR42,1247
#define ORD_WIN32CREATEMSGQUEUE ORD_WIN32CREATEMSGQUEUE43,1292
#define ORD_WIN32CREATEPOINTER ORD_WIN32CREATEPOINTER44,1337
#define ORD_WIN32DDEINITIATE ORD_WIN32DDEINITIATE45,1382
#define ORD_WIN32DDEPOSTMSG ORD_WIN32DDEPOSTMSG46,1427
#define ORD_WIN32DDERESPOND ORD_WIN32DDERESPOND47,1472
#define ORD_WIN32DELETEATOM ORD_WIN32DELETEATOM48,1517
#define ORD_WIN32DELETELIBRARY ORD_WIN32DELETELIBRARY49,1562
#define ORD_WIN32DESTROYACCELTABLE ORD_WIN32DESTROYACCELTABLE50,1607
#define ORD_WIN32DESTROYATOMTABLE ORD_WIN32DESTROYATOMTABLE51,1652
#define ORD_WIN32DESTROYCURSOR ORD_WIN32DESTROYCURSOR52,1697
#define ORD_WIN32DESTROYMSGQUEUE ORD_WIN32DESTROYMSGQUEUE53,1742
#define ORD_WIN32DESTROYPOINTER ORD_WIN32DESTROYPOINTER54,1787
#define ORD_WIN32DESTROYWINDOW ORD_WIN32DESTROYWINDOW55,1832
#define ORD_WIN32DISMISSDLG ORD_WIN32DISMISSDLG56,1877
#define ORD_WIN32DRAWBITMAP ORD_WIN32DRAWBITMAP57,1922
#define ORD_WIN32DRAWBORDER ORD_WIN32DRAWBORDER58,1967
#define ORD_WIN32DRAWPOINTER ORD_WIN32DRAWPOINTER59,2012
#define ORD_WIN32EMPTYCLIPBRD ORD_WIN32EMPTYCLIPBRD60,2057
#define ORD_WIN32ENABLEPHYSINPUT ORD_WIN32ENABLEPHYSINPUT61,2102
#define ORD_WIN32ENABLEWINDOW ORD_WIN32ENABLEWINDOW62,2147
#define ORD_WIN32ENABLEWINDOWUPDATE ORD_WIN32ENABLEWINDOWUPDATE63,2192
#define ORD_WIN32ENDENUMWINDOWS ORD_WIN32ENDENUMWINDOWS64,2237
#define ORD_WIN32ENDPAINT ORD_WIN32ENDPAINT65,2282
#define ORD_WIN32ENUMCLIPBRDFMTS ORD_WIN32ENUMCLIPBRDFMTS66,2327
#define ORD_WIN32ENUMDLGITEM ORD_WIN32ENUMDLGITEM67,2372
#define ORD_WIN32EQUALRECT ORD_WIN32EQUALRECT68,2417
#define ORD_WIN32EXCLUDEUPDATEREGION ORD_WIN32EXCLUDEUPDATEREGION69,2462
#define ORD_WIN32FILLRECT ORD_WIN32FILLRECT70,2507
#define ORD_WIN32FINDATOM ORD_WIN32FINDATOM71,2552
#define ORD_WIN32FLASHWINDOW ORD_WIN32FLASHWINDOW72,2597
#define ORD_WIN32FOCUSCHANGE ORD_WIN32FOCUSCHANGE73,2642
#define ORD_WIN32FREEERRORINFO ORD_WIN32FREEERRORINFO74,2687
#define ORD_WIN32GETCLIPPS ORD_WIN32GETCLIPPS75,2732
#define ORD_WIN32GETCURRENTTIME ORD_WIN32GETCURRENTTIME76,2777
#define ORD_WIN32GETERRORINFO ORD_WIN32GETERRORINFO77,2822
#define ORD_WIN32GETKEYSTATE ORD_WIN32GETKEYSTATE78,2867
#define ORD_WIN32GETLASTERROR ORD_WIN32GETLASTERROR79,2912
#define ORD_WIN32GETMAXPOSITION ORD_WIN32GETMAXPOSITION80,2957
#define ORD_WIN32GETMINPOSITION ORD_WIN32GETMINPOSITION81,3002
#define ORD_WIN32GETNEXTWINDOW ORD_WIN32GETNEXTWINDOW82,3047
#define ORD_WIN32GETPS ORD_WIN32GETPS83,3092
#define ORD_WIN32GETPHYSKEYSTATE ORD_WIN32GETPHYSKEYSTATE84,3137
#define ORD_WIN32GETSCREENPS ORD_WIN32GETSCREENPS85,3182
#define ORD_WIN32GETSYSBITMAP ORD_WIN32GETSYSBITMAP86,3227
#define ORD_WIN32INSENDMSG ORD_WIN32INSENDMSG87,3272
#define ORD_WIN32INFLATERECT ORD_WIN32INFLATERECT88,3317
#define ORD_WIN32INITIALIZE ORD_WIN32INITIALIZE89,3362
#define ORD_WIN32INTERSECTRECT ORD_WIN32INTERSECTRECT90,3407
#define ORD_WIN32INVALIDATERECT ORD_WIN32INVALIDATERECT91,3452
#define ORD_WIN32INVALIDATEREGION ORD_WIN32INVALIDATEREGION92,3497
#define ORD_WIN32INVERTRECT ORD_WIN32INVERTRECT93,3542
#define ORD_WIN32ISCHILD ORD_WIN32ISCHILD94,3587
#define ORD_WIN32ISPHYSINPUTENABLED ORD_WIN32ISPHYSINPUTENABLED95,3632
#define ORD_WIN32ISRECTEMPTY ORD_WIN32ISRECTEMPTY96,3677
#define ORD_WIN32ISTHREADACTIVE ORD_WIN32ISTHREADACTIVE97,3722
#define ORD_WIN32ISWINDOW ORD_WIN32ISWINDOW98,3767
#define ORD_WIN32ISWINDOWENABLED ORD_WIN32ISWINDOWENABLED99,3812
#define ORD_WIN32ISWINDOWSHOWING ORD_WIN32ISWINDOWSHOWING100,3857
#define ORD_WIN32ISWINDOWVISIBLE ORD_WIN32ISWINDOWVISIBLE101,3902
#define ORD_WIN32LOADACCELTABLE ORD_WIN32LOADACCELTABLE102,3947
#define ORD_WIN32LOADLIBRARY ORD_WIN32LOADLIBRARY103,3992
#define ORD_WIN32LOADMENU ORD_WIN32LOADMENU104,4037
#define ORD_WIN32LOADMESSAGE ORD_WIN32LOADMESSAGE105,4082
#define ORD_WIN32LOADPOINTER ORD_WIN32LOADPOINTER106,4127
#define ORD_WIN32LOADSTRING ORD_WIN32LOADSTRING107,4172
#define ORD_WIN32LOCKVISREGIONS ORD_WIN32LOCKVISREGIONS108,4217
#define ORD_WIN32LOCKWINDOWUPDATE ORD_WIN32LOCKWINDOWUPDATE109,4262
#define ORD_WIN32MAKEPOINTS ORD_WIN32MAKEPOINTS110,4307
#define ORD_WIN32MAKERECT ORD_WIN32MAKERECT111,4352
#define ORD_WIN32MAPDLGPOINTS ORD_WIN32MAPDLGPOINTS112,4397
#define ORD_WIN32MAPWINDOWPOINTS ORD_WIN32MAPWINDOWPOINTS113,4442
#define ORD_WIN32MESSAGEBOX ORD_WIN32MESSAGEBOX114,4487
#define ORD_WIN32MSGSEMWAIT ORD_WIN32MSGSEMWAIT115,4532
#define ORD_WIN32NEXTCHAR ORD_WIN32NEXTCHAR116,4577
#define ORD_WIN32OFFSETRECT ORD_WIN32OFFSETRECT117,4622
#define ORD_WIN32OPENCLIPBRD ORD_WIN32OPENCLIPBRD118,4667
#define ORD_WIN32OPENWINDOWDC ORD_WIN32OPENWINDOWDC119,4712
#define ORD_WIN32PREVCHAR ORD_WIN32PREVCHAR120,4757
#define ORD_WIN32PROCESSDLG ORD_WIN32PROCESSDLG121,4802
#define ORD_WIN32PTINRECT ORD_WIN32PTINRECT122,4847
#define ORD_WIN32QUERYACCELTABLE ORD_WIN32QUERYACCELTABLE123,4892
#define ORD_WIN32QUERYACTIVEWINDOW ORD_WIN32QUERYACTIVEWINDOW124,4937
#define ORD_WIN32QUERYANCHORBLOCK ORD_WIN32QUERYANCHORBLOCK125,4982
#define ORD_WIN32QUERYATOMLENGTH ORD_WIN32QUERYATOMLENGTH126,5027
#define ORD_WIN32QUERYATOMNAME ORD_WIN32QUERYATOMNAME127,5072
#define ORD_WIN32QUERYATOMUSAGE ORD_WIN32QUERYATOMUSAGE128,5117
#define ORD_WIN32QUERYCAPTURE ORD_WIN32QUERYCAPTURE129,5162
#define ORD_WIN32QUERYCLASSNAME ORD_WIN32QUERYCLASSNAME130,5207
#define ORD_WIN32QUERYCLIPBRDDATA ORD_WIN32QUERYCLIPBRDDATA131,5252
#define ORD_WIN32QUERYCLIPBRDFMTINFO ORD_WIN32QUERYCLIPBRDFMTINFO132,5297
#define ORD_WIN32QUERYCLIPBRDOWNER ORD_WIN32QUERYCLIPBRDOWNER133,5342
#define ORD_WIN32QUERYCLIPBRDVIEWER ORD_WIN32QUERYCLIPBRDVIEWER134,5387
#define ORD_WIN32QUERYCP ORD_WIN32QUERYCP135,5432
#define ORD_WIN32QUERYCPLIST ORD_WIN32QUERYCPLIST136,5477
#define ORD_WIN32QUERYCURSORINFO ORD_WIN32QUERYCURSORINFO137,5522
#define ORD_WIN32QUERYDESKTOPWINDOW ORD_WIN32QUERYDESKTOPWINDOW138,5567
#define ORD_WIN32QUERYDLGITEMSHORT ORD_WIN32QUERYDLGITEMSHORT139,5612
#define ORD_WIN32QUERYDLGITEMTEXT ORD_WIN32QUERYDLGITEMTEXT140,5657
#define ORD_WIN32QUERYDLGITEMTEXTLENGTH ORD_WIN32QUERYDLGITEMTEXTLENGTH141,5702
#define ORD_WIN32QUERYFOCUS ORD_WIN32QUERYFOCUS142,5747
#define ORD_WIN32QUERYMSGPOS ORD_WIN32QUERYMSGPOS143,5792
#define ORD_WIN32QUERYMSGTIME ORD_WIN32QUERYMSGTIME144,5837
#define ORD_WIN32QUERYOBJECTWINDOW ORD_WIN32QUERYOBJECTWINDOW145,5882
#define ORD_WIN32QUERYPOINTER ORD_WIN32QUERYPOINTER146,5927
#define ORD_WIN32QUERYPOINTERINFO ORD_WIN32QUERYPOINTERINFO147,5972
#define ORD_WIN32QUERYPOINTERPOS ORD_WIN32QUERYPOINTERPOS148,6017
#define ORD_WIN32QUERYQUEUEINFO ORD_WIN32QUERYQUEUEINFO149,6062
#define ORD_WIN32QUERYQUEUESTATUS ORD_WIN32QUERYQUEUESTATUS150,6107
#define ORD_WIN32QUERYSYSCOLOR ORD_WIN32QUERYSYSCOLOR151,6152
#define ORD_WIN32QUERYSYSMODALWINDOW ORD_WIN32QUERYSYSMODALWINDOW152,6197
#define ORD_WIN32QUERYSYSPOINTER ORD_WIN32QUERYSYSPOINTER153,6242
#define ORD_WIN32QUERYSYSVALUE ORD_WIN32QUERYSYSVALUE154,6287
#define ORD_WIN32QUERYSYSTEMATOMTABLE ORD_WIN32QUERYSYSTEMATOMTABLE155,6332
#define ORD_WIN32QUERYUPDATERECT ORD_WIN32QUERYUPDATERECT156,6377
#define ORD_WIN32QUERYUPDATEREGION ORD_WIN32QUERYUPDATEREGION157,6422
#define ORD_WIN32QUERYVERSION ORD_WIN32QUERYVERSION158,6467
#define ORD_WIN32QUERYWINDOW ORD_WIN32QUERYWINDOW159,6512
#define ORD_WIN32QUERYWINDOWDC ORD_WIN32QUERYWINDOWDC160,6557
#define ORD_WIN32QUERYWINDOWPOS ORD_WIN32QUERYWINDOWPOS161,6602
#define ORD_WIN32QUERYWINDOWPROCESS ORD_WIN32QUERYWINDOWPROCESS162,6647
#define ORD_WIN32QUERYWINDOWPTR ORD_WIN32QUERYWINDOWPTR163,6692
#define ORD_WIN32QUERYWINDOWRECT ORD_WIN32QUERYWINDOWRECT164,6737
#define ORD_WIN32QUERYWINDOWTEXT ORD_WIN32QUERYWINDOWTEXT165,6782
#define ORD_WIN32QUERYWINDOWTEXTLENGTH ORD_WIN32QUERYWINDOWTEXTLENGTH166,6827
#define ORD_WIN32QUERYWINDOWULONG ORD_WIN32QUERYWINDOWULONG167,6872
#define ORD_WIN32QUERYWINDOWUSHORT ORD_WIN32QUERYWINDOWUSHORT168,6917
#define ORD_WIN32REGISTERUSERDATATYPE ORD_WIN32REGISTERUSERDATATYPE169,6962
#define ORD_WIN32REGISTERUSERMSG ORD_WIN32REGISTERUSERMSG170,7007
#define ORD_WIN32RELEASEPS ORD_WIN32RELEASEPS171,7052
#define ORD_WIN32SCROLLWINDOW ORD_WIN32SCROLLWINDOW172,7097
#define ORD_WIN32SETACCELTABLE ORD_WIN32SETACCELTABLE173,7142
#define ORD_WIN32SETACTIVEWINDOW ORD_WIN32SETACTIVEWINDOW174,7187
#define ORD_WIN32SETCAPTURE ORD_WIN32SETCAPTURE175,7232
#define ORD_WIN32SETCLASSMSGINTEREST ORD_WIN32SETCLASSMSGINTEREST176,7277
#define ORD_WIN32SETCLIPBRDDATA ORD_WIN32SETCLIPBRDDATA177,7322
#define ORD_WIN32SETCLIPBRDOWNER ORD_WIN32SETCLIPBRDOWNER178,7367
#define ORD_WIN32SETCLIPBRDVIEWER ORD_WIN32SETCLIPBRDVIEWER179,7412
#define ORD_WIN32SETCP ORD_WIN32SETCP180,7457
#define ORD_WIN32SETDLGITEMSHORT ORD_WIN32SETDLGITEMSHORT181,7502
#define ORD_WIN32SETDLGITEMTEXT ORD_WIN32SETDLGITEMTEXT182,7547
#define ORD_WIN32SETFOCUS ORD_WIN32SETFOCUS183,7592
#define ORD_WIN32SETMSGINTEREST ORD_WIN32SETMSGINTEREST184,7637
#define ORD_WIN32SETMSGMODE ORD_WIN32SETMSGMODE185,7682
#define ORD_WIN32SETMULTWINDOWPOS ORD_WIN32SETMULTWINDOWPOS186,7727
#define ORD_WIN32SETOWNER ORD_WIN32SETOWNER187,7772
#define ORD_WIN32SETPARENT ORD_WIN32SETPARENT188,7817
#define ORD_WIN32SETPOINTER ORD_WIN32SETPOINTER189,7862
#define ORD_WIN32SETPOINTERPOS ORD_WIN32SETPOINTERPOS190,7907
#define ORD_WIN32SETRECT ORD_WIN32SETRECT191,7952
#define ORD_WIN32SETRECTEMPTY ORD_WIN32SETRECTEMPTY192,7997
#define ORD_WIN32SETSYNCHROMODE ORD_WIN32SETSYNCHROMODE193,8042
#define ORD_WIN32SETSYSCOLORS ORD_WIN32SETSYSCOLORS194,8087
#define ORD_WIN32SETSYSMODALWINDOW ORD_WIN32SETSYSMODALWINDOW195,8132
#define ORD_WIN32SETSYSVALUE ORD_WIN32SETSYSVALUE196,8177
#define ORD_WIN32SETWINDOWBITS ORD_WIN32SETWINDOWBITS197,8222
#define ORD_WIN32SETWINDOWPOS ORD_WIN32SETWINDOWPOS198,8267
#define ORD_WIN32SETWINDOWPTR ORD_WIN32SETWINDOWPTR199,8312
#define ORD_WIN32SETWINDOWTEXT ORD_WIN32SETWINDOWTEXT200,8357
#define ORD_WIN32SETWINDOWULONG ORD_WIN32SETWINDOWULONG201,8402
#define ORD_WIN32SETWINDOWUSHORT ORD_WIN32SETWINDOWUSHORT202,8447
#define ORD_WIN32SHOWCURSOR ORD_WIN32SHOWCURSOR203,8492
#define ORD_WIN32SHOWPOINTER ORD_WIN32SHOWPOINTER204,8537
#define ORD_WIN32SHOWTRACKRECT ORD_WIN32SHOWTRACKRECT205,8582
#define ORD_WIN32SHOWWINDOW ORD_WIN32SHOWWINDOW206,8627
#define ORD_WIN32STARTTIMER ORD_WIN32STARTTIMER207,8672
#define ORD_WIN32STOPTIMER ORD_WIN32STOPTIMER208,8717
#define ORD_WIN32SUBSTITUTESTRINGS ORD_WIN32SUBSTITUTESTRINGS209,8762
#define ORD_WIN32SUBTRACTRECT ORD_WIN32SUBTRACTRECT210,8807
#define ORD_WIN32TERMINATE ORD_WIN32TERMINATE211,8852
#define ORD_WIN32TRACKRECT ORD_WIN32TRACKRECT212,8897
#define ORD_WIN32UNIONRECT ORD_WIN32UNIONRECT213,8942
#define ORD_WIN32UPDATEWINDOW ORD_WIN32UPDATEWINDOW214,8987
#define ORD_WIN32UPPER ORD_WIN32UPPER215,9032
#define ORD_WIN32UPPERCHAR ORD_WIN32UPPERCHAR216,9077
#define ORD_WIN32VALIDATERECT ORD_WIN32VALIDATERECT217,9122
#define ORD_WIN32VALIDATEREGION ORD_WIN32VALIDATEREGION218,9167
#define ORD_WIN32WAITMSG ORD_WIN32WAITMSG219,9212
#define ORD_WIN32WINDOWFROMDC ORD_WIN32WINDOWFROMDC220,9257
#define ORD_WIN32WINDOWFROMID ORD_WIN32WINDOWFROMID221,9302
#define ORD_WIN32WINDOWFROMPOINT ORD_WIN32WINDOWFROMPOINT222,9347
#define ORD_WIN32BROADCASTMSG ORD_WIN32BROADCASTMSG223,9392
#define ORD_WIN32POSTQUEUEMSG ORD_WIN32POSTQUEUEMSG224,9437
#define ORD_WIN32SENDDLGITEMMSG ORD_WIN32SENDDLGITEMMSG225,9482
#define ORD_WIN32TRANSLATEACCEL ORD_WIN32TRANSLATEACCEL226,9527
#define ORD_WIN32CALLMSGFILTER ORD_WIN32CALLMSGFILTER227,9572
#define ORD_WIN32CREATEFRAMECONTROLS ORD_WIN32CREATEFRAMECONTROLS228,9617
#define ORD_WIN32CREATEMENU ORD_WIN32CREATEMENU229,9662
#define ORD_WIN32CREATESTDWINDOW ORD_WIN32CREATESTDWINDOW230,9707
#define ORD_WIN32CREATEWINDOW ORD_WIN32CREATEWINDOW231,9752
#define ORD_WIN32DEFDLGPROC ORD_WIN32DEFDLGPROC232,9797
#define ORD_WIN32DEFWINDOWPROC ORD_WIN32DEFWINDOWPROC233,9842
#define ORD_WIN32DISPATCHMSG ORD_WIN32DISPATCHMSG234,9887
#define ORD_WIN32DRAWTEXT ORD_WIN32DRAWTEXT235,9932
#define ORD_WIN32GETDLGMSG ORD_WIN32GETDLGMSG236,9977
#define ORD_WIN32GETMSG ORD_WIN32GETMSG237,10022
#define ORD_WIN32MSGMUXSEMWAIT ORD_WIN32MSGMUXSEMWAIT238,10067
#define ORD_WIN32MULTWINDOWFROMIDS ORD_WIN32MULTWINDOWFROMIDS239,10112
#define ORD_WIN32PEEKMSG ORD_WIN32PEEKMSG240,10157
#define ORD_WIN32POSTMSG ORD_WIN32POSTMSG241,10202
#define ORD_WIN32SENDMSG ORD_WIN32SENDMSG242,10247
#define ORD_WIN32SETKEYBOARDSTATETABLE ORD_WIN32SETKEYBOARDSTATETABLE243,10292
#define ORD_WIN32CREATEDLG ORD_WIN32CREATEDLG244,10337
#define ORD_WIN32DLGBOX ORD_WIN32DLGBOX245,10382
#define ORD_WIN32LOADDLG ORD_WIN32LOADDLG246,10427
#define ORD_WIN32QUERYCLASSINFO ORD_WIN32QUERYCLASSINFO247,10472
#define ORD_WIN32REGISTERCLASS ORD_WIN32REGISTERCLASS248,10517
#define ORD_WIN32RELEASEHOOK ORD_WIN32RELEASEHOOK249,10562
#define ORD_WIN32SETHOOK ORD_WIN32SETHOOK250,10607
#define ORD_WIN32SUBCLASSWINDOW ORD_WIN32SUBCLASSWINDOW251,10652
#define ORD_WIN32SETCLASSTHUNKPROC ORD_WIN32SETCLASSTHUNKPROC252,10697
#define ORD_WIN32QUERYCLASSTHUNKPROC ORD_WIN32QUERYCLASSTHUNKPROC253,10742
#define ORD_WIN32SETWINDOWTHUNKPROC ORD_WIN32SETWINDOWTHUNKPROC254,10787
#define ORD_WIN32QUERYWINDOWTHUNKPROC ORD_WIN32QUERYWINDOWTHUNKPROC255,10832
#define ORD_WIN32QUERYWINDOWMODEL ORD_WIN32QUERYWINDOWMODEL256,10877
#define ORD_WIN32SETDESKTOPBKGND ORD_WIN32SETDESKTOPBKGND257,10922
#define ORD_WIN32QUERYDESKTOPBKGND ORD_WIN32QUERYDESKTOPBKGND258,10967
#define ORD_WIN32POPUPMENU ORD_WIN32POPUPMENU259,11012
#define ORD_WIN32SETPRESPARAM ORD_WIN32SETPRESPARAM260,11057
#define ORD_WIN32QUERYPRESPARAM ORD_WIN32QUERYPRESPARAM261,11102
#define ORD_WIN32REMOVEPRESPARAM ORD_WIN32REMOVEPRESPARAM262,11147
#define ORD_WIN32REALIZEPALETTE ORD_WIN32REALIZEPALETTE263,11192
#define ORD_WIN32CREATEPOINTERINDIRECT ORD_WIN32CREATEPOINTERINDIRECT264,11237
#define ORD_WIN32SAVEWINDOWPOS ORD_WIN32SAVEWINDOWPOS265,11282
#define ORD_WIN32GETERASEPS ORD_WIN32GETERASEPS266,11327
#define ORD_WIN32RELEASEERASEPS ORD_WIN32RELEASEERASEPS267,11372
#define ORD_WIN32SETPOINTEROWNER ORD_WIN32SETPOINTEROWNER268,11417
#define ORD_WIN32STRETCHPOINTER ORD_WIN32STRETCHPOINTER269,11462
#define ORD_WIN32SETERRORINFO ORD_WIN32SETERRORINFO270,11507
#define ORD_WIN32WAITEVENTSEM ORD_WIN32WAITEVENTSEM271,11552
#define ORD_WIN32REQUESTMUTEXSEM ORD_WIN32REQUESTMUTEXSEM272,11597
#define ORD_WIN32WAITMUXWAITSEM ORD_WIN32WAITMUXWAITSEM273,11642
HAB    (APIENTRY *p_WinInitialize)(ULONG flOptions);p_WinInitialize280,11760
BOOL   (APIENTRY *p_WinTerminate)(HAB hab);p_WinTerminate281,11813
HMQ    (APIENTRY *p_WinCreateMsgQueue)(HAB hab, LONG cmsg);p_WinCreateMsgQueue282,11857
BOOL   (APIENTRY *p_WinDestroyMsgQueue)(HMQ hmq);p_WinDestroyMsgQueue283,11917
BOOL   (APIENTRY *p_WinEmptyClipbrd)(HAB hab);p_WinEmptyClipbrd284,11967
BOOL   (APIENTRY *p_WinOpenClipbrd)(HAB hab);p_WinOpenClipbrd285,12014
BOOL   (APIENTRY *p_WinCloseClipbrd)(HAB hab);p_WinCloseClipbrd286,12060
BOOL   (APIENTRY *p_WinSetClipbrdData)(HAB hab, ULONG ulData, ULONG fmt, ULONG rgfFmtInfo);p_WinSetClipbrdData287,12107
ULONG  (APIENTRY *p_WinQueryClipbrdData)(HAB hab, ULONG fmt);p_WinQueryClipbrdData288,12199
static struct impentry {impentry290,12262
    ULONG ordinal;ordinal291,12287
    PFN *pointer;pointer292,12306
} imported_functions[] = {imported_functions293,12324
static BOOL loadDLL(void) {loadDLL310,13024
    PPIB ppib;ppib347,13903
    HAB hab;hab348,13918
    HMQ hmq;hmq349,13931
    ULONG savedtype;savedtype350,13944
    BOOL opened;opened351,13965
} PmInfo;PmInfo352,13982
static void LeavePmClipboard(void) {LeavePmClipboard354,13993
static BOOL AccessPmClipboard(void) {AccessPmClipboard365,14262
int GetClipText(ClipData *cd) {GetClipText394,15034
int PutClipText(ClipData *cd) {PutClipText414,15404

clipprog.cpp,472
#define INCL_DOSINCL_DOS11,223
#define INCL_PMINCL_PM12,240
#define SEM_PREFIX SEM_PREFIX19,354
#define MEM_PREFIX MEM_PREFIX20,395
#define CMD_GET CMD_GET22,440
#define CMD_PUT CMD_PUT23,459
HAB hab;hab25,479
HMQ hmq;hmq26,488
QMSG qmsg;qmsg27,497
HMTX hmtxSyn;hmtxSyn28,508
HEV hevGet;hevGet29,522
HEV hevPut;hevPut30,534
HEV hevEnd;hevEnd31,546
HMUX hmuxWait;hmuxWait32,558
void clipsrv(void *foo) {clipsrv34,574
int main() {main69,1421

clipserv.cpp,483
#define INCL_DOSINCL_DOS10,222
#define INCL_PMINCL_PM11,239
#define SEM_PREFIX SEM_PREFIX19,373
#define MEM_PREFIX MEM_PREFIX20,414
#define CMD_GET CMD_GET22,459
#define CMD_PUT CMD_PUT23,478
HAB hab;hab25,498
HMQ hmq;hmq26,507
QMSG qmsg;qmsg27,516
HMTX hmtxSyn;hmtxSyn28,527
HEV hevGet;hevGet29,541
HEV hevPut;hevPut30,553
HEV hevEnd;hevEnd31,565
HMUX hmuxWait;hmuxWait32,577
void _LNK_CONV clipsrv(void *foo) {clipsrv34,593
int main() {main125,3846

cliputil.cpp,126
#define MAXCLIPTEXT MAXCLIPTEXT15,300
char buffer[MAXCLIPTEXT];buffer17,354
int main(int argc, char **argv) {main19,381

clip_vio.cpp,411
#define INCL_DOSINCL_DOS15,320
#define SEM_PREFIX SEM_PREFIX20,395
#define MEM_PREFIX MEM_PREFIX21,436
#define CMD_GET CMD_GET23,481
#define CMD_PUT CMD_PUT24,500
static HMTX hmtxSyn;hmtxSyn26,520
static HEV hevGet;hevGet27,541
static HEV hevPut;hevPut28,560
static HEV hevEnd;hevEnd29,579
int GetClipText(ClipData *cd) {GetClipText31,599
int PutClipText(ClipData *cd) {PutClipText66,1673

clip_x11.cpp,71
int GetPMClip() {GetPMClip15,323
int PutPMClip() {PutPMClip51,1219

c_mode.cpp,131
EBufferFlags DefaultBufferFlags = {DefaultBufferFlags12,238
EMode *GetModeForName(const char *FileName) {GetModeForName84,2727

commands.cpp,152
int GetDefaultDirectory(EModel *M, char *Path, int MaxLen) {GetDefaultDirectory12,240
int SetDefaultDirectory(EModel *M) {SetDefaultDirectory22,475

compkeys.cpp,522
#define FTESL_KBDCTRL(FTESL_KBDCTRL19,411
static unsigned get_linux_keycode(TKeyCode kcode)get_linux_keycode21,452
typedef struct keymapperkeymapper189,4754
        TKeyCode        kcode;kcode191,4781
        const char*     kname;kname192,4812
} keymapper;keymapper193,4843
static keymapper speckeymap[]={speckeymap195,4857
TKeyCode   ftesl_getkeycode(const char* key)ftesl_getkeycode214,5405
int ftesl_get_ctrlcode(TKeyCode key)ftesl_get_ctrlcode277,7382
int main(int argc, char* argv[])main317,8567

con_dosx.cpp,4701
#define MAX_PIPES MAX_PIPES30,558
#define PIPE_BUFLEN PIPE_BUFLEN31,578
	int used;used34,621
	int id;id35,632
	int stopped;stopped37,657
	EModel *notify;notify46,797
        FILE *fp;fp50,863
} GPipe;GPipe51,881
static GPipe Pipes[MAX_PIPES] = {Pipes53,891
struct pipe_list {pipe_list73,1326
  FILE *fp;fp74,1345
  int fd;fd75,1357
  int exit_status;exit_status76,1367
  char *command, mode[10], temp_name[L_tmpnam];command77,1386
  char *command, mode[10], temp_name[L_tmpnam];mode77,1386
  char *command, mode[10], temp_name[L_tmpnam];temp_name77,1386
  struct pipe_list *next;next78,1434
static struct pipe_list *pl = NULL;pl82,1498
xpopen (const char *cm, const char *md) /* program name, pipe mode */xpopen85,1549
xpclose (FILE *pp)xpclose176,3653
static long MouseAutoDelay = 400;MouseAutoDelay249,5352
static long MouseAutoRepeat = 5;MouseAutoRepeat250,5386
static long MouseMultiClick = 300;MouseMultiClick251,5419
static int Initialized = 0;Initialized253,5455
static int MousePresent = 0;MousePresent254,5483
static int CursorVisible = 1; /* 1 means visible */CursorVisible255,5512
static int MouseVisible = 0; /* 0 means hidden */MouseVisible256,5564
static TEvent MouseEv = { evNone };MouseEv257,5614
static TEvent EventBuf = { evNone };EventBuf258,5650
static void DrawCursor(int Show) {DrawCursor264,5759
static void DrawMouse(int Show)DrawMouse267,5797
	unsigned short CharScan;CharScan277,5953
	TKeyCode KeyCode;KeyCode278,5979
} TransCharScan[] = {TransCharScan279,5998
	int ScanCode;ScanCode297,6853
	TKeyCode KeyCode;KeyCode298,6868
} TransScan[] = {TransScan299,6887
int ReadKbdEvent(TEvent *Event, int Wait)ReadKbdEvent352,9151
#define TM_DIFF(TM_DIFF419,11036
int ReadMouseEvent(TEvent *Event, unsigned long EventMask)ReadMouseEvent421,11144
int ConClear()ConClear591,15163
int ConPutBox(int X, int Y, int W, int H, PCell Cell) {ConPutBox597,15252
int ConGetBox(int X, int Y, int W, int H, PCell Cell) {ConGetBox623,15711
int ConPutLine(int X, int Y, int W, int H, PCell Cell)ConPutLine652,16203
int ConSetBox(int X, int Y, int W, int H, TCell Cell) {ConSetBox678,16644
int ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count)ConScroll704,17156
int ConSetSize(int X, int Y) {ConSetSize736,17986
int ConQuerySize(int *X, int *Y) {ConQuerySize740,18031
int ConSetCursorPos(int X, int Y) {ConSetCursorPos746,18121
int ConQueryCursorPos(int *X, int *Y) {ConQueryCursorPos751,18194
int ConShowCursor() {ConShowCursor756,18274
int ConHideCursor() {ConHideCursor762,18352
int ConSetCursorSize(int Start, int End) {ConSetCursorSize768,18431
int ConQueryMousePos(int *X, int *Y) {ConQueryMousePos784,18791
int ConShowMouse()ConShowMouse796,18964
int ConHideMouse()ConHideMouse804,19074
int ConMouseVisible() {ConMouseVisible812,19186
int ConQueryMouseButtons(int *ButtonCount) {ConQueryMouseButtons816,19235
int ConInit(int XSize, int YSize)ConInit823,19336
int ConDone()ConDone834,19501
int ConSuspend()ConSuspend839,19542
int ConContinue()ConContinue850,19740
int GetPipeEvent(TEvent *Event) {GetPipeEvent861,19938
int ConGetEvent(TEventMask EventMask, TEvent *Event, int WaitTime, int Delete)ConGetEvent883,20480
static PCell SavedScreen = 0;SavedScreen933,21399
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SavedX934,21429
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SavedY934,21429
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SaveCursorPosX934,21429
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SaveCursorPosY934,21429
int SaveScreen() {SaveScreen936,21489
int RestoreScreen() {RestoreScreen950,21781
GUI::GUI(int &argc, char **argv, int XSize, int YSize) {GUI959,21940
GUI::~GUI() {~GUI977,22401
int GUI::ConSuspend(void) {ConSuspend990,22573
int GUI::ConContinue(void) {ConContinue995,22646
int GUI::ShowEntryScreen() {ShowEntryScreen1000,22718
static void PipeThread(void *p) {PipeThread1016,23028
int GUI::OpenPipe(char *Command, EModel *notify) {OpenPipe1019,23065
int GUI::SetPipeView(int id, EModel *notify) {SetPipeView1043,23593
int GUI::ReadPipe(int id, void *buffer, int len) {ReadPipe1055,23869
int GUI::ClosePipe(int id) {ClosePipe1076,24357
int GUI::RunProgram(int mode, char *Command) {RunProgram1090,24636
int ConSetTitle(char *Title, char *STitle) {ConSetTitle1115,25028
int ConGetTitle(char *Title, int MaxLen, char *STitle, int SMaxLen) {ConGetTitle1119,25087
int ConCursorVisible() {ConCursorVisible1125,25218
int ConPutEvent(TEvent Event)ConPutEvent1129,25257
char ConGetDrawChar(int index) {ConGetDrawChar1135,25322

con_i18n.cpp,582
#define KEYMASK KEYMASK23,389
#define KEYBYTEMAX KEYBYTEMAX24,410
static int I18NKeyAnalyze(XKeyEvent * keyEvent, KeySym * key, /*fold00*/I18NKeyAnalyze43,883
static int I18NKeyAnalyze(XKeyEvent * keyEvent, KeySym * key, /*fold00*/I18NKeyAnalyze168,4073
XIC I18NInit(Display * display, Window win, unsigned long *mask) /*fold00*/I18NInit207,5251
void I18NFocusIn(XIC xic) /*fold00*/I18NFocusIn329,8646
void I18NFocusOut(XIC xic) /*fold00*/I18NFocusOut338,8781
int I18NLookupString(XKeyEvent * keyEvent, char *keyName, int keySize, /*FOLD00*/I18NLookupString350,8972

con_linux.cpp,5392
#define USE_GPM USE_GPM12,282
#define USE_SCRNMAP USE_SCRNMAP13,330
#define MAX_PIPES MAX_PIPES61,1658
    int used;used65,1723
    int id;id66,1737
    int fd;fd67,1749
    int pid;pid68,1761
    int stopped;stopped69,1774
    EModel *notify;notify70,1791
} GPipe;GPipe71,1811
static GPipe Pipes[MAX_PIPES] = {Pipes73,1821
#define die(die77,1890
unsigned int VideoCols = 80;VideoCols79,1948
unsigned int VideoRows = 25;VideoRows80,1977
unsigned int CursorX = 0;CursorX81,2006
unsigned int CursorY = 0;CursorY82,2032
int CursorVisible = 1;CursorVisible83,2058
int VtNum = -1;VtNum84,2081
static int VtFd = -1;VtFd85,2097
static int VcsFd = -1;VcsFd86,2119
struct termios Save_termios;Save_termios87,2142
struct kbdiacrs diacr_table;diacr_table88,2171
int GpmFd = -1;GpmFd90,2215
int LastMouseX = 0, LastMouseY = 0;LastMouseX92,2238
int LastMouseX = 0, LastMouseY = 0;LastMouseY92,2238
int WindowChanged = 0;WindowChanged93,2274
int drawPointer = 1;drawPointer94,2297
int mouseDrawn = 0;mouseDrawn95,2318
TCell MousePosCell;MousePosCell96,2338
static int noCharTrans = 0;noCharTrans98,2377
static unsigned char toScreen[256];toScreen100,2406
static unsigned char fromScreen[256];fromScreen101,2442
#define MEM_PAGE_SIZE MEM_PAGE_SIZE104,2488
#define VIDEO_SIZE VIDEO_SIZE105,2515
#define VIDEO_MAP_SIZE VIDEO_MAP_SIZE106,2562
void mouseShow() {mouseShow111,2694
void mouseHide() {mouseHide125,3114
void SigWindowChanged(int arg) {SigWindowChanged136,3402
static void Cleanup() {Cleanup141,3501
static void Die(int) {Die145,3543
int ConInit(int XSize, int YSize) {ConInit150,3598
int ConDone() {ConDone284,7265
int ConSuspend() {ConSuspend302,7626
int ConContinue() {ConContinue315,7884
int conread(int fd, void *p, int len) {   // len should be a multiple of 2conread347,8645
int conwrite(int fd, void *p, int len) {  // len should be a multiple of 2conwrite364,9068
#define conread(conread380,9470
#define conwrite(conwrite381,9511
int ConClear() {ConClear384,9562
int ConSetTitle(char *Title, char *STitle) {ConSetTitle393,9732
int ConGetTitle(char *Title, int MaxLen, char *STitle, int SMaxLen) {ConGetTitle396,9793
int ConPutBox(int X, int Y, int W, int H, PCell Cell) {ConPutBox401,9896
int ConGetBox(int X, int Y, int W, int H, PCell Cell) {ConGetBox414,10248
int ConPutLine(int X, int Y, int W, int H, PCell Cell) {ConPutLine427,10599
int ConSetBox(int X, int Y, int W, int H, TCell Cell) {ConSetBox439,10933
int ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count) {ConScroll446,11098
int ConSetSize(int X, int Y) {ConSetSize473,11746
int ConQuerySize(int *X, int *Y) {ConQuerySize477,11795
int ConSetCursorPos(int X, int Y) {ConSetCursorPos483,11901
int ConQueryCursorPos(int *X, int *Y) {ConQueryCursorPos495,12175
int ConShowCursor(void) {ConShowCursor501,12282
int ConHideCursor(void) {ConHideCursor505,12325
int ConCursorVisible(void) {ConCursorVisible509,12368
int ConSetMousePos(int X, int Y) {ConSetMousePos513,12414
int ConQueryMousePos(int *X, int *Y) {ConQueryMousePos517,12467
int ConShowMouse(void) {ConShowMouse523,12580
int ConHideMouse(void) {ConHideMouse527,12623
int ConMouseVisible(void) {ConMouseVisible531,12666
int ConQueryMouseButtons(int *ButtonCount) {ConQueryMouseButtons535,12711
static TEvent Prev = { evNone };Prev541,12841
int ConGetEvent(TEventMask EventMask, TEvent *Event, int WaitTime, int Delete) {ConGetEvent543,12875
int ConPutEvent(TEvent Event) {ConPutEvent605,14818
int ConFlush(void) {return 0;  }ConFlush610,14885
int ConGrabEvents(TEventMask EventMask) { return 0; }ConGrabEvents611,14918
int shift_state = 0;shift_state613,14973
int lock_state = 0;lock_state614,14994
int slock_state = 0;slock_state615,15014
char dead_key = 0;dead_key616,15035
    unsigned long KeySym;KeySym619,15077
    unsigned long KeyCode;KeyCode620,15103
} KeyTrans[] = {KeyTrans621,15130
    unsigned long KeySym;KeySym679,17722
    char Diacr;Diacr680,17748
} DeadTrans[] = {DeadTrans681,17764
int GetKeyEvent(TEvent *Event) {GetKeyEvent690,17900
int GetMouseEvent(TEvent *Event) {GetMouseEvent936,25153
int ConSetCursorSize(int Start, int End) {ConSetCursorSize996,26729
SavedScreen = 0;SavedScreen1001,26802
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SavedX1002,26819
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SavedY1002,26819
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SaveCursorPosX1002,26819
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SaveCursorPosY1002,26819
int SaveScreen() {SaveScreen1004,26879
int RestoreScreen() {RestoreScreen1018,27201
GUI::GUI(int &argc, char **argv, int XSize, int YSize) {GUI1026,27380
GUI::~GUI() {~GUI1035,27565
int GUI::ConSuspend(void) {ConSuspend1048,27719
int GUI::ConContinue(void) {ConContinue1053,27798
int GUI::ShowEntryScreen() {ShowEntryScreen1058,27876
int GUI::OpenPipe(char *Command, EModel *notify) {OpenPipe1070,28124
int GUI::SetPipeView(int id, EModel *notify) {SetPipeView1110,29199
int GUI::ReadPipe(int id, void *buffer, int len) {ReadPipe1120,29454
int GUI::ClosePipe(int id) {ClosePipe1143,29971
int GUI::RunProgram(int mode, char *Command) {RunProgram1161,30387
char ConGetDrawChar(int index) {ConGetDrawChar1184,30814

con_nt.cpp,6066
#define True True47,1618
#define False False48,1636
static int Initialized = 0;Initialized51,1656
static int MousePresent = 0;MousePresent52,1684
static int CursorVisible = 1; /* 1 means visible */CursorVisible53,1713
static int MouseVisible = 0; /* 0 means hidden */MouseVisible54,1765
static TEvent MouseEv = { evNone };MouseEv55,1815
static TEvent EventBuf = { evNone };EventBuf56,1851
static TEventMask EventMask;EventMask57,1888
static HANDLE ConOut;ConOut59,1918
static HANDLE ConIn;ConIn60,1940
static HANDLE OurConOut;OurConOut61,1961
static DWORD OldConsoleMode;OldConsoleMode62,1986
static int LastMouseX = 0;LastMouseX64,2016
static int      LastMouseY = 0;LastMouseY65,2043
static char winTitle[256] = "FTE";winTitle68,2107
static char winSTitle[256] = "FTE";winSTitle69,2142
int codepage;codepage71,2179
#define dbm(dbm73,2194
void dbg(const char* s, ...) /*FOLD00*/dbg82,2302
static void DrawCursor(int Show) { /*FOLD00*/DrawCursor95,2493
#define NUMITEMS(NUMITEMS103,2698
    USHORT CharScan;CharScan112,2989
    TKeyCode KeyCode;KeyCode113,3010
} TransCharScan[] = {TransCharScan114,3032
    SHORT VirtCode;VirtCode192,6857
    unsigned long KeyCode;KeyCode193,6877
} VirtTab[]  =VirtTab194,6904
char shftwrng[]  = "~!@#$%^&*()_+{}|:\"<>?";shftwrng229,7468
char shftright[] = "`1234567890-=[]\\;',./";shftright230,7513
int ReadConsoleEvent(TEvent *E) /*FOLD00*/ReadConsoleEvent232,7559
int ConInit(int /*XSize*/, int /*YSize*/) { /*FOLD00*/ConInit412,14241
int ConDone(void) { /*FOLD00*/ConDone441,15124
int ConSuspend(void) { /*FOLD00*/ConSuspend447,15218
int ConContinue(void) { /*FOLD00*/ConContinue453,15354
int ConClear(void) { /*FOLD00*/ConClear464,15646
int ConPutBox(int X, int Y, int W, int H, PCell Cell) /*FOLD00*/ConPutBox510,17033
int ConGetBox(int X, int Y, int W, int H, PCell Cell) /*FOLD00*/ConGetBox537,17694
int ConPutLine(int X, int Y, int W, int H, PCell Cell) /*FOLD00*/ConPutLine561,18275
int ConSetBox(int X, int Y, int W, int H, TCell Cell) /*FOLD00*/ConSetBox586,18889
int ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count) /*FOLD00*/ConScroll611,19456
int ConSetSize(int X, int Y) { /*FOLD00*/ConSetSize649,20234
int ConQuerySize(int *X, int *Y) { /*FOLD00*/ConQuerySize653,20294
int ConSetCursorPos(int X, int Y) { /*FOLD00*/ConSetCursorPos664,20537
int ConQueryCursorPos(int *X, int *Y) { /*FOLD00*/ConQueryCursorPos673,20689
int ConShowCursor(void) { /*FOLD00*/ConShowCursor682,20913
int ConHideCursor(void) { /*FOLD00*/ConHideCursor688,21009
int ConCursorVisible() { /*FOLD00*/ConCursorVisible694,21105
int ConSetCursorSize(int Start, int End) { /*FOLD00*/ConSetCursorSize698,21177
int ConSetMousePos(int X, int Y) { /*FOLD00*/ConSetMousePos702,21249
int ConQueryMousePos(int *X, int *Y) { /*FOLD00*/ConQueryMousePos706,21313
int ConShowMouse(void) { /*FOLD00*/ConShowMouse714,21505
int ConHideMouse(void) { /*FOLD00*/ConHideMouse720,21614
int ConMouseVisible() { /*FOLD00*/ConMouseVisible726,21723
int ConQueryMouseButtons(int *ButtonCount) { /*FOLD00*/ConQueryMouseButtons730,21793
int ConPutEvent(TEvent Event) { /*FOLD00*/ConPutEvent734,21866
int ConFlush(void) { /*FOLD00*/ConFlush739,21948
int ConGrabEvents(TEventMask EventMask) { /*FOLD00*/ConGrabEvents743,21997
static PCell SavedScreen = 0;SavedScreen748,22068
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SavedX749,22098
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SavedY749,22098
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SaveCursorPosX749,22098
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SaveCursorPosY749,22098
int SaveScreen() { /*FOLD00*/SaveScreen751,22158
int RestoreScreen() { /*FOLD00*/RestoreScreen765,22491
GUI::GUI(int &argc, char **argv, int XSize, int YSize) { /*FOLD00*/GUI774,22682
GUI::~GUI() { /*FOLD00*/~GUI783,22878
int GUI::ConSuspend(void) { /*FOLD00*/ConSuspend793,23007
int GUI::ConContinue(void) { /*FOLD00*/ConContinue798,23097
int GUI::ShowEntryScreen() { /*FOLD00*/ShowEntryScreen803,23186
char ConGetDrawChar(int index) { /*FOLD00*/ConGetDrawChar817,23532
int GUI::RunProgram(int mode, char *Command) { /*FOLD00*/RunProgram826,23715
int ConSetTitle(char *Title, char *STitle) { /*FOLD00*/ConSetTitle851,24210
int ConGetTitle(char *Title, int MaxLen, char *STitle, int SMaxLen) { /*FOLD00*/ConGetTitle872,24994
#define MAX_PIPES MAX_PIPES891,26131
#define PIPE_BUFLEN PIPE_BUFLEN892,26157
#define PIPEBUF_SZ PIPEBUF_SZ893,26182
#define MAX_PIPES MAX_PIPES1505,43789
#define PIPE_BUFLEN PIPE_BUFLEN1506,43809
    int used;used1509,43852
    int id;id1510,43866
    int reading, stopped;reading1511,43878
    int reading, stopped;stopped1511,43878
    HANDLE Thread;Thread1512,43904
    HANDLE Access;Access1513,43923
    HANDLE ResumeRead;ResumeRead1514,43942
    HANDLE NewData;NewData1515,43965
    char *buffer;buffer1516,43985
    int buflen;buflen1517,44003
    int bufused;bufused1518,44019
    int bufpos;bufpos1519,44036
    EModel *notify;notify1520,44052
    char *Command;Command1521,44072
    DWORD RetCode;RetCode1522,44091
    int DoTerm;DoTerm1523,44110
} GPipe;GPipe1524,44126
static GPipe Pipes[MAX_PIPES] = {Pipes1526,44136
static int CreatePipeChild(HANDLE &child, HANDLE &hPipe, char *Command) {CreatePipeChild1530,44205
static DWORD __stdcall PipeThread(void *p) {PipeThread1636,47758
int GUI::OpenPipe(char *Command, EModel *notify) {OpenPipe1695,49600
int GUI::SetPipeView(int id, EModel *notify) {SetPipeView1754,51530
int GUI::ReadPipe(int id, void *buffer, int len) {ReadPipe1766,51874
int GUI::ClosePipe(int id) {ClosePipe1807,53160
int GetPipeEvent(int i, TEvent *Event) {GetPipeEvent1829,53785
int ConGetEvent(TEventMask EventMask, TEvent *Event, int WaitTime, int Delete) /*FOLD00*/ConGetEvent1845,54195
int GetClipText(ClipData *cd) {GetClipText1901,55939
int PutClipText(ClipData *cd) {PutClipText1928,56599

con_os2.cpp,5119
#define INCL_WININCL_WIN26,466
#define INCL_SUBINCL_SUB27,483
#define INCL_KBDINCL_KBD28,500
#define INCL_VIOINCL_VIO29,517
#define INCL_MOUINCL_MOU30,534
#define INCL_BASEINCL_BASE31,551
#define INCL_DOSINCL_DOS32,569
#define INCL_DOSDEVIOCTLINCL_DOSDEVIOCTL33,586
#define MAX_PIPES MAX_PIPES42,700
#define PIPE_BUFLEN PIPE_BUFLEN43,720
    int used;used46,763
    int id;id47,777
    int reading, stopped;reading48,789
    int reading, stopped;stopped48,789
    TID tid;tid49,815
    HMTX Access;Access50,828
    HEV ResumeRead;ResumeRead51,845
    HEV NewData;NewData52,865
    char *buffer;buffer53,882
    int buflen;buflen54,900
    int bufused;bufused55,916
    int bufpos;bufpos56,933
    EModel *notify;notify57,949
    char *Command;Command58,969
    int RetCode;RetCode59,988
    int DoTerm;DoTerm60,1005
} GPipe;GPipe61,1021
static GPipe Pipes[MAX_PIPES] = {Pipes63,1031
static long MouseAutoDelay = 400;MouseAutoDelay67,1100
static long MouseAutoRepeat = 5;MouseAutoRepeat68,1134
static long MouseMultiClick = 300;MouseMultiClick69,1167
static int Initialized = 0;Initialized71,1203
static int MousePresent = 0;MousePresent72,1231
static int CursorVisible = 1; /* 1 means visible */CursorVisible73,1260
static int MouseVisible = 0; /* 0 means hidden */MouseVisible74,1312
static TEvent MouseEv = { evNone };MouseEv75,1362
static TEvent EventBuf = { evNone };EventBuf76,1398
static HMOU MouseHandle = 0;MouseHandle77,1435
static KBDINFO SaveKbdState;SaveKbdState78,1464
static void DrawCursor(int Show) {DrawCursor82,1503
static void DrawMouse(int Show) {DrawMouse92,1700
    USHORT CharScan;CharScan110,2103
    TKeyCode KeyCode;KeyCode111,2124
} TransCharScan[] = {TransCharScan112,2146
    int ScanCode;ScanCode130,3133
    TKeyCode KeyCode;KeyCode131,3151
} TransScan[] = {TransScan132,3173
int ReadKbdEvent(TEvent *Event, int Wait) {ReadKbdEvent185,5804
#define TM_DIFF(TM_DIFF253,8120
int ReadMouseEvent(TEvent *Event, ULONG EventMask) {ReadMouseEvent255,8228
int ConClear() {ConClear367,11787
int ConPutBox(int X, int Y, int W, int H, PCell Cell) {ConPutBox377,11988
int ConGetBox(int X, int Y, int W, int H, PCell Cell) {ConGetBox403,12643
int ConPutLine(int X, int Y, int W, int H, PCell Cell) {ConPutLine431,13316
int ConSetBox(int X, int Y, int W, int H, TCell Cell) {ConSetBox456,13922
int ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count) {ConScroll481,14545
int ConSetSize(int X, int Y) {ConSetSize513,15610
int ConQuerySize(int *X, int *Y) {ConQuerySize527,15891
int ConSetCursorPos(int X, int Y) {ConSetCursorPos537,16074
int ConQueryCursorPos(int *X, int *Y) {ConQueryCursorPos542,16170
int ConShowCursor() {ConShowCursor551,16318
int ConHideCursor() {ConHideCursor557,16399
int ConSetCursorSize(int Start, int End) {ConSetCursorSize563,16480
int ConSetMousePos(int X, int Y) {ConSetMousePos574,16676
int ConQueryMousePos(int *X, int *Y) {ConQueryMousePos584,16862
int ConShowMouse() {ConShowMouse594,17052
int ConHideMouse() {ConHideMouse601,17164
int ConMouseVisible() {ConMouseVisible608,17276
int ConQueryMouseButtons(int *ButtonCount) {ConQueryMouseButtons612,17335
int ConInit(int XSize, int YSize) {ConInit621,17523
int ConDone() {ConDone643,17990
int ConSuspend() {ConSuspend647,18034
int ConContinue() {ConContinue669,18455
int GetPipeEvent(TEvent *Event) {GetPipeEvent689,18876
int ConGetEvent(TEventMask EventMask, TEvent *Event, int WaitTime, int Delete) {ConGetEvent712,19524
static PCell SavedScreen = 0;SavedScreen761,21021
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SavedX762,21051
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SavedY762,21051
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SaveCursorPosX762,21051
static int SavedX, SavedY, SaveCursorPosX, SaveCursorPosY;SaveCursorPosY762,21051
int SaveScreen() {SaveScreen764,21111
int RestoreScreen() {RestoreScreen778,21433
GUI::GUI(int &argc, char **argv, int XSize, int YSize) {GUI786,21612
GUI::~GUI() {~GUI795,21797
int GUI::ConSuspend(void) {ConSuspend805,21915
int GUI::ConContinue(void) {ConContinue810,21994
int GUI::ShowEntryScreen() {ShowEntryScreen815,22072
static int CreatePipeChild(PID &pid, HPIPE &hfPipe, char *Command) {CreatePipeChild827,22320
static void _LNK_CONV PipeThread(void *p) {PipeThread931,25134
int GUI::OpenPipe(char *Command, EModel *notify) {OpenPipe994,27106
int GUI::SetPipeView(int id, EModel *notify) {SetPipeView1054,29048
int GUI::ReadPipe(int id, void *buffer, int len) {ReadPipe1066,29408
int GUI::ClosePipe(int id) {ClosePipe1107,30717
int GUI::RunProgram(int mode, char *Command) {RunProgram1128,31321
int ConSetTitle(char *Title, char *STitle) {ConSetTitle1153,31817
int ConGetTitle(char *Title, int MaxLen, char *STitle, int SMaxLen) {ConGetTitle1199,32879
int ConCursorVisible() {ConCursorVisible1205,33019
int ConPutEvent(TEvent Event) {ConPutEvent1209,33080
char ConGetDrawChar(int index) {ConGetDrawChar1216,33173

con_slang.cpp,4817
int use_esc_hack = 0;use_esc_hack10,220
#define MAX_PIPES MAX_PIPES30,534
    int used;used34,599
    int id;id35,613
    int fd;fd36,625
    int pid;pid37,637
    int stopped;stopped38,650
    EModel *notify;notify39,667
} GPipe;GPipe40,687
static GPipe Pipes[MAX_PIPES] =Pipes42,697
#define DCH_SLANG_C1 DCH_SLANG_C153,870
#define DCH_SLANG_C2 DCH_SLANG_C254,903
#define DCH_SLANG_C3 DCH_SLANG_C355,936
#define DCH_SLANG_C4 DCH_SLANG_C456,969
#define DCH_SLANG_H DCH_SLANG_H57,1002
#define DCH_SLANG_V DCH_SLANG_V58,1035
#define DCH_SLANG_M1 DCH_SLANG_M159,1068
#define DCH_SLANG_M2 DCH_SLANG_M260,1101
#define DCH_SLANG_M3 DCH_SLANG_M361,1134
#define DCH_SLANG_M4 DCH_SLANG_M462,1167
#define DCH_SLANG_X DCH_SLANG_X63,1200
#define DCH_SLANG_RPTR DCH_SLANG_RPTR64,1233
#define DCH_SLANG_EOL DCH_SLANG_EOL65,1266
#define DCH_SLANG_EOF DCH_SLANG_EOF66,1299
#define DCH_SLANG_END DCH_SLANG_END67,1332
#define DCH_SLANG_AUP DCH_SLANG_AUP68,1365
#define DCH_SLANG_ADOWN DCH_SLANG_ADOWN69,1398
#define DCH_SLANG_HFORE DCH_SLANG_HFORE70,1431
#define DCH_SLANG_HBACK DCH_SLANG_HBACK71,1464
#define DCH_SLANG_ALEFT DCH_SLANG_ALEFT72,1497
#define DCH_SLANG_ARIGHT DCH_SLANG_ARIGHT73,1530
static char slang_dchs[] =slang_dchs75,1564
static char raw_dchs[sizeof(slang_dchs)];raw_dchs100,1785
unsigned char ftesl_get_dch(char raw)ftesl_get_dch102,1828
static const char *slang_colors[] =slang_colors110,2007
#define FTESL_KEY FTESL_KEY134,2345
#define FTESL_KEY_SHIFT FTESL_KEY_SHIFT135,2409
#define FTESL_KEY_CTRL FTESL_KEY_CTRL136,2468
#define FTESL_KEY_ALT FTESL_KEY_ALT137,2526
#define FTESL_KEY_GRAY FTESL_KEY_GRAY138,2583
#define FTESL_KEY_ENTER FTESL_KEY_ENTER140,2637
#define FTESL_KEY_TAB FTESL_KEY_TAB141,2669
#define FTESL_KEY_ESC FTESL_KEY_ESC142,2701
#define FTESL_KEY_BACKSP FTESL_KEY_BACKSP143,2733
#define FTESL_KEY_CTRLAND(FTESL_KEY_CTRLAND145,2766
static TKeyCode speckeys[] =speckeys147,2809
int ConInit(int /*XSize */ , int /*YSize */ )ConInit213,3752
int ConDone(void)ConDone257,4656
int ConSuspend(void)ConSuspend264,4739
int ConContinue(void)ConContinue270,4826
int ConSetTitle(char * /*Title */ , char * /*STitle */ )ConSetTitle277,4921
int ConGetTitle(char *Title, int /*MaxLen */ConGetTitle282,4997
int ConClear()ConClear289,5124
static void fte_write_color_chars(PCell Cell, int W)fte_write_color_chars296,5196
int ConPutBox(int X, int Y, int W, int H, PCell Cell)ConPutBox345,6049
int ConPutBoxRaw(int X, int Y, int W, int H, unsigned short *box)ConPutBoxRaw362,6335
int ConGetBox(int X, int Y, int W, int H, PCell Cell)ConGetBox379,6605
int ConGetBoxRaw(int X, int Y, int W, int H, unsigned short *box)ConGetBoxRaw403,7017
int ConPutLine(int X, int Y, int W, int H, PCell Cell)ConPutLine420,7286
int ConSetBox(int X, int Y, int W, int H, TCell Cell)ConSetBox436,7559
int ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count)ConScroll450,7795
int ConSetSize(int /*X */ , int /*Y */ )ConSetSize473,8280
int ConQuerySize(int *X, int *Y)ConQuerySize478,8341
int ConSetCursorPos(int X, int Y)ConSetCursorPos485,8447
int ConQueryCursorPos(int *X, int *Y)ConQueryCursorPos492,8545
int CurVis = 1;CurVis499,8657
int ConShowCursor()ConShowCursor501,8674
int ConHideCursor()ConHideCursor507,8763
int ConCursorVisible()ConCursorVisible513,8852
int ConSetCursorSize(int /*Start */ , int /*End */ )ConSetCursorSize518,8899
int ConSetMousePos(int /*X */ , int /*Y */ )ConSetMousePos523,8971
int ConQueryMousePos(int *X, int *Y)ConQueryMousePos527,9035
int ConShowMouse()ConShowMouse534,9115
int ConHideMouse()ConHideMouse539,9154
int ConMouseVisible()ConMouseVisible544,9193
int ConQueryMouseButtons(int *ButtonCount)ConQueryMouseButtons549,9234
static TEvent Prev =Prev555,9318
static TKeyCode keys_ctrlhack[] =keys_ctrlhack558,9350
static TKeyCode ftesl_getftekey(unsigned char key)ftesl_getftekey593,9753
static TKeyCode ftesl_process_key(int key, int ctrlhack = 0)ftesl_process_key604,9923
int ConGetEvent(TEventMask /*EventMask */ ,ConGetEvent690,11705
int ConPutEvent(TEvent Event)ConPutEvent827,14444
GUI::GUI(int &argc, char **argv, int XSize, int YSize)GUI833,14511
GUI::~GUI()~GUI842,14678
int GUI::ConSuspend(void)ConSuspend848,14725
int GUI::ConContinue(void)ConContinue853,14782
int GUI::ShowEntryScreen()ShowEntryScreen858,14841
int GUI::OpenPipe(char *Command, EModel * notify)OpenPipe872,15066
int GUI::SetPipeView(int id, EModel * notify)SetPipeView910,15748
int GUI::ReadPipe(int id, void *buffer, int len)ReadPipe921,15932
int GUI::ClosePipe(int id)ClosePipe943,16284
int GUI::RunProgram(int /*mode */ , char *Command)RunProgram962,16633
char ConGetDrawChar(int index)ConGetDrawChar986,17052

con_x11.cpp,6391
#define NO_PIPESNO_PIPES16,365
#define NO_SIGNALSNO_SIGNALS17,382
XIC xic = NULL;xic51,979
#define FD_SET_CAST(FD_SET_CAST58,1095
#define FD_SET_CAST(FD_SET_CAST60,1131
#define MIN_SCRWIDTH MIN_SCRWIDTH63,1161
#define MIN_SCRHEIGHT MIN_SCRHEIGHT64,1185
#define MAX_PIPES MAX_PIPES66,1210
    int used;used70,1276
    int id;id71,1290
    int fd;fd72,1302
    int pid;pid73,1314
    int stopped;stopped74,1327
    EModel *notify;notify75,1344
} GPipe;GPipe76,1364
static GPipe Pipes[MAX_PIPES] = {Pipes78,1374
static long MouseAutoDelay = 40;MouseAutoDelay82,1423
static long MouseAutoRepeat = 200;MouseAutoRepeat83,1456
static long MouseMultiClick = 300;MouseMultiClick84,1491
static int setUserPosition = 0;setUserPosition86,1527
static int initX = 0, initY = 0;initX87,1559
static int initX = 0, initY = 0;initY87,1559
static unsigned int ScreenCols = 80;ScreenCols88,1592
static unsigned int ScreenRows = 40;ScreenRows89,1629
static unsigned int CursorX = 0;CursorX90,1666
static unsigned int CursorY = 0;CursorY91,1699
static int CursorVisible = 1;CursorVisible92,1732
static unsigned char *ScreenBuffer = NULL;ScreenBuffer93,1762
static int Refresh = 0;Refresh94,1805
static Display *display;display96,1830
static Colormap colormap;colormap97,1855
static Atom wm_protocols;wm_protocols98,1881
static Atom wm_delete_window;wm_delete_window99,1907
static Atom targets;targets100,1937
static Window win;win101,1958
static Atom selection_buffer;selection_buffer102,1977
static XSizeHints sizeHints;sizeHints103,2007
static XFontStruct *fontStruct;fontStruct106,2129
static int useXMB = 1; // default is yesuseXMB108,2176
static XFontSet fontSet;fontSet109,2217
static int FontCYD;FontCYD110,2242
static int useXMB = 0;useXMB112,2268
static int FontCX, FontCY;FontCX114,2298
static int FontCX, FontCY;FontCY114,2298
static XColor Colors[16];Colors115,2325
static GC GCs[256];GCs116,2351
static int rc;rc117,2371
static char winTitle[256] = "FTE";winTitle118,2386
static char winSTitle[256] = "FTE";winSTitle119,2421
static char *CurSelectionData = 0;CurSelectionData121,2458
static int CurSelectionLen = 0;CurSelectionLen122,2493
static int CurSelectionOwn = 0;CurSelectionOwn123,2525
static Time now;now124,2557
static int AllocBuffer() {AllocBuffer126,2575
    int r, g, b;r140,2908
    int r, g, b;g140,2908
    int r, g, b;b140,2908
} dcolors[] =dcolors141,2925
static void SetColor(int i) {SetColor161,3533
static int InitXColors() {InitXColors169,3820
static int InitXGCs() {InitXGCs236,6122
static int InitXFonts(void)InitXFonts255,6532
static int SetupXWindow(int argc, char **argv) {SetupXWindow337,8837
int ConInit(int XSize, int YSize) {ConInit429,12290
int ConDone(void) {ConDone442,12567
int ConSuspend(void) {ConSuspend448,12666
int ConContinue(void) {ConContinue452,12706
int ConClear(void) {ConClear456,12747
int ConSetTitle(char *Title, char *STitle) {ConSetTitle462,12884
int ConGetTitle(char *Title, int MaxLen, char *STitle, int SMaxLen) {ConGetTitle482,13705
#define InRange(InRange490,13927
#define CursorXYPos(CursorXYPos491,13980
void DrawCursor(int Show) {DrawCursor493,14054
int ConPutBox(int X, int Y, int W, int H, PCell Cell) {ConPutBox516,14867
int ConGetBox(int X, int Y, int W, int H, PCell Cell) {ConGetBox596,17464
int ConPutLine(int X, int Y, int W, int H, PCell Cell) {ConPutLine606,17656
int ConSetBox(int X, int Y, int W, int H, TCell Cell) {ConSetBox614,17838
int ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count) {ConScroll624,18015
int ConSetSize(int X, int Y) {ConSetSize661,19073
int ConQuerySize(int *X, int *Y) {ConQuerySize694,19859
int ConSetCursorPos(int X, int Y) {ConSetCursorPos700,19953
int ConQueryCursorPos(int *X, int *Y) {ConQueryCursorPos708,20078
int ConShowCursor(void) {ConShowCursor714,20171
int ConHideCursor(void) {ConHideCursor720,20256
int ConCursorVisible(void) {ConCursorVisible726,20341
int ConSetCursorSize(int Start, int End) {ConSetCursorSize729,20386
int ConSetMousePos(int X, int Y) {ConSetMousePos733,20446
static int LastMouseX = -1, LastMouseY = -1;LastMouseX737,20498
static int LastMouseX = -1, LastMouseY = -1;LastMouseY737,20498
int ConQueryMousePos(int *X, int *Y) {ConQueryMousePos739,20544
int ConShowMouse(void) {ConShowMouse745,20656
int ConHideMouse(void) {ConHideMouse750,20720
int ConMouseVisible(void) {ConMouseVisible755,20784
int ConQueryMouseButtons(int *ButtonCount) {ConQueryMouseButtons759,20829
void UpdateWindow(int xx, int yy, int ww, int hh) {UpdateWindow764,20913
void ResizeWindow(int ww, int hh) {ResizeWindow808,22090
    long keysym;keysym828,22728
    long keycode;keycode829,22745
} key_table[] = {key_table830,22763
void ConvertKeyToEvent(KeySym key, KeySym key1, char *keyname, char *keyname1, int etype, int state, TEvent *Event) {ConvertKeyToEvent905,25610
static TEvent LastMouseEvent = { evNone };LastMouseEvent959,27263
#define TM_DIFF(TM_DIFF961,27307
void ConvertClickToEvent(int type, int xx, int yy, int button, int state, TEvent *Event, Time time) {ConvertClickToEvent963,27415
void ProcessXEvents(TEvent *Event) {ProcessXEvents1050,30405
static TEvent Pending = { evNone };Pending1242,37437
int ConGetEvent(TEventMask EventMask, TEvent *Event, int WaitTime, int Delete) {ConGetEvent1244,37474
int ConPutEvent(TEvent Event) {ConPutEvent1362,41768
int ConFlush(void) {ConFlush1367,41838
int ConGrabEvents(TEventMask EventMask) {ConGrabEvents1372,41897
int GetXSelection(int *len, char **data) {GetXSelection1376,41956
int SetXSelection(int len, char *data) {SetXSelection1448,44159
GUI::GUI(int &argc, char **argv, int XSize, int YSize) {GUI1470,44812
GUI::~GUI() {~GUI1511,46054
int GUI::ConSuspend(void) {ConSuspend1515,46088
int GUI::ConContinue(void) {ConContinue1519,46146
int GUI::ShowEntryScreen() {ShowEntryScreen1523,46206
int GUI::OpenPipe(char *Command, EModel *notify) {OpenPipe1527,46252
int GUI::SetPipeView(int id, EModel *notify) {SetPipeView1570,47351
int GUI::ReadPipe(int id, void *buffer, int len) {ReadPipe1582,47630
int GUI::ClosePipe(int id) {ClosePipe1609,48191
int GUI::RunProgram(int mode, char *Command) {RunProgram1631,48646
char ConGetDrawChar(int index) {ConGetDrawChar1654,49218

e_block.cpp,2519
int EBuffer::SetBB(EPoint M) {SetBB16,480
int EBuffer::SetBE(EPoint M) {SetBE34,952
int EBuffer::CheckBlock() {CheckBlock52,1424
int EBuffer::BlockRedraw() {BlockRedraw79,2105
int EBuffer::BlockBegin() {BlockBegin86,2226
int EBuffer::BlockEnd() {BlockEnd96,2364
int EBuffer::BlockUnmark() {BlockUnmark106,2500
int EBuffer::BlockCut(int Append) {BlockCut116,2640
int EBuffer::BlockCopy(int Append) {BlockCopy121,2745
int EBuffer::BlockPasteStream() {BlockPasteStream186,4869
int EBuffer::BlockPasteLine() {BlockPasteLine191,4957
int EBuffer::BlockPasteColumn() {BlockPasteColumn196,5041
int EBuffer::BlockPaste() {BlockPaste201,5129
int EBuffer::BlockKill() {BlockKill271,7225
int EBuffer::ClipClear() {ClipClear360,10007
int EBuffer::BlockIndent() {BlockIndent369,10161
int EBuffer::BlockUnindent() {BlockUnindent401,10949
int EBuffer::BlockClear() {BlockClear434,11771
int EBuffer::BlockMarkStream() {BlockMarkStream438,11816
int EBuffer::BlockMarkLine() {BlockMarkLine449,12037
int EBuffer::BlockMarkColumn() {BlockMarkColumn460,12252
int EBuffer::BlockExtendBegin() {BlockExtendBegin471,12473
int EBuffer::BlockExtendEnd() {BlockExtendEnd505,13330
int EBuffer::BlockIsMarked() {BlockIsMarked559,14630
int EBuffer::BlockReIndent() {BlockReIndent564,14766
int EBuffer::BlockSelectWord() {BlockSelectWord581,15137
int EBuffer::BlockSelectLine() {BlockSelectLine602,15664
int EBuffer::BlockSelectPara() {BlockSelectPara616,16004
int EBuffer::BlockWriteTo(char *AFileName, int Append) {BlockWriteTo620,16054
int EBuffer::BlockReadFrom(char *AFileName, int blockMode) {BlockReadFrom712,18658
static EBuffer *SortBuffer;SortBuffer748,19462
static int SortReverse;SortReverse749,19490
static int *SortRows = 0;SortRows750,19514
static int SortMinRow;SortMinRow751,19540
static int SortMaxRow;SortMaxRow752,19563
static int SortMinCol;SortMinCol753,19586
static int SortMaxCol;SortMaxCol754,19609
static int _LNK_CONV SortProc(const void *A, const void *B) {SortProc756,19633
int EBuffer::BlockSort(int Reverse) {BlockSort816,21348
int EBuffer::BlockUnTab() {BlockUnTab874,22748
int EBuffer::BlockEnTab() {BlockEnTab907,23467
int EBuffer::FindFunction(int delta, int way) {FindFunction976,25547
int EBuffer::BlockMarkFunction() {BlockMarkFunction1013,26651
int EBuffer::IndentFunction() {IndentFunction1034,27072
int EBuffer::MoveFunctionPrev() {MoveFunctionPrev1053,27470
int EBuffer::MoveFunctionNext() {MoveFunctionNext1062,27616

e_buffer.cpp,2677
EBuffer *SSBuffer = 0; // scrap buffer (clipboard)SSBuffer12,240
EBuffer::EBuffer(int createFlags, EModel **ARoot, const char * /*AName*/)EBuffer16,373
EBuffer::~EBuffer() {~EBuffer81,1853
void EBuffer::DeleteRelated() {DeleteRelated113,2486
int EBuffer::Clear() {Clear122,2647
int EBuffer::FreeUndo() {FreeUndo170,3446
int EBuffer::Modify() {Modify185,3701
int EBuffer::LoadRegion(EPoint * /*A*/, int /*FH*/, int /*StripChar*/, int /*LineChar*/) {LoadRegion226,4980
int EBuffer::InsertLine(EPoint Pos, int ACount, char *AChars) {InsertLine230,5088
int EBuffer::UpdateMark(EPoint &M, int Type, int Row, int Col, int Rows, int Cols) {UpdateMark237,5280
int EBuffer::UpdateMarker(int Type, int Row, int Col, int Rows, int Cols) {UpdateMarker328,7736
int EBuffer::ValidPos(EPoint Pos) {ValidPos393,9491
int EBuffer::RValidPos(EPoint Pos) {RValidPos401,9642
int EBuffer::AssertLine(int Row) {AssertLine409,9794
int EBuffer::SetFileName(const char *AFileName, const char *AMode) {SetFileName415,9915
int EBuffer::SetPos(int Col, int Row, int tabMode) {SetPos436,10425
int EBuffer::SetPosR(int Col, int Row, int tabMode) {SetPosR476,11605
int EBuffer::SetNearPos(int Col, int Row, int tabMode) {SetNearPos489,11871
int EBuffer::SetNearPosR(int Col, int Row, int tabMode) {SetNearPosR496,12062
int EBuffer::CenterPos(int Col, int Row, int tabMode) {CenterPos503,12255
int EBuffer::CenterPosR(int Col, int Row, int tabMode) {CenterPosR518,12703
int EBuffer::CenterNearPos(int Col, int Row, int tabMode) {CenterNearPos530,12971
int EBuffer::CenterNearPosR(int Col, int Row, int tabMode) {CenterNearPosR537,13168
int EBuffer::LineLen(int Row) {LineLen544,13367
int EBuffer::LineChars(int Row) {LineChars550,13502
int EBuffer::DelLine(int Row, int DoMark) {DelLine555,13607
int EBuffer::InsLine(int Row, int DoAppend, int DoMark) {InsLine623,15477
int EBuffer::DelChars(int Row, int Ofs, int ACount) {DelChars692,17432
int EBuffer::InsChars(int Row, int Ofs, int ACount, char *Buffer) {InsChars728,18431
int EBuffer::UnTabPoint(int Row, int Col) {UnTabPoint764,19417
int EBuffer::ChgChars(int Row, int Ofs, int ACount, char * /*Buffer*/) {ChgChars786,19958
int EBuffer::DelText(int Row, int Col, int ACount, int DoMark) {DelText816,20811
int EBuffer::InsText(int Row, int Col, int ACount, char *ABuffer, int DoMark) {InsText844,21605
int EBuffer::PadLine(int Row, int Length) {PadLine865,22274
int EBuffer::InsLineText(int Row, int Col, int ACount, int LCol, PELine Line) {InsLineText875,22483
int EBuffer::SplitLine(int Row, int Col) {SplitLine919,23904
int EBuffer::JoinLine(int Row, int Col) {JoinLine960,25079

e_cmds.cpp,7373
int EBuffer::MoveLeft() {MoveLeft12,238
int EBuffer::MoveRight() {MoveRight18,352
int EBuffer::MoveUp() {MoveUp23,437
int EBuffer::MoveDown() {MoveDown29,549
int EBuffer::MovePrev() {MovePrev35,672
int EBuffer::MoveNext() {MoveNext41,790
int EBuffer::MoveWordLeftX(int start) {MoveWordLeftX49,946
int EBuffer::MoveWordRightX(int start) {MoveWordRightX69,1522
int EBuffer::MoveWordLeft() {MoveWordLeft85,1953
int EBuffer::MoveWordRight() {MoveWordRight89,2015
int EBuffer::MoveWordPrev() {MoveWordPrev93,2079
int EBuffer::MoveWordNext() {MoveWordNext99,2205
int EBuffer::MoveWordEndLeft() {MoveWordEndLeft105,2336
int EBuffer::MoveWordEndRight() {MoveWordEndRight109,2401
int EBuffer::MoveWordEndPrev() {MoveWordEndPrev113,2468
int EBuffer::MoveWordEndNext() {MoveWordEndNext119,2600
int EBuffer::MoveWordOrCapLeft() {MoveWordOrCapLeft125,2737
int EBuffer::MoveWordOrCapRight() {MoveWordOrCapRight144,3408
int EBuffer::MoveWordOrCapPrev() {MoveWordOrCapPrev160,3930
int EBuffer::MoveWordOrCapNext() {MoveWordOrCapNext166,4066
int EBuffer::MoveWordOrCapEndLeft() {MoveWordOrCapEndLeft172,4207
int EBuffer::MoveWordOrCapEndRight() {MoveWordOrCapEndRight191,4873
int EBuffer::MoveWordOrCapEndPrev() {MoveWordOrCapEndPrev207,5398
int EBuffer::MoveWordOrCapEndNext() {MoveWordOrCapEndNext213,5540
int EBuffer::MoveLineStart() {MoveLineStart219,5687
int EBuffer::MoveLineEnd() {MoveLineEnd224,5758
int EBuffer::MovePageUp() {MovePageUp229,5847
int EBuffer::MovePageDown() {MovePageDown233,5919
int EBuffer::MovePageLeft() {MovePageLeft237,5991
int EBuffer::MovePageRight() {MovePageRight241,6066
int EBuffer::MovePageStart() {MovePageStart245,6142
int EBuffer::MovePageEnd() {MovePageEnd250,6238
int EBuffer::MoveFileStart() {MoveFileStart257,6390
int EBuffer::MoveFileEnd() {MoveFileEnd262,6456
int EBuffer::MoveBlockStart() {MoveBlockStart267,6553
int EBuffer::MoveBlockEnd() {MoveBlockEnd276,6768
int EBuffer::MoveFirstNonWhite() {MoveFirstNonWhite285,6981
int EBuffer::MoveLastNonWhite() {MoveLastNonWhite299,7310
int EBuffer::MovePrevEqualIndent() {MovePrevEqualIndent312,7612
int EBuffer::MoveNextEqualIndent() {MoveNextEqualIndent322,7842
int EBuffer::MoveNextTab() {MoveNextTab332,8080
int EBuffer::MovePrevTab() {MovePrevTab339,8211
int EBuffer::MoveLineTop() {MoveLineTop348,8413
int EBuffer::MoveLineCenter() {MoveLineCenter354,8548
int EBuffer::MoveLineBottom() {MoveLineBottom364,8779
int EBuffer::MovePrevPos() {MovePrevPos374,9010
int EBuffer::MoveSavedPosCol() {MoveSavedPosCol380,9172
int EBuffer::MoveSavedPosRow() {MoveSavedPosRow386,9313
int EBuffer::MoveSavedPos() {MoveSavedPos392,9455
int EBuffer::SavePos() {SavePos398,9622
int EBuffer::MoveTabStart() {MoveTabStart404,9716
int EBuffer::MoveTabEnd() {MoveTabEnd414,9937
int EBuffer::ScrollLeft(int Cols) {ScrollLeft425,10206
int EBuffer::ScrollRight(int Cols) {  ScrollRight432,10430
int EBuffer::ScrollDown(int Lines) {ScrollDown439,10657
int EBuffer::ScrollUp(int Lines) {ScrollUp446,10884
int EBuffer::MoveBeginOrNonWhite() {MoveBeginOrNonWhite453,11109
int EBuffer::MoveBeginLinePageFile() {MoveBeginLinePageFile460,11247
int EBuffer::MoveEndLinePageFile() {MoveEndLinePageFile471,11489
int EBuffer::KillLine() {KillLine483,11786
int EBuffer::KillChar() {KillChar493,11981
int EBuffer::KillCharPrev() {KillCharPrev501,12162
int EBuffer::KillWord() {KillWord515,12526
int EBuffer::KillWordPrev() {KillWordPrev532,12979
int EBuffer::KillWordOrCap() {KillWordOrCap553,13570
int EBuffer::KillWordOrCapPrev() {KillWordOrCapPrev574,14355
int EBuffer::KillToLineStart() {KillToLineStart599,15275
int EBuffer::KillToLineEnd() {KillToLineEnd606,15437
int EBuffer::KillBlock() {KillBlock612,15569
int EBuffer::KillBlockOrChar() {KillBlockOrChar616,15623
int EBuffer::KillBlockOrCharPrev() {KillBlockOrCharPrev623,15750
int EBuffer::BackSpace() {BackSpace630,15885
int EBuffer::Delete() {Delete685,17759
int EBuffer::LineInsert() {LineInsert717,18722
int EBuffer::LineAdd() {LineAdd722,18811
int EBuffer::LineSplit() {LineSplit727,18911
int EBuffer::LineJoin() {LineJoin734,19084
int EBuffer::LineNew() {LineNew739,19177
int EBuffer::LineIndent() {LineIndent767,19764
int EBuffer::LineLen() {LineLen792,20410
int EBuffer::LineCount() {LineCount796,20472
int EBuffer::CLine() {CLine801,20541
int EBuffer::CColumn() {CColumn806,20612
int EBuffer::InsertChar(char aCh) {InsertChar810,20659
int EBuffer::TypeChar(char aCh) { // does abbrev expansion if appropriateTypeChar814,20732
int EBuffer::InsertString(char *aStr, int aCount) {InsertString871,22926
int EBuffer::InsertSpacesToTab(int TSize) {InsertSpacesToTab928,24599
int EBuffer::InsertTab() {InsertTab949,25177
int EBuffer::InsertSpace() {InsertSpace954,25307
int EBuffer::LineIndented(int Row) {LineIndented958,25364
int EBuffer::IndentLine(int Row, int Indent) {IndentLine977,25798
int EBuffer::CanUndo() {CanUndo1007,26650
int EBuffer::CanRedo() {CanRedo1013,26786
int EBuffer::IsLineBlank(int Row) {IsLineBlank1020,26934
#define WFAIL(WFAIL1031,27163
int EBuffer::DoWrap(int WrapAll) {DoWrap1033,27239
int EBuffer::WrapPara() {WrapPara1144,30827
int EBuffer::LineCenter() {LineCenter1151,31007
int EBuffer::InsPrevLineChar() {InsPrevLineChar1166,31413
int EBuffer::InsPrevLineToEol() {InsPrevLineToEol1180,31685
int EBuffer::LineDuplicate() {LineDuplicate1195,31991
int EBuffer::TrimLine(int Row) {TrimLine1202,32180
int EBuffer::LineTrim() {LineTrim1217,32550
int EBuffer::FileTrim() {FileTrim1221,32614
int EBuffer::BlockTrim() {BlockTrim1228,32746
#define TOGGLE(TOGGLE1256,33352
#define TOGGLE_R(TOGGLE_R1261,33518
int EBuffer::ToggleAutoIndent() { TOGGLE(AutoIndent); }ToggleAutoIndent1268,33707
int EBuffer::ToggleInsert() { TOGGLE(Insert); }ToggleInsert1269,33763
int EBuffer::ToggleExpandTabs() { TOGGLE_R(ExpandTabs); }ToggleExpandTabs1270,33811
int EBuffer::ToggleShowTabs() { TOGGLE_R(ShowTabs); }ToggleShowTabs1271,33869
int EBuffer::ToggleUndo() { FreeUndo(); TOGGLE(Undo); }ToggleUndo1272,33923
int EBuffer::ToggleReadOnly() { TOGGLE(ReadOnly); }ToggleReadOnly1273,33979
int EBuffer::ToggleKeepBackups() { TOGGLE(KeepBackups); }ToggleKeepBackups1274,34031
int EBuffer::ToggleMatchCase() { TOGGLE(MatchCase); }ToggleMatchCase1275,34089
int EBuffer::ToggleBackSpKillTab() { TOGGLE(BackSpKillTab); }ToggleBackSpKillTab1276,34143
int EBuffer::ToggleDeleteKillTab() { TOGGLE(DeleteKillTab); }ToggleDeleteKillTab1277,34205
int EBuffer::ToggleSpaceTabs() { TOGGLE(SpaceTabs); }ToggleSpaceTabs1278,34267
int EBuffer::ToggleIndentWithTabs() { TOGGLE(IndentWithTabs); }ToggleIndentWithTabs1279,34321
int EBuffer::ToggleBackSpUnindents() { TOGGLE(BackSpUnindents); }ToggleBackSpUnindents1280,34385
int EBuffer::ToggleTrim() { TOGGLE(Trim); }ToggleTrim1281,34451
int EBuffer::ToggleShowMarkers() { TOGGLE_R(ShowMarkers); }ToggleShowMarkers1282,34495
int EBuffer::ToggleWordWrap() { ToggleWordWrap1284,34556
int EBuffer::SetLeftMargin() {SetLeftMargin1293,34826
int EBuffer::SetRightMargin() {SetRightMargin1299,34987
int EBuffer::ChangeMode(char *AMode) {ChangeMode1305,35152
int EBuffer::ChangeKeys(char *AMode) {ChangeKeys1319,35525
int EBuffer::ChangeFlags(char *AMode) {ChangeFlags1332,35869

e_djgpp2.cpp,78
int EView::SysShowHelp(ExState &State, const char *word) {SysShowHelp15,344

e_file.cpp,265
EBuffer *FindFile(char *FileName) {FindFile12,238
int FileLoad(int createFlags, const char *FileName, const char *Mode, EView *View) {FileLoad43,927
int MultiFileLoad(int createFlags, const char *FileName, const char *Mode, EView *View) {MultiFileLoad67,1532

e_fold.cpp,1589
int EBuffer::FindFold(int Line) { // optimize /*FOLD00*/FindFold12,238
int EBuffer::FindNearFold(int Line) { /*FOLD00*/FindNearFold20,416
int EBuffer::ShowRow(int Row) { /*FOLD00*/ShowRow45,1023
int EBuffer::HideRow(int Row) { /*FOLD00*/HideRow80,1987
int EBuffer::ExposeRow(int Row) { /*FOLD00*/ExposeRow112,2912
void EBuffer::UpdateVis(EPoint &M, int Row, int Delta) { /*FOLD00*/UpdateVis148,3701
void EBuffer::UpdateVisible(int Row, int Delta) { /*FOLD00*/UpdateVisible161,4006
int EBuffer::FoldCreate(int Line) { /*FOLD00*/FoldCreate174,4317
int EBuffer::FoldCreateByRegexp(char *Regexp) { /*FOLD00*/FoldCreateByRegexp202,4968
int EBuffer::FoldCreateAtRoutines() { /*FOLD00*/FoldCreateAtRoutines250,6292
int EBuffer::FoldDestroy(int Line) { /*FOLD00*/FoldDestroy256,6466
int EBuffer::FoldDestroyAll() { /*FOLD00*/FoldDestroyAll280,7079
int EBuffer::FoldPromote(int Line) { /*FOLD00*/FoldPromote291,7296
int EBuffer::FoldDemote(int Line) { /*FOLD00*/FoldDemote315,7810
int EBuffer::FoldOpen(int Line) { /*FOLD00*/FoldOpen338,8322
int EBuffer::FoldOpenAll() { /*FOLD00*/FoldOpenAll389,9736
int EBuffer::FoldOpenNested() { /*FOLD00*/FoldOpenNested398,9913
int EBuffer::FoldClose(int Line) { /*FOLD00*/FoldClose420,10416
int EBuffer::FoldCloseAll() { /*FOLD00*/FoldCloseAll466,11587
int EBuffer::FoldToggleOpenClose() { /*FOLD00*/FoldToggleOpenClose475,11771
int EBuffer::MoveFoldTop() { /*FOLD00*/MoveFoldTop490,12068
int EBuffer::MoveFoldPrev() { /*FOLD00*/MoveFoldPrev501,12318
int EBuffer::MoveFoldNext() { /*FOLD00*/MoveFoldNext518,12706

egui.cpp,3054
int LastEventChar = -1;LastEventChar12,236
EFrame::EFrame(int XSize, int YSize): GFrame(XSize, YSize) {EFrame14,261
EFrame::~EFrame() {~EFrame20,374
void EFrame::Update() {Update23,397
void EFrame::UpdateMenu() {UpdateMenu40,878
EGUI::EGUI(int &argc, char **argv, int XSize, int YSize): GUI(argc, argv, XSize, YSize) {EGUI72,1553
EGUI::~EGUI() {~EGUI78,1711
int EGUI::ExecCommand(GxView *view, int Command, ExState &State) {ExecCommand81,1730
int EGUI::BeginMacro(GxView *view) {BeginMacro146,4130
int EGUI::ExecMacro(GxView *view, int Macro) {ExecMacro151,4208
void EGUI::SetMsg(char *Msg) {SetMsg183,4941
void EGUI::SetOverrideMap(EKeyMap *aMap, char *ModeName) {SetOverrideMap197,5233
void EGUI::SetMap(EKeyMap *aMap, KeySel *ks) {SetMap205,5392
void EGUI::DispatchKey(GxView *view, TEvent &Event) {DispatchKey219,5644
void EGUI::DispatchCommand(GxView *view, TEvent &Event) {DispatchCommand286,7454
void EGUI::DispatchEvent(GFrame *frame, GView *view, TEvent &Event) {DispatchEvent303,7970
int EGUI::WinNext(GxView *view) {WinNext344,9285
int EGUI::WinPrev(GxView *view) {WinPrev349,9369
int EGUI::FileCloseX(EView *View, int CreateNew, int XClose) {FileCloseX354,9453
int EGUI::FileClose(EView *View, ExState &State) {FileClose396,10518
int EGUI::FileCloseAll(EView *View, ExState &State) {FileCloseAll405,10691
int EGUI::WinHSplit(GxView *View) {WinHSplit416,10924
int EGUI::WinClose(GxView *V) {WinClose440,11388
int EGUI::WinZoom(GxView *View) {WinZoom454,11709
int EGUI::WinResize(ExState &State, GxView *View) {WinResize468,11923
int EGUI::ExitEditor(EView *View) {ExitEditor478,12124
int EGUI::ShowEntryScreen() {ShowEntryScreen535,13637
int EGUI::RunProgram(ExState &State, GxView *view) {RunProgram539,13705
int EGUI::RunProgramAsync(ExState &State, GxView *view) {RunProgramAsync551,14049
int EGUI::MainMenu(ExState &State, GxView *View) {MainMenu563,14399
int EGUI::ShowMenu(ExState &State, GxView *View) {ShowMenu573,14589
int EGUI::LocalMenu(GxView *View) {LocalMenu583,14795
int EGUI::DesktopSaveAs(ExState &State, GxView *view) {DesktopSaveAs595,15056
int EGUI::FrameNew() {FrameNew605,15419
int EGUI::FrameClose(GxView *View) {FrameClose630,15892
int EGUI::FrameNext(GxView *View) {FrameNext644,16169
int EGUI::FramePrev(GxView *View) {FramePrev652,16314
int EGUI::findDesktop(char *argv[]) {findDesktop661,16481
void EGUI::DoLoadDesktopOnEntry(int &/*argc*/, char **argv) {DoLoadDesktopOnEntry727,18897
void EGUI::EditorInit() {EditorInit743,19321
int EGUI::InterfaceInit(int &argc, char **argv) {InterfaceInit750,19523
void EGUI::DoLoadHistoryOnEntry(int &argc, char **argv) {DoLoadHistoryOnEntry757,19687
void EGUI::DoSaveHistoryOnExit() {DoSaveHistoryOnExit780,20266
int EGUI::CmdLoadFiles(int &argc, char **argv) {CmdLoadFiles789,20460
int EGUI::Start(int &argc, char **argv) {Start890,24168
void EGUI::EditorCleanup() {EditorCleanup932,24948
void EGUI::InterfaceCleanup() {InterfaceCleanup961,25453
void EGUI::Stop() {Stop966,25530

e_line.cpp,631
ELine::ELine(int ACount, char *AChars) {ELine12,238
ELine::ELine(char *AChars, int ACount) {ELine25,492
ELine::~ELine() {~ELine33,627
int ELine::Allocate(unsigned int Bytes) { Allocate38,677
int EBuffer::ScreenPos(ELine *L, int Offset) {ScreenPos51,976
int EBuffer::CharOffset(ELine *L, int ScreenPos) {CharOffset85,1789
int EBuffer::Allocate(int ACount) {Allocate111,2389
int EBuffer::MoveRGap(int RPos) {MoveRGap122,2611
int EBuffer::AllocVis(int ACount) {AllocVis149,3293
int EBuffer::MoveVGap(int VPos) {MoveVGap159,3498
int EBuffer::RToV(int No) {RToV186,4186
int EBuffer::RToVN(int No) {RToVN207,4640

e_loadsave.cpp,265
int EBuffer::Load() {Load12,242
int EBuffer::Reload() {Reload16,298
int EBuffer::Save() {Save25,452
char FileBuffer[RWBUFSIZE];FileBuffer35,664
int EBuffer::LoadFrom(char *AFileName) {LoadFrom37,693
int EBuffer::SaveTo(char *AFileName) {SaveTo317,10527

e_mark.cpp,1144
EMarkIndex markIndex;markIndex3,18
EMark::EMark(char *aName, char *aFileName, EPoint aPoint, EBuffer *aBuffer) {EMark5,41
EMark::~EMark() {~EMark22,509
int EMark::setBuffer(EBuffer *aBuffer) {setBuffer29,614
int EMark::removeBuffer(EBuffer *aBuffer) {removeBuffer45,982
EPoint &EMark::getPoint() {getPoint60,1332
EMarkIndex::EMarkIndex() {EMarkIndex67,1460
EMarkIndex::~EMarkIndex() {~EMarkIndex72,1524
EMark *EMarkIndex::insert(char *aName, char *aFileName, EPoint aPoint, EBuffer *aBuffer) {insert81,1709
EMark *EMarkIndex::insert(char *aName, EBuffer *aBuffer, EPoint aPoint) {insert114,2570
EMark *EMarkIndex::locate(char *aName) {locate122,2813
int EMarkIndex::remove(char *aName) {remove140,3185
int EMarkIndex::view(EView *aView, char *aName) {view171,3992
int EMarkIndex::retrieveForBuffer(EBuffer *aBuffer) {retrieveForBuffer188,4474
int EMarkIndex::storeForBuffer(EBuffer *aBuffer) {storeForBuffer199,4794
int EMarkIndex::saveToDesktop(FILE *fp) {saveToDesktop207,5028
EMark *EMarkIndex::pushMark(EBuffer *aBuffer, EPoint P) {pushMark223,5497
int EMarkIndex::popMark(EView *aView) {popMark239,5939

e_os2.cpp,78
int EView::SysShowHelp(ExState &State, const char *word) {SysShowHelp14,265

e_print.cpp,92
int EBuffer::BlockPrint() {BlockPrint12,239
int EBuffer::FilePrint() {FilePrint125,3275

e_redraw.cpp,657
int EBuffer::GetMap(int Row, int *StateLen, hsState **StateMap) {GetMap12,240
void EBuffer::FullRedraw() { // redraw all viewsFullRedraw44,1157
void EBuffer::Hilit(int FromRow) {Hilit57,1409
void EBuffer::Rehilit(int ToRow) {Rehilit66,1615
void EBuffer::Draw(int Row0, int RowE) {Draw114,2882
void EBuffer::DrawLine(TDrawBuffer B, int VRow, int C, int W, int &HilitX) {DrawLine130,3484
void EBuffer::Redraw() {Redraw236,7305
int EBuffer::GetHilitWord(int len, char *str, ChColor &clr, int IgnCase) {GetHilitWord535,17807
EEditPort *EBuffer::GetViewVPort(EView *V) {GetViewVPort590,18985
EEditPort *EBuffer::GetVPort() {GetVPort594,19066

e_regex.cpp,1773
static int RegCount = 0;RegCount19,358
static  RxNode *NewNode(int aWhat) {NewNode25,443
static RxNode *NewChar(char Ch) {NewChar35,639
static RxNode *NewEscape(const char **const Regexp) {NewEscape46,829
#define NNN NNN127,3390
#define SETOP(SETOP129,3441
static RxNode *NewSet(const char ** const Regexp) {NewSet134,3580
static int AddNode(RxNode **F, RxNode **N, RxNode *A) {AddNode306,9198
static int CountWidth(RxNode *N) {CountWidth321,9497
static int MakeSub(RxNode **F, RxNode **N, char What) {MakeSub333,9714
#define CHECK(CHECK476,13803
static RxNode *RxComp(const char **const Regexp) {RxComp478,13865
RxNode *RxOptimize(RxNode *rx) {RxOptimize528,15553
RxNode *RxCompile(const char *Regexp) {RxCompile532,15604
void RxFree(RxNode *n) {RxFree545,15885
#define ChClass(ChClass564,16197
static RxMatchRes *match;match566,16324
static const char *bop;bop567,16350
static const char *eop;eop568,16374
static int flags = RX_CASE;flags569,16398
static const char *rex;rex570,16426
int RxMatch(RxNode *rx) {RxMatch572,16451
int RxTry(RxNode *rx, const char *s) {RxTry748,22007
int RxExec(RxNode *Regexp, const char *Data, int Len, const char *Start, RxMatchRes *Match, unsigned int RxOpt) {RxExec762,22330
#define FLAG_UP_CASE FLAG_UP_CASE815,23821
#define FLAG_DOWN_CASE FLAG_DOWN_CASE816,23848
#define FLAG_UP_NEXT FLAG_UP_NEXT817,23875
#define FLAG_DOWN_NEXT FLAG_DOWN_NEXT818,23902
static int add(int *len, char **s, const char *a, int alen, int &flag) {add820,23930
int RxReplace(const char *rep, const char *Src, int /*len*/, RxMatchRes match, char **Dest, int *Dlen) {RxReplace869,24983
static void RxDump(int N, RxNode *n) {RxDump987,29366
#define TEST(TEST1031,31170
int main() {main1039,31395

e_search.cpp,2552
int ParseSearchOption(int replace, char c, unsigned long &opt) {ParseSearchOption12,240
int UnquoteString(char *str) {UnquoteString37,1291
int ParseSearchOptions(int replace, const char *str, unsigned long &Options) {ParseSearchOptions53,1527
int ParseSearchReplace(EBuffer *B, const char *str, int replace, SearchReplaceOptions &opt) {ParseSearchReplace64,1780
int EBuffer::FindStr(char *Data, int Len, int Options) {FindStr125,3571
int EBuffer::FindRx(RxNode *Rx, int Options) {FindRx281,7976
int EBuffer::Find(SearchReplaceOptions &opt) {Find454,13009
int EBuffer::CompleteWord() {CompleteWord694,21422
int EBuffer::Search(ExState &State, char *aString, int Options, int /*CanResume*/) {Search759,23344
int EBuffer::SearchAgain(ExState &/*State*/, unsigned int Options) {SearchAgain787,24153
int EBuffer::SearchReplace(ExState &State, char *aString, char *aReplaceString, int Options) {SearchReplace796,24456
int EBuffer::Search(ExState &State)          { return Search(State, 0, 0, 1); }Search822,25444
int EBuffer::SearchB(ExState &State)         { return Search(State, 0, SEARCH_BACK, 1); }SearchB823,25524
int EBuffer::SearchRx(ExState &State)        { return Search(State, 0, SEARCH_RE, 1); }SearchRx824,25614
int EBuffer::SearchAgain(ExState &State)     { return SearchAgain(State, 0); }SearchAgain825,25702
int EBuffer::SearchAgainB(ExState &State)    { return SearchAgain(State, SEARCH_BACK); }SearchAgainB826,25781
int EBuffer::SearchReplace(ExState &State)   { return SearchReplace(State, 0, 0, 0); }SearchReplace827,25870
int EBuffer::SearchReplaceB(ExState &State)  { return SearchReplace(State, 0, 0, SEARCH_BACK); }SearchReplaceB828,25957
int EBuffer::SearchReplaceRx(ExState &State) { return SearchReplace(State, 0, 0, SEARCH_RE); }SearchReplaceRx829,26054
int EBuffer::ScanForRoutines() {ScanForRoutines832,26176
int EBuffer::ShowPosition() {ShowPosition870,27257
int EBuffer::PlaceBookmark(char *Name, EPoint P) {PlaceBookmark946,29130
int EBuffer::RemoveBookmark(char *Name) {RemoveBookmark967,29639
int EBuffer::GetBookmark(char *Name, EPoint &P) {GetBookmark983,30161
int EBuffer::GotoBookmark(char *Name) {GotoBookmark992,30377
int EBuffer::GetMatchBrace(EPoint &M, int MinLine, int MaxLine, int show) {GetMatchBrace1002,30708
int EBuffer::MatchBracket() {MatchBracket1069,32855
int EBuffer::HilitMatchBracket() {HilitMatchBracket1077,33005
int EBuffer::SearchWord(int SearchFlags) {SearchWord1102,33511
int EBuffer::FindTagWord(ExState &State) {FindTagWord1120,34090

e_tags.cpp,2449
struct TagData {TagData12,256
    int Tag;        // tag name posTag13,273
    int FileName;FileName14,309
    int TagBase;    // name of tag fileTagBase15,327
    int Line;Line16,367
    int StrFind;    // string to findStrFind17,381
struct TagStack {TagStack20,423
    char *FileName;FileName21,441
    int Line, Col;Line22,461
    int Line, Col;Col22,461
    TagStack *Next;Next23,480
    int TagPos;TagPos24,500
    char *CurrentTag;CurrentTag25,516
static char *TagMem = 0;TagMem28,542
static int TagLen = 0;TagLen29,567
static int ATagMem  = 0;ATagMem30,590
static int CTags = 0;            // number of tagsCTags32,616
static int ATags = 0;ATags33,667
static TagData *TagD = 0;TagD34,689
static int *TagI = 0;TagI35,715
static int TagFileCount = 0;TagFileCount36,737
static int *TagFiles = 0;TagFiles37,766
static int TagFilesLoaded = 0;   // tag files are loaded at first lookupTagFilesLoaded39,793
static char *CurrentTag = 0;CurrentTag40,866
static int TagPosition = -1;TagPosition41,895
static TagStack *TStack;TStack42,924
static int AllocMem(char *Mem, int Len) { /*FOLD00*/AllocMem44,950
static int AddTag(int Tag, int FileName, int TagBase, int Line, int StrFind) { /*FOLD00*/AddTag62,1358
int _LNK_CONV cmptags(const void *p1, const void *p2) {cmptags86,1938
int SortTags() { /*FOLD00*/SortTags94,2155
int TagsLoad(int id) { /*FOLD00*/TagsLoad113,2480
int TagsAdd(char *FileName) { /*FOLD00*/TagsAdd217,5009
int TagsSave(FILE *fp) { /*FOLD00*/TagsSave233,5363
static void ClearTagStack() { /*FOLD00*/ClearTagStack239,5512
int TagLoad(char *FileName) { /*FOLD00*/TagLoad257,5826
static int LoadTagFiles() { /*FOLD00*/LoadTagFiles273,6155
void TagClear() { /*FOLD00*/TagClear290,6480
static int GotoFilePos(EView *View, char *FileName, int Line, int Col) { /*FOLD00*/GotoFilePos311,6777
static int GotoTag(int M, EView *View) { /*FOLD00*/GotoTag320,7087
static int PushPos(EBuffer *B) { /*FOLD00*/PushPos347,7901
int TagGoto(EView *View, char *Tag) {TagGoto369,8367
int TagFind(EBuffer *B, EView *View, char *Tag) { /*FOLD00*/TagFind403,9105
int TagDefined(char *Tag) {TagDefined455,10268
int TagComplete(char **Words, int *WordsPos, int WordsMax, char *Tag) {TagComplete478,10739
int TagNext(EView *View) { /*FOLD00*/TagNext530,12471
int TagPrev(EView *View) { /*FOLD00*/TagPrev547,12890
int TagPop(EView *View) { /*FOLD00*/TagPop565,13351

e_trans.cpp,1059
int ParseTrans(unsigned char *S, unsigned char *D, TransTable tab) {ParseTrans14,320
int MakeTrans(TransTable tab, int What) {MakeTrans63,1496
int EBuffer::BlockTrans(TransTable tab) {BlockTrans89,2121
int EBuffer::CharTrans(TransTable tab) {CharTrans145,3585
int EBuffer::LineTrans(TransTable tab) {LineTrans155,3866
int EBuffer::CharCaseUp() {CharCaseUp167,4155
int EBuffer::CharCaseDown() {CharCaseDown174,4260
int EBuffer::CharCaseToggle() {CharCaseToggle181,4369
int EBuffer::LineCaseUp() {LineCaseUp188,4482
int EBuffer::LineCaseDown() {LineCaseDown195,4587
int EBuffer::LineCaseToggle()  {LineCaseToggle202,4696
int EBuffer::BlockCaseUp() {BlockCaseUp209,4810
int EBuffer::BlockCaseDown() {BlockCaseDown216,4917
int EBuffer::BlockCaseToggle() {BlockCaseToggle223,5028
int EBuffer::GetTrans(ExState &State, TransTable tab) {GetTrans230,5143
int EBuffer::CharTrans(ExState &State) {CharTrans247,5771
int EBuffer::LineTrans(ExState &State) {LineTrans255,5916
int EBuffer::BlockTrans(ExState &State) {BlockTrans263,6061

e_undo.cpp,625
int EBuffer::NextCommand() {NextCommand12,238
int EBuffer::PushBlockData() {PushBlockData28,512
int EBuffer::BeginUndo() {BeginUndo39,860
int EBuffer::EndUndo() {EndUndo44,924
int EBuffer::PushULong(unsigned long l) {PushULong64,1365
int EBuffer::PushUChar(unsigned char ch) {PushUChar69,1493
int EBuffer::PushUData(void *data, int len) {PushUData74,1590
int EBuffer::GetUData(int No, int pos, void **data, int len) {GetUData125,3218
#define UGETC(UGETC151,3747
#define UGET(UGET158,3962
int EBuffer::Undo(int undo) {Undo165,4151
int EBuffer::Redo() {Redo335,9688
int EBuffer::Undo() {Undo353,10025

e_unix.cpp,111
int EView::SysShowHelp(ExState &State, const char *word) {SysShowHelp21,346
#define SYSCALL(SYSCALL42,1054

e_win32.cpp,78
int EView::SysShowHelp(ExState &State, const char *word) {SysShowHelp16,289

fte2.cpp,1075
#define UNIX_RCPATHS UNIX_RCPATHS15,320
char *Unix_RCPaths[UNIX_RCPATHS]={Unix_RCPaths18,367
static void Usage() {Usage26,537
static char *findPathExt(char *filename) {findPathExt66,2332
#define INCL_DOSINCL_DOS84,2681
char *getProgramName(char *name) {getProgramName87,2716
static int GetConfigFileName(int argc, char **argv, char *ConfigFileName) {GetConfigFileName100,2991
static int CmdLoadConfiguration(int &argc, char **argv) {CmdLoadConfiguration165,4637
static int CmdLoadFiles(int &argc, char **argv) {CmdLoadFiles240,7039
static void DoLoadHistoryOnEntry(int &argc, char **argv) {DoLoadHistoryOnEntry335,10350
static void DoSaveHistoryOnExit() {DoSaveHistoryOnExit362,11003
void DoLoadDesktopOnEntry(int &argc, char **argv) {DoLoadDesktopOnEntry369,11157
static void EditorInit() {EditorInit405,12071
static void EditorCleanup() {EditorCleanup411,12217
static int InterfaceInit(int &argc, char **argv) {InterfaceInit439,12651
static void InterfaceCleanup() {InterfaceCleanup466,13286
int main(int argc, char **argv) {main473,13381

fte.cpp,687
#define NEED_LOG_HNEED_LOG_H9,216
const char *Unix_RCPaths[] = {Unix_RCPaths14,323
uid_t effuid;effuid21,495
gid_t effgid;effgid22,509
char ConfigFileName[MAXPATH] = "";ConfigFileName25,542
static void Usage() {Usage27,578
static char *findPathExt(char *filename) {findPathExt64,2274
char *getProgramName(char *name) {getProgramName80,2579
#define INCL_DOSINCL_DOS89,2728
char *getProgramName(char *name) {getProgramName92,2763
static int GetConfigFileName(int argc, char **argv, char *ConfigFileName) {GetConfigFileName105,3038
static int CmdLoadConfiguration(int &argc, char **argv) {CmdLoadConfiguration156,4404
int main(int argc, char **argv) {main267,8060

g_draw.cpp,1427
#   define  WIN32_LEAN_AND_MEAN WIN32_LEAN_AND_MEAN13,260
int CStrLen(const char *p) {CStrLen17,326
void MoveCh(PCell B, char CCh, TAttr Attr, int Count) {MoveCh33,570
void MoveChar(PCell B, int Pos, int Width, char const CCh, TAttr Attr, int Count) {MoveChar42,793
void MoveMem(PCell B, int Pos, int Width, const char* Ch, TAttr Attr, int Count) {MoveMem57,1232
void MoveStr(PCell B, int Pos, int Width, const char* Ch, TAttr Attr, int MaxCount) {MoveStr74,1698
void MoveCStr(PCell B, int Pos, int Width, const char* Ch, TAttr A0, TAttr A1, int MaxCount) {MoveCStr91,2199
void MoveAttr(PCell B, int Pos, int Width, TAttr Attr, int Count) {MoveAttr119,2953
void MoveBgAttr(PCell B, int Pos, int Width, TAttr Attr, int Count) {MoveBgAttr135,3358
void MoveCh(PCell B, char Ch, TAttr Attr, int Count) {MoveCh154,3798
void MoveChar(PCell B, int Pos, int Width, const char Ch, TAttr Attr, int Count) {MoveChar164,4013
void MoveMem(PCell B, int Pos, int Width, const char* Ch, TAttr Attr, int Count) {MoveMem180,4428
void MoveStr(PCell B, int Pos, int Width, const char* Ch, TAttr Attr, int MaxCount) {MoveStr198,4870
void MoveCStr(PCell B, int Pos, int Width, const char* Ch, TAttr A0, TAttr A1, int MaxCount) {MoveCStr216,5347
void MoveAttr(PCell B, int Pos, int Width, TAttr Attr, int Count) {MoveAttr247,6112
void MoveBgAttr(PCell B, int Pos, int Width, TAttr Attr, int Count) {MoveBgAttr261,6469

g_menu.cpp,310
int MenuCount = 0;MenuCount19,378
mMenu *Menus = 0;Menus20,397
int NewMenu(const char *Name) {NewMenu22,416
int NewItem(int menu, const char *Name) {NewItem37,719
int NewSubMenu(int menu, const char *Name, int submenu, int Type) {NewSubMenu55,1202
int GetMenuId(const char *Name) {GetMenuId73,1718

g_motif.cpp,12223
#define DEBUG(DEBUG44,929
#define MAX_PIPES MAX_PIPES47,958
    int used;used51,1023
    int id;id52,1037
    int fd;fd53,1049
    int pid;pid54,1061
    int stopped;stopped55,1074
    EModel *notify;notify56,1091
    XtInputId input;input57,1111
} GPipe;GPipe58,1132
static GPipe Pipes[MAX_PIPES] = {Pipes60,1142
#define sfFocus sfFocus64,1211
static long MouseAutoDelay = 40;MouseAutoDelay66,1232
static long MouseAutoRepeat = 200;MouseAutoRepeat67,1265
static long MouseMultiClick = 300;MouseMultiClick68,1300
static Atom   WM_DELETE_WINDOW;WM_DELETE_WINDOW70,1336
class GViewPeer {GViewPeer72,1369
    Widget ScrollWin;ScrollWin74,1395
    Widget TextWin;TextWin75,1417
    Widget SbHorz, SbVert;SbHorz76,1437
    Widget SbHorz, SbVert;SbVert76,1437
    GC gc[256];gc77,1464
    XGCValues gcv;gcv78,1480
    int Visibility;Visibility80,1523
    GView *View;View82,1544
    int wW, wH, wState, wRefresh;wW84,1579
    int wW, wH, wState, wRefresh;wH84,1579
    int wW, wH, wState, wRefresh;wState84,1579
    int wW, wH, wState, wRefresh;wRefresh84,1579
    int cX, cY, cVisible, cStart, cEnd;cX85,1613
    int cX, cY, cVisible, cStart, cEnd;cY85,1613
    int cX, cY, cVisible, cStart, cEnd;cVisible85,1613
    int cX, cY, cVisible, cStart, cEnd;cStart85,1613
    int cX, cY, cVisible, cStart, cEnd;cEnd85,1613
    int sbVstart, sbVamount, sbVtotal;sbVstart86,1653
    int sbVstart, sbVamount, sbVtotal;sbVamount86,1653
    int sbVstart, sbVamount, sbVtotal;sbVtotal86,1653
    int sbHstart, sbHamount, sbHtotal;sbHstart87,1692
    int sbHstart, sbHamount, sbHtotal;sbHamount87,1692
    int sbHstart, sbHamount, sbHtotal;sbHtotal87,1692
    int VertPos, HorzPos;VertPos88,1731
    int VertPos, HorzPos;HorzPos88,1731
    unsigned char *ScreenBuffer;ScreenBuffer89,1757
class GFramePeer {GFramePeer125,2833
    GFrame *Frame;Frame127,2860
    Widget ShellWin, MainWin, PanedWin, MenuBar;ShellWin128,2879
    Widget ShellWin, MainWin, PanedWin, MenuBar;MainWin128,2879
    Widget ShellWin, MainWin, PanedWin, MenuBar;PanedWin128,2879
    Widget ShellWin, MainWin, PanedWin, MenuBar;MenuBar128,2879
int ShowVScroll = 1;ShowVScroll141,3222
int ShowHScroll = 0;ShowHScroll142,3243
int ShowMenuBar = 1;ShowMenuBar143,3264
int ShowToolBar = 0;ShowToolBar144,3285
GFrame *frames = 0;frames146,3307
GUI *gui = 0;gui147,3327
unsigned long HaveGUIDialogs = 0;HaveGUIDialogs149,3342
static GView *MouseCapture = 0;MouseCapture151,3377
static GView *FocusCapture = 0;FocusCapture152,3409
static int cxChar = 8;cxChar154,3442
static int cyChar = 13;cyChar155,3465
static XtAppContext AppContext;AppContext157,3490
static Widget TopLevel;TopLevel158,3522
static Display *display;display159,3546
static Window root;root160,3571
static int screen;screen161,3591
static Colormap colormap;colormap162,3610
static XColor Colors[16];Colors163,3636
static XFontStruct *fontStruct;fontStruct164,3662
TEvent EventBuf = { evNone };EventBuf166,3695
TEvent NextEvent = { evNone };NextEvent168,3726
XButtonEvent LastRelease;LastRelease170,3758
Widget LPopupMenu = 0;LPopupMenu171,3784
static int LastMouseX = -1, LastMouseY = -1;LastMouseX173,3808
static int LastMouseX = -1, LastMouseY = -1;LastMouseY173,3808
static void SetColor(int i) {SetColor175,3854
static int InitXColors() {InitXColors186,4150
    long keysym;keysym248,6087
    long keycode;keycode249,6104
} key_table[] = {key_table250,6122
void ConvertKeyToEvent(KeySym key, KeySym key1, char *keyname, int etype, int state, TEvent *Event) {ConvertKeyToEvent316,8551
static TEvent LastMouseEvent = { evNone };LastMouseEvent367,10142
#define TM_DIFF(TM_DIFF369,10186
void ConvertClickToEvent(int type, int xx, int yy, int button, int state, TEvent *Event, Time time) {ConvertClickToEvent371,10294
void ProcessXEvents(XEvent *event, TEvent *Event, GViewPeer *Peer) {ProcessXEvents443,12743
static void CloseWindow(Widget w, GFramePeer *frame, XEvent *event, Boolean *cont) {CloseWindow485,14326
void MainCallback (Widget w, mItem *item, XtPointer callData) {MainCallback496,14642
void PopupCallback (Widget w, mItem *item, XtPointer callData) {PopupCallback502,14818
void MenuPopdownCb (Widget w, mItem *item, XtPointer callData) {MenuPopdownCb508,14996
void InputWindow(Widget w, GViewPeer *Peer, XEvent *event, Boolean *cont) {InputWindow516,15209
static void VisibilityCb(Widget w, GViewPeer *peer, XEvent *event, Boolean *cont) {VisibilityCb525,15498
void ConfigureWindow(Widget w, GViewPeer *Peer, XEvent *event, Boolean *cont) {ConfigureWindow541,16018
void ExposeWindow(Widget w, GViewPeer *Peer, XmDrawingAreaCallbackStruct *Call) {ExposeWindow564,16611
void VertValueChanged(Widget w, GViewPeer *Peer, XmScrollBarCallbackStruct *Call) {VertValueChanged577,17021
void HorzValueChanged(Widget w, GViewPeer *Peer, XmScrollBarCallbackStruct *Call) {HorzValueChanged590,17488
GViewPeer::GViewPeer(GView *view, int XSize, int YSize) {GViewPeer605,18032
GViewPeer::~GViewPeer() {~GViewPeer723,22664
int GViewPeer::AllocBuffer() {AllocBuffer727,22725
#define InRange(InRange740,23005
#define CursorXYPos(CursorXYPos741,23058
void GViewPeer::DrawCursor(int Show) {DrawCursor743,23124
int GViewPeer::ConPutBox(int X, int Y, int W, int H, PCell Cell) {ConPutBox782,24357
void GViewPeer::UpdateWindow(int xx, int yy, int ww, int hh) {UpdateWindow857,26642
int GViewPeer::ConGetBox(int X, int Y, int W, int H, PCell Cell) {ConGetBox876,27083
int GViewPeer::ConPutLine(int X, int Y, int W, int H, PCell Cell) {ConPutLine886,27286
int GViewPeer::ConSetBox(int X, int Y, int W, int H, TCell Cell) {ConSetBox895,27480
int GViewPeer::ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count) {ConScroll904,27667
int GViewPeer::ConSetSize(int X, int Y) {ConSetSize941,28915
int GViewPeer::ConQuerySize(int *X, int *Y) {ConQuerySize976,29821
int GViewPeer::ConSetCursorPos(int X, int Y) {ConSetCursorPos982,29924
int GViewPeer::ConQueryCursorPos(int *X, int *Y) {ConQueryCursorPos994,30152
int GViewPeer::ConShowCursor() {ConShowCursor1000,30260
int GViewPeer::ConHideCursor() {ConHideCursor1006,30353
int GViewPeer::ConCursorVisible() {ConCursorVisible1012,30444
int GViewPeer::ConSetCursorSize(int Start, int End) {ConSetCursorSize1016,30504
int GViewPeer::ExpandHeight(int DeltaY) {ExpandHeight1025,30699
int GViewPeer::QuerySbVPos() {QuerySbVPos1029,30758
int GViewPeer::SetSbVPos(int Start, int Amount, int Total) {SetSbVPos1033,30813
int GViewPeer::SetSbHPos(int Start, int Amount, int Total) {SetSbHPos1065,31794
int GViewPeer::UpdateCursor() {UpdateCursor1098,32776
int GViewPeer::PMShowCursor() {PMShowCursor1108,32967
int GViewPeer::PMHideCursor() {PMHideCursor1114,33093
int GViewPeer::PMSetCursorPos() {PMSetCursorPos1120,33220
GView::GView(GFrame *parent, int XSize, int YSize) {GView1134,33679
GView::~GView() {~GView1142,33870
int GView::ConClear() {ConClear1149,33976
int GView::ConPutBox(int X, int Y, int W, int H, PCell Cell) {ConPutBox1159,34147
int GView::ConGetBox(int X, int Y, int W, int H, PCell Cell) {ConGetBox1163,34259
int GView::ConPutLine(int X, int Y, int W, int H, PCell Cell) {ConPutLine1167,34371
int GView::ConSetBox(int X, int Y, int W, int H, TCell Cell) {ConSetBox1171,34485
int GView::ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count) {ConScroll1175,34597
int GView::ConSetSize(int X, int Y) {ConSetSize1179,34741
int GView::ConQuerySize(int *X, int *Y) {ConQuerySize1187,34885
int GView::ConSetCursorPos(int X, int Y) {ConSetCursorPos1191,34967
int GView::ConQueryCursorPos(int *X, int *Y) {ConQueryCursorPos1195,35053
int GView::ConShowCursor() {ConShowCursor1199,35145
int GView::ConHideCursor() {ConHideCursor1203,35211
int GView::ConCursorVisible() {ConCursorVisible1207,35277
int GView::ConSetCursorSize(int Start, int End) {ConSetCursorSize1211,35349
int GView::QuerySbVPos() {QuerySbVPos1215,35449
int GView::SetSbVPos(int Start, int Amount, int Total) {SetSbVPos1219,35511
int GView::SetSbHPos(int Start, int Amount, int Total) {SetSbHPos1223,35621
int GView::ExpandHeight(int DeltaY) {ExpandHeight1227,35731
void GView::Update() {Update1231,35811
void GView::Repaint() {Repaint1234,35837
void GView::HandleEvent(TEvent &Event) {HandleEvent1237,35864
void GView::Resize(int width, int height) {Resize1240,35908
void GView::EndExec(int NewResult) {EndExec1244,35970
int GView::Execute() {Execute1248,36034
int GView::IsActive() {IsActive1260,36258
void GView::Activate(int gotfocus) {Activate1264,36322
int GView::CaptureMouse(int grab) {CaptureMouse1274,36513
GFramePeer::GFramePeer(GFrame *frame, int Width, int Height) {GFramePeer1291,36884
GFramePeer::~GFramePeer() {~GFramePeer1317,37785
int GFramePeer::ConSetSize(int X, int Y) {ConSetSize1320,37816
int GFramePeer::ConQuerySize(int *X, int *Y) {ConQuerySize1325,37909
int GFramePeer::ConSetTitle(char *Title, char *STitle) {ConSetTitle1338,38178
int GFramePeer::ConGetTitle(char *Title, int MaxLen, char *STitle, int SMaxLen) {ConGetTitle1343,38342
void GFramePeer::MapFrame() {MapFrame1349,38474
GFrame::GFrame(int XSize, int YSize) {GFrame1358,38805
GFrame::~GFrame() {~GFrame1373,39148
int GFrame::ConSetTitle(char *Title, char *STitle) {ConSetTitle1389,39446
int GFrame::ConGetTitle(char *Title, int MaxLen, char *STitle, int SMaxLen) {ConGetTitle1393,39547
int GFrame::ConSetSize(int X, int Y) {ConSetSize1397,39690
int GFrame::ConQuerySize(int *X, int *Y) {ConQuerySize1401,39767
int GFrame::ConSplitView(GView *view, GView *newview) {ConSplitView1405,39850
int GFrame::ConCloseView(GView *view) {ConCloseView1420,40355
int GFrame::ConResizeView(GView *view, int DeltaY) {ConResizeView1424,40412
int GFrame::AddView(GView *view) {AddView1428,40482
void GFrame::Update() {Update1446,40902
void GFrame::UpdateMenu() {UpdateMenu1458,41079
void GFrame::Repaint() {Repaint1461,41110
void GFrame::InsertView(GView *Prev, GView *view) {InsertView1472,41271
void GFrame::RemoveView(GView *view) {RemoveView1489,41646
void GFrame::SelectNext(int back) {SelectNext1517,42465
int GFrame::SelectView(GView *view) {SelectView1538,42910
void GFrame::Resize(int width, int height) {Resize1555,43261
Widget CreateMotifMenu(Widget parent, int menu, int main, XtCallbackProc MenuProc) {CreateMotifMenu1568,43477
Widget CreateMotifMainMenu(Widget parent, char *Name) {CreateMotifMainMenu1645,46348
int GFrame::SetMenu(const char *Name) {SetMenu1651,46495
int GFrame::ExecMainMenu(char Sub) {ExecMainMenu1664,46805
int GFrame::PopupMenu(const char *Name) {PopupMenu1668,46859
GUI::GUI(int &argc, char **argv, int XSize, int YSize) {GUI1681,47219
GUI::~GUI() {~GUI1736,48662
int GUI::ConGrabEvents(TEventMask EventMask) {ConGrabEvents1740,48692
void GUI::DispatchEvent(GFrame *frame, GView *view, TEvent &Event) {DispatchEvent1744,48756
int GUI::ConSuspend(void) { return 0; }ConSuspend1751,48922
int GUI::ConContinue(void) { return 0; }ConContinue1753,48963
int GUI::ConGetEvent(TEventMask EventMask, TEvent *Event, int WaitTime, int Delete, GView **view) {ConGetEvent1755,49005
int GUI::ConPutEvent(TEvent Event) {ConPutEvent1761,49212
int GUI::ConFlush(void) {ConFlush1766,49288
void GUI::ProcessEvent() {ProcessEvent1770,49331
int GUI::Run() {Run1785,49714
int GUI::ShowEntryScreen() {ShowEntryScreen1795,49861
int GUI::RunProgram(int mode, char *Command) {RunProgram1799,49907
void PipeCallback(GPipe *pipe, int *source, XtInputId *input) {PipeCallback1822,50473
int GUI::OpenPipe(char *Command, EModel *notify) {OpenPipe1834,50882
int GUI::SetPipeView(int id, EModel *notify) {SetPipeView1872,51933
int GUI::ReadPipe(int id, void *buffer, int len) {ReadPipe1892,52542
int GUI::ClosePipe(int id) {ClosePipe1918,53155
int GetXSelection(int *len, char **data) {GetXSelection1931,53448
int SetXSelection(int len, char *data) {SetXSelection1939,53599
void DieError(int rc, const char *msg, ...) {DieError1988,54714
char ConGetDrawChar(int index) {ConGetDrawChar1997,54864

g_nodlg.cpp,499
int DLGGetFile(GView *v, const char *Prompt, unsigned int BufLen, char *FileName, int Flags) {DLGGetFile8,153
int DLGPickChoice(GView *v, const char *ATitle, int NSel, va_list ap, int Flags) {DLGPickChoice13,283
int DLGGetFind(GView *View, SearchReplaceOptions &sr) {DLGGetFind18,401
int DLGGetFindReplace(GView *View, SearchReplaceOptions &sr) {DLGGetFindReplace23,492
int DLGGetStr(GView *View, const char *Prompt, unsigned int BufLen, char *Str, int HistId, int Flags) {DLGGetStr28,590

g_pm.cpp,14889
#define INCL_WININCL_WIN22,709
#define INCL_GPIINCL_GPI23,726
#define INCL_VIOINCL_VIO24,743
#define INCL_AVIOINCL_AVIO25,760
#define INCL_DOSINCL_DOS26,778
#define INCL_DOSERRORSINCL_DOSERRORS27,795
#define PM_STACK_SIZE PM_STACK_SIZE50,1223
#define UWM_NOTIFY UWM_NOTIFY52,1258
#define UWM_DESTROY UWM_DESTROY53,1291
#define UWM_DESTROYHWND UWM_DESTROYHWND54,1325
#define UWM_DROPPEDFILE UWM_DROPPEDFILE55,1363
#define UWM_FILEDIALOG UWM_FILEDIALOG56,1401
#define UWM_DLGBOX UWM_DLGBOX57,1438
#define UWM_PROCESSDLG UWM_PROCESSDLG58,1471
#define UWM_CHOICE UWM_CHOICE59,1508
#define UWM_CREATECHILD UWM_CREATECHILD60,1541
#define UWM_CREATEWORKER UWM_CREATEWORKER61,1579
#define UWM_CREATEFRAME UWM_CREATEFRAME62,1619
#define UWM_CREATEMAINMENU UWM_CREATEMAINMENU63,1658
#define UWM_CREATEPOPUPMENU UWM_CREATEPOPUPMENU64,1700
#define CURSOR_TYPE CURSOR_TYPE66,1744
#define FID_MTOOLBAR FID_MTOOLBAR70,1822
#define MAXXSIZE MAXXSIZE72,1851
#define MAXYSIZE MAXYSIZE73,1873
#define MAX_PIPES MAX_PIPES75,1895
#define PIPE_BUFLEN PIPE_BUFLEN76,1915
    int used;used79,1958
    int id;id80,1972
    int reading, stopped;reading81,1984
    int reading, stopped;stopped81,1984
    TID tid;tid82,2010
    HMTX Access;Access83,2023
    HEV ResumeRead;ResumeRead84,2040
    char *buffer;buffer85,2060
    int buflen;buflen86,2078
    int bufused;bufused87,2094
    int bufpos;bufpos88,2111
    EModel *notify;notify89,2127
    char *Command;Command90,2147
    int RetCode;RetCode91,2166
    int DoTerm;DoTerm92,2183
} GPipe;GPipe93,2199
static GPipe Pipes[MAX_PIPES] = {Pipes95,2209
#define sfFocus sfFocus99,2278
typedef struct _PMPTR { // for passing pointers to winprocs_PMPTR101,2299
    USHORT len;len102,2359
    void *p;p103,2375
} PMPTR;PMPTR104,2388
struct PMData {PMData108,2416
    GViewPeer *Peer;Peer109,2432
    HVPS hvps;hvps110,2453
    HPS hps;hps111,2468
    SHORT cxChar;cxChar112,2481
    SHORT cyChar;cyChar113,2499
    HWND hwndWorker;hwndWorker114,2517
class GViewPeer {GViewPeer117,2542
    GView *View;View119,2568
    int wW, wH, wState;wW121,2603
    int wW, wH, wState;wH121,2603
    int wW, wH, wState;wState121,2603
    int cX, cY, cVisible, cStart, cEnd;cX122,2627
    int cX, cY, cVisible, cStart, cEnd;cY122,2627
    int cX, cY, cVisible, cStart, cEnd;cVisible122,2627
    int cX, cY, cVisible, cStart, cEnd;cStart122,2627
    int cX, cY, cVisible, cStart, cEnd;cEnd122,2627
    int sbVstart, sbVamount, sbVtotal;sbVstart123,2667
    int sbVstart, sbVamount, sbVtotal;sbVamount123,2667
    int sbVstart, sbVamount, sbVtotal;sbVtotal123,2667
    int sbHstart, sbHamount, sbHtotal;sbHstart124,2706
    int sbHstart, sbHamount, sbHtotal;sbHamount124,2706
    int sbHstart, sbHamount, sbHtotal;sbHtotal124,2706
    HWND hwndView;hwndView126,2750
    HWND hwndVscroll, hwndHscroll;hwndVscroll127,2769
    HWND hwndVscroll, hwndHscroll;hwndHscroll127,2769
    HWND hwndWorker;hwndWorker128,2804
    PMData *pmData;pmData129,2825
    int OldMouseX, OldMouseY;OldMouseX130,2845
    int OldMouseX, OldMouseY;OldMouseY130,2845
class GFramePeer {GFramePeer162,3820
    GFrame *Frame;Frame164,3847
    HWND hwndFrame;hwndFrame165,3866
    HWND menuBar;menuBar166,3886
    HWND hwndToolBar;hwndToolBar167,3904
    PFNWP oldFrameProc;oldFrameProc168,3926
int ShowVScroll = 1;ShowVScroll183,4301
int ShowHScroll = 0;ShowHScroll184,4322
int ShowMenuBar = 1;ShowMenuBar185,4343
int ShowToolBar = 1;ShowToolBar186,4364
unsigned long HaveGUIDialogs =HaveGUIDialogs187,4385
GFrame *frames = 0;frames195,4544
GUI *gui = 0;gui196,4564
GView *MouseCapture = 0;MouseCapture198,4579
GView *FocusCapture = 0;FocusCapture199,4604
static HEV WorkerStarted, StartInterface;WorkerStarted201,4630
static HEV WorkerStarted, StartInterface;StartInterface201,4630
HAB hab = 0;hab213,5250
HAB habW = 0;habW214,5263
static char szClient[] = "EViewer";szClient215,5277
static char szObject[] = "EWorker";szObject216,5313
static char szCreator[] = "ECreator";szCreator217,5349
static ULONG flFrame =flFrame219,5434
SWP swp;swp226,5670
HMQ hmq = 0;hmq227,5679
HMQ hmqW = 0;hmqW228,5692
HMTX hmtxPMData = 0;hmtxPMData229,5706
ULONG cxScreen, cyScreen,cxScreen230,5727
ULONG cxScreen, cyScreen,cyScreen230,5727
      cyTitleBar, //cyMenuBar,cyTitleBar231,5753
      cxBorder, cyBorder,cxBorder232,5784
      cxBorder, cyBorder,cyBorder232,5784
      cxScrollBar, cyScrollBar;cxScrollBar233,5810
      cxScrollBar, cyScrollBar;cyScrollBar233,5810
SHORT reportSize = 1;reportSize234,5842
TEvent EventBuf = { evNone };EventBuf235,5864
HWND hwndCreatorUser, hwndCreatorWorker;hwndCreatorUser236,5894
HWND hwndCreatorUser, hwndCreatorWorker;hwndCreatorWorker236,5894
char dragname[CCHMAXPATH];dragname237,5935
    int id;id242,6029
    HBITMAP handle;handle243,6041
    int cmd;cmd244,6061
    int flags;flags245,6074
} tools[] =tools246,6089
HWND CreateToolBar(HWND parent, HWND owner, int id) {CreateToolBar275,7090
#define CMD(CMD310,8126
ToolBarItem tools[] =tools312,8163
HWND CreateToolBar(HWND parent, HWND owner, int id) {CreateToolBar340,9257
HWND CreatePMMenu(HWND parent, HWND owner, int menu, int id, int style) {CreatePMMenu368,9924
HWND CreatePMMainMenu(HWND parent, HWND owner, char *Name) {CreatePMMainMenu429,12081
void InsertHistory(HWND hwnd, int id, int maxlen) {InsertHistory441,12320
MRESULT EXPENTRY FileDlgProc(HWND hwnd, ULONG msg, MPARAM mp1, MPARAM mp2) {FileDlgProc457,12689
int DLGGetFile(GView *View, const char *Prompt, unsigned int BufLen, char *FileName, int Flags) {DLGGetFile500,14201
    char *Title;Title529,15057
    int NSel;NSel530,15074
    va_list ap;ap531,15088
    int Flags;Flags532,15104
} ChoiceInfo;ChoiceInfo533,15119
static int DoChoice(HWND hwndFrame, ChoiceInfo *choice) {DoChoice535,15134
int DLGPickChoice(GView *View, const char *ATitle, int NSel, va_list ap, int Flags) {DLGPickChoice690,19992
    char *Title;Title701,20325
    char *Entry;Entry702,20342
    int MaxLen;MaxLen703,20359
    int HistId;HistId704,20375
} PromptInfo;PromptInfo705,20391
MRESULT EXPENTRY PromptDlgProc(HWND hwnd, ULONG msg, MPARAM mp1, MPARAM mp2) {PromptDlgProc707,20406
int DLGGetStr(GView *View, const char *Prompt, unsigned int BufLen, char *Str, int HistId, int Flags) {DLGGetStr751,22111
static SearchReplaceOptions SearchOpt;SearchOpt765,22574
static int ReplaceDlg = 0;ReplaceDlg766,22613
MRESULT EXPENTRY FindDlgProc(HWND hwnd, ULONG msg, MPARAM mp1, MPARAM mp2) {FindDlgProc768,22641
int DLGGetFind(GView *View, SearchReplaceOptions &sr) {DLGGetFind859,27132
int DLGGetFindReplace(GView *View, SearchReplaceOptions &sr) {DLGGetFindReplace872,27453
    int vk;vk886,27801
    TKeyCode kc;kc887,27813
    char *name;name888,27830
} lvirt[] = {lvirt889,27846
char *ConvertKey(int ch, int virt, int flags, int scan, TEvent &Event) {ConvertKey935,29148
MRESULT CreateChild(HWND parent, GViewPeer *peer, PMData *pmData) {CreateChild1059,32354
BOOL CalcFrameSWP(HWND hwnd, PSWP pswp, BOOL bFrame) {CalcFrameSWP1092,33606
MRESULT EXPENTRY FrameWndProc(HWND hwnd, ULONG msg, MPARAM mp1, MPARAM mp2) {FrameWndProc1111,34046
MRESULT EXPENTRY AVIOWndProc(HWND hwnd, ULONG msg, MPARAM mp1, MPARAM mp2) {AVIOWndProc1570,49151
MRESULT EXPENTRY ObjectWndProc(HWND hwnd, ULONG msg, MPARAM mp1, MPARAM mp2) {ObjectWndProc1813,58164
MRESULT EXPENTRY CreatorWndProc(HWND hwnd, ULONG msg, MPARAM mp1, MPARAM mp2) {CreatorWndProc1824,58520
int ConGetEvent(TEventMask EventMask, TEvent *Event, int WaitTime, int Delete, GView **view) {ConGetEvent1947,62688
static void _LNK_CONV WorkThread(void *) {WorkThread2299,77169
GViewPeer::GViewPeer(GView *view, int XSize, int YSize) {GViewPeer2339,78351
GViewPeer::~GViewPeer() {~GViewPeer2374,79130
int GViewPeer::ConPutBox(int X, int Y, int W, int H, PCell Cell) {ConPutBox2380,79256
int GViewPeer::ConGetBox(int X, int Y, int W, int H, PCell Cell) {ConGetBox2407,80050
int GViewPeer::ConPutLine(int X, int Y, int W, int H, PCell Cell) {ConPutLine2430,80747
int GViewPeer::ConSetBox(int X, int Y, int W, int H, TCell Cell) {ConSetBox2456,81526
int GViewPeer::ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count) {ConScroll2482,82298
int GViewPeer::ConSetSize(int X, int Y) {ConSetSize2517,83614
int GViewPeer::ConQuerySize(int *X, int *Y) {ConQuerySize2523,83697
int GViewPeer::ConSetCursorPos(int X, int Y) {ConSetCursorPos2529,83800
int GViewPeer::ConQueryCursorPos(int *X, int *Y) {ConQueryCursorPos2542,84062
int GViewPeer::ConShowCursor() {ConShowCursor2548,84170
int GViewPeer::ConHideCursor() {ConHideCursor2556,84308
int GViewPeer::ConCursorVisible() {ConCursorVisible2564,84446
int GViewPeer::ConSetCursorSize(int Start, int End) {ConSetCursorSize2568,84506
int GViewPeer::ExpandHeight(int DeltaY) {ExpandHeight2577,84685
int GViewPeer::QuerySbVPos() {QuerySbVPos2591,85099
int GViewPeer::SetSbVPos(int Start, int Amount, int Total) {SetSbVPos2595,85154
int GViewPeer::SetSbHPos(int Start, int Amount, int Total) {SetSbHPos2638,86738
int GViewPeer::UpdateCursor() {UpdateCursor2681,88308
int GViewPeer::PMShowCursor() {PMShowCursor2691,88499
int GViewPeer::PMHideCursor() {PMHideCursor2697,88613
int GViewPeer::PMSetCursorPos() {PMSetCursorPos2703,88728
GView::GView(GFrame *parent, int XSize, int YSize) {GView2720,89310
GView::~GView() {~GView2728,89501
int GView::ConClear() {ConClear2742,89767
int GView::ConPutBox(int X, int Y, int W, int H, PCell Cell) {ConPutBox2752,89942
int GView::ConGetBox(int X, int Y, int W, int H, PCell Cell) {ConGetBox2756,90054
int GView::ConPutLine(int X, int Y, int W, int H, PCell Cell) {ConPutLine2760,90166
int GView::ConSetBox(int X, int Y, int W, int H, TCell Cell) {ConSetBox2764,90280
int GView::ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count) {ConScroll2768,90392
int GView::ConSetSize(int X, int Y) {ConSetSize2772,90536
int GView::ConQuerySize(int *X, int *Y) {ConQuerySize2780,90672
int GView::ConSetCursorPos(int X, int Y) {ConSetCursorPos2784,90754
int GView::ConQueryCursorPos(int *X, int *Y) {ConQueryCursorPos2788,90840
int GView::ConShowCursor() {ConShowCursor2792,90932
int GView::ConHideCursor() {ConHideCursor2796,90998
int GView::ConCursorVisible() {ConCursorVisible2800,91064
int GView::ConSetCursorSize(int Start, int End) {ConSetCursorSize2804,91137
int GView::QuerySbVPos() {QuerySbVPos2808,91237
int GView::SetSbVPos(int Start, int Amount, int Total) {SetSbVPos2812,91299
int GView::SetSbHPos(int Start, int Amount, int Total) {SetSbHPos2816,91409
int GView::ExpandHeight(int DeltaY) {ExpandHeight2820,91519
void GView::Update() {Update2824,91599
void GView::Repaint() {Repaint2827,91625
void GView::HandleEvent(TEvent &Event) {HandleEvent2830,91652
void GView::Resize(int width, int height) {Resize2833,91696
void GView::EndExec(int NewResult) {EndExec2837,91758
int GView::Execute() {Execute2841,91822
int GView::IsActive() {IsActive2862,92279
void GView::Activate(int gotfocus) {Activate2866,92363
int GView::CaptureMouse(int grab) {CaptureMouse2876,92554
int GView::CaptureFocus(int grab) {CaptureFocus2894,92974
GFramePeer::GFramePeer(GFrame *aFrame, int Width, int Height) {GFramePeer2912,93404
GFramePeer::~GFramePeer() {~GFramePeer2921,93645
int GFramePeer::ConSetSize(int X, int Y) {ConSetSize2926,93775
int GFramePeer::ConQuerySize(int *X, int *Y) {ConQuerySize2931,93868
int GFramePeer::ConSetTitle(char *Title, char *STitle) {ConSetTitle2938,94011
int GFramePeer::ConGetTitle(char *Title, int MaxLen, char *STitle, int SMaxLen) {ConGetTitle2953,94512
void GFramePeer::MapFrame() {MapFrame2959,94713
void GFramePeer::ShowFrame() {ShowFrame2975,95212
void GFramePeer::SizeFrame() {SizeFrame2980,95358
GFrame::GFrame(int XSize, int YSize) {GFrame3063,98132
GFrame::~GFrame() {~GFrame3078,98475
int GFrame::ConSetTitle(char *Title, char *STitle) {ConSetTitle3105,98989
int GFrame::ConGetTitle(char *Title, int MaxLen, char *STitle, int SMaxLen) {ConGetTitle3109,99090
int GFrame::ConSetSize(int X, int Y) {ConSetSize3113,99233
int GFrame::ConQuerySize(int *X, int *Y) {ConQuerySize3117,99310
int GFrame::ConSplitView(GView *view, GView *newview) {ConSplitView3121,99393
int GFrame::ConCloseView(GView *view) {ConCloseView3135,99819
int GFrame::ConResizeView(GView *view, int DeltaY) {ConResizeView3139,99876
int GFrame::AddView(GView *view) {AddView3143,99946
void GFrame::Update() {Update3161,100348
void GFrame::UpdateMenu() {UpdateMenu3173,100530
void GFrame::Repaint() {Repaint3176,100561
void GFrame::InsertView(GView *Prev, GView *view) {InsertView3187,100727
void GFrame::RemoveView(GView *view) {RemoveView3204,101102
void GFrame::SelectNext(int back) {SelectNext3233,101910
int GFrame::SelectView(GView *view) {SelectView3253,102335
void GFrame::Resize(int width, int height) {Resize3271,102662
int GFrame::SetMenu(const char *Name) {SetMenu3284,102886
int GFrame::ExecMainMenu(char Sub) {ExecMainMenu3300,103313
int GFrame::PopupMenu(const char *Name) {PopupMenu3342,104820
void GFrame::Show() {Show3356,105090
void GFrame::Activate() {Activate3361,105151
GUI::GUI(int &argc, char **argv, int XSize, int YSize) {GUI3369,105244
GUI::~GUI() {~GUI3414,107008
int GUI::ConGrabEvents(TEventMask EventMask) {ConGrabEvents3420,107090
void GUI::DispatchEvent(GFrame *frame, GView *view, TEvent &Event) {DispatchEvent3424,107154
int GUI::ConSuspend(void) { return 0; }ConSuspend3431,107320
int GUI::ConContinue(void) { return 0; }ConContinue3433,107361
int GUI::ConGetEvent(TEventMask EventMask, TEvent *Event, int WaitTime, int Delete, GView **view) {ConGetEvent3435,107403
int GUI::ConPutEvent(TEvent Event) {ConPutEvent3439,107574
int GUI::ConFlush(void) {ConFlush3444,107650
void GUI::ProcessEvent() {ProcessEvent3448,107693
int GUI::Run() {Run3473,108256
int GUI::ShowEntryScreen() {ShowEntryScreen3482,108461
int GUI::RunProgram(int mode, char *Command) {RunProgram3486,108507
static int CreatePipeChild(ULONG *sid, PID *pid, HPIPE &hfPipe, char *Command) {CreatePipeChild3536,109757
static void _LNK_CONV PipeThread(void *p) {PipeThread3682,113597
int GUI::OpenPipe(char *Command, EModel *notify) {OpenPipe3751,115752
int GUI::SetPipeView(int id, EModel *notify) {SetPipeView3793,117100
int GUI::ReadPipe(int id, void *buffer, int len) {ReadPipe3805,117460
int GUI::ClosePipe(int id) {ClosePipe3845,118707
int GUI::multiFrame() {multiFrame3864,119249
void DieError(int rc, const char *msg, ...) {DieError3868,119290
char ConGetDrawChar(int index) {ConGetDrawChar3885,119702

g_qt.cpp,13389
#define DEBUGX(DEBUGX41,780
#define EDIT_BORDER EDIT_BORDER43,810
#define SCROLLBAR_SIZE SCROLLBAR_SIZE44,832
#define MAX_PIPES MAX_PIPES46,859
    int used;used49,897
    int id;id50,911
    int fd;fd51,923
    int pid;pid52,935
    int stopped;stopped53,948
    EModel *notify;notify54,965
} GPipe;GPipe56,1008
static GPipe Pipes[MAX_PIPES] = {Pipes58,1018
#define sfFocus sfFocus62,1087
class QEText: public QWidget {QEText64,1108
    QEText(GViewPeer *peer, QWidget *parent = 0, const char *name = 0);peer69,1188
    QEText(GViewPeer *peer, QWidget *parent = 0, const char *name = 0);parent69,1188
    QEText(GViewPeer *peer, QWidget *parent = 0, const char *name = 0);name69,1188
class QEView: public QFrame {QEView87,1829
    QEView(GViewPeer *peer, QWidget *parent = 0, const char *name = 0);peer95,1977
    QEView(GViewPeer *peer, QWidget *parent = 0, const char *name = 0);parent95,1977
    QEView(GViewPeer *peer, QWidget *parent = 0, const char *name = 0);name95,1977
class QEFrame : public QFrame {QEFrame118,2494
    QEFrame(GFramePeer *peer, QWidget *parent = 0, const char *name = 0);peer122,2573
    QEFrame(GFramePeer *peer, QWidget *parent = 0, const char *name = 0);parent122,2573
    QEFrame(GFramePeer *peer, QWidget *parent = 0, const char *name = 0);name122,2573
    GFramePeer  *frame;frame134,2954
class GViewPeer {GViewPeer137,2982
    QEView *qView;qView139,3008
    GC GCs[256];GCs140,3027
    GView *View;View142,3049
    int wW, wH, wState, wRefresh;wW144,3084
    int wW, wH, wState, wRefresh;wH144,3084
    int wW, wH, wState, wRefresh;wState144,3084
    int wW, wH, wState, wRefresh;wRefresh144,3084
    int cX, cY, cVisible, cStart, cEnd;cX145,3118
    int cX, cY, cVisible, cStart, cEnd;cY145,3118
    int cX, cY, cVisible, cStart, cEnd;cVisible145,3118
    int cX, cY, cVisible, cStart, cEnd;cStart145,3118
    int cX, cY, cVisible, cStart, cEnd;cEnd145,3118
    int sbVstart, sbVamount, sbVtotal;sbVstart146,3158
    int sbVstart, sbVamount, sbVtotal;sbVamount146,3158
    int sbVstart, sbVamount, sbVtotal;sbVtotal146,3158
    int sbHstart, sbHamount, sbHtotal;sbHstart147,3197
    int sbHstart, sbHamount, sbHtotal;sbHamount147,3197
    int sbHstart, sbHamount, sbHtotal;sbHtotal147,3197
    int VertPos, HorzPos;VertPos148,3236
    int VertPos, HorzPos;HorzPos148,3236
    unsigned char *ScreenBuffer;ScreenBuffer149,3262
class GFramePeer {GFramePeer185,4383
    GFrame *Frame;Frame187,4410
    QEFrame *qFrame;qFrame188,4429
int ShowVScroll = 1;ShowVScroll202,4779
int ShowHScroll = 0;ShowHScroll203,4800
int ShowMenuBar = 1;ShowMenuBar204,4821
int ShowToolBar = 0;ShowToolBar205,4842
GFrame *frames = 0;frames207,4864
GUI *gui = 0;gui208,4884
static GView *MouseCapture = 0;MouseCapture210,4899
static GView *FocusCapture = 0;FocusCapture211,4931
static int cxChar = 1;cxChar213,4964
static int cyChar = 1;cyChar214,4987
static int fmAscent;fmAscent215,5010
static int FinalExit = 0;FinalExit216,5031
TEvent EventBuf = { evNone };EventBuf218,5058
typedef struct _qEvent {_qEvent220,5089
    TEvent event;event221,5114
    struct _qEvent *next;next222,5132
} qEvent;qEvent223,5158
TEvent NextEvent = { evNone };NextEvent225,5169
static QColor colors[16] = {colors226,5200
static XFontStruct *fontStruct;fontStruct246,5438
static Display *display;display247,5470
static QPoint LastMousePos;LastMousePos249,5496
static int LastMouseX = -1, LastMouseY = -1;LastMouseX251,5525
static int LastMouseX = -1, LastMouseY = -1;LastMouseY251,5525
static qEvent *event_head = 0;event_head253,5571
static qEvent *event_tail = 0;event_tail254,5602
static int qPutEvent(TEvent &Event) {qPutEvent256,5634
static int qHasEvent() {qHasEvent273,5932
static void qGetEvent(TEvent &Event) {qGetEvent277,5991
QEView::QEView(GViewPeer *peer, QWidget *parent, const char *name): QFrame(parent, name)QEView287,6173
QEView::~QEView() {~QEView318,7360
void QEView::setViewPos(int x, int y, int w, int h) {setViewPos323,7417
void QEView::ActiveEvent(TEvent &Event) {ActiveEvent330,7748
void QEView::sbHmoveLeft() {sbHmoveLeft336,7900
void QEView::sbHmoveRight() {sbHmoveRight343,8072
void QEView::sbHpageLeft() {sbHpageLeft350,8246
void QEView::sbHpageRight() {sbHpageRight357,8418
void QEView::sbHmoveTo(int pos) {sbHmoveTo364,8591
void QEView::sbVmoveUp() {sbVmoveUp372,8800
void QEView::sbVmoveDown() {sbVmoveDown379,8968
void QEView::sbVpageUp() {sbVpageUp386,9140
void QEView::sbVpageDown() {sbVpageDown393,9310
void QEView::sbVmoveTo(int pos) {sbVmoveTo400,9482
QEText::QEText(GViewPeer *peer, QWidget *parent, const char *name): QWidget(parent, name) {QEText409,9692
QEText::~QEText() {~QEText416,9860
void QEText::resizeEvent(QResizeEvent *qe) {resizeEvent419,9883
void QEText::paintEvent(QPaintEvent *qe) {paintEvent441,10458
void QEText::handleMouse(QMouseEvent *qe) {handleMouse448,10670
void QEText::mousePressEvent(QMouseEvent *qe) {mousePressEvent508,12405
void QEText::mouseMoveEvent(QMouseEvent *qe) {mouseMoveEvent512,12477
void QEText::mouseReleaseEvent(QMouseEvent *qe) {mouseReleaseEvent516,12548
    unsigned int q_code;q_code521,12638
    TKeyCode keyCode;keyCode522,12663
} key_table[] = {key_table523,12685
void QEText::ActiveEvent(TEvent &Event) {ActiveEvent564,13865
void QEText::handleKeyPressEvent(QKeyEvent *qe) {handleKeyPressEvent570,14017
void QEText::keyPressEvent(QKeyEvent *qe) {keyPressEvent618,15211
void QEText::focusInEvent(QFocusEvent *qe) {focusInEvent626,15405
void QEText::focusOutEvent(QFocusEvent *qe) {focusOutEvent631,15504
QEFrame::QEFrame(GFramePeer *peer, QWidget *parent, const char *name): QFrame(parent, name)QEFrame636,15605
void QEFrame::resizeEvent(QResizeEvent *qe) {resizeEvent643,15765
void QEFrame::closeEvent(QCloseEvent *qe) {closeEvent683,16695
void QEFrame::selectedMain(int id) {selectedMain691,16926
GViewPeer::GViewPeer(GView *view, int XSize, int YSize) {GViewPeer759,19179
GViewPeer::~GViewPeer() {~GViewPeer790,19746
int GViewPeer::AllocBuffer() {AllocBuffer794,19793
#define InRange(InRange807,20077
#define CursorXYPos(CursorXYPos808,20130
void GViewPeer::DrawCursor(/*QPainter *painter, */int Show) {DrawCursor810,20196
int GViewPeer::ConPutBox(int X, int Y, int W, int H, PCell Cell) {ConPutBox863,21882
void GViewPeer::UpdateWindow(int xx, int yy, int ww, int hh) {UpdateWindow967,25172
int GViewPeer::ConGetBox(int X, int Y, int W, int H, PCell Cell) {ConGetBox986,25615
int GViewPeer::ConPutLine(int X, int Y, int W, int H, PCell Cell) {ConPutLine996,25822
int GViewPeer::ConSetBox(int X, int Y, int W, int H, TCell Cell) {ConSetBox1005,26020
int GViewPeer::ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count) {ConScroll1014,26211
int GViewPeer::ConSetSize(int X, int Y) {ConSetSize1109,29551
int GViewPeer::ConQuerySize(int *X, int *Y) {ConQuerySize1146,30500
int GViewPeer::ConSetCursorPos(int X, int Y) {ConSetCursorPos1152,30603
int GViewPeer::ConQueryCursorPos(int *X, int *Y) {ConQueryCursorPos1170,30975
int GViewPeer::ConShowCursor() {ConShowCursor1176,31083
int GViewPeer::ConHideCursor() {ConHideCursor1182,31172
int GViewPeer::ConCursorVisible() {ConCursorVisible1188,31261
int GViewPeer::ConSetCursorSize(int Start, int End) {ConSetCursorSize1192,31321
int GViewPeer::ExpandHeight(int DeltaY) {ExpandHeight1201,31516
int GViewPeer::QuerySbVPos() {QuerySbVPos1205,31575
int GViewPeer::SetSbVPos(int Start, int Amount, int Total) {SetSbVPos1209,31630
int GViewPeer::SetSbHPos(int Start, int Amount, int Total) {SetSbHPos1233,32290
int GViewPeer::UpdateCursor() {UpdateCursor1258,32959
int GViewPeer::PMShowCursor() {PMShowCursor1268,33150
int GViewPeer::PMHideCursor() {PMHideCursor1272,33199
int GViewPeer::PMSetCursorPos() {PMSetCursorPos1276,33248
GView::GView(GFrame *parent, int XSize, int YSize) {GView1282,33376
GView::~GView() {~GView1290,33567
int GView::ConClear() {ConClear1297,33673
int GView::ConPutBox(int X, int Y, int W, int H, PCell Cell) {ConPutBox1307,33848
int GView::ConGetBox(int X, int Y, int W, int H, PCell Cell) {ConGetBox1311,33960
int GView::ConPutLine(int X, int Y, int W, int H, PCell Cell) {ConPutLine1315,34072
int GView::ConSetBox(int X, int Y, int W, int H, TCell Cell) {ConSetBox1319,34186
int GView::ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count) {ConScroll1323,34298
int GView::ConSetSize(int X, int Y) {ConSetSize1327,34442
int GView::ConQuerySize(int *X, int *Y) {ConQuerySize1335,34582
int GView::ConSetCursorPos(int X, int Y) {ConSetCursorPos1339,34664
int GView::ConQueryCursorPos(int *X, int *Y) {ConQueryCursorPos1343,34750
int GView::ConShowCursor() {ConShowCursor1347,34842
int GView::ConHideCursor() {ConHideCursor1351,34908
int GView::ConCursorVisible() {ConCursorVisible1355,34974
int GView::ConSetCursorSize(int Start, int End) {ConSetCursorSize1359,35047
int GView::QuerySbVPos() {QuerySbVPos1363,35147
int GView::SetSbVPos(int Start, int Amount, int Total) {SetSbVPos1367,35209
int GView::SetSbHPos(int Start, int Amount, int Total) {SetSbHPos1371,35319
int GView::ExpandHeight(int DeltaY) {ExpandHeight1375,35429
void GView::Update() {Update1379,35509
void GView::Repaint() {Repaint1382,35535
void GView::HandleEvent(TEvent &Event) {HandleEvent1385,35562
void GView::Resize(int width, int height) {Resize1388,35606
void GView::EndExec(int NewResult) {EndExec1392,35668
int GView::Execute() {Execute1396,35732
int GView::IsActive() {IsActive1408,35960
void GView::Activate(int gotfocus) {Activate1412,36024
int GView::CaptureMouse(int grab) {CaptureMouse1422,36215
GFramePeer::GFramePeer(GFrame *aFrame, int Width, int Height) {GFramePeer1439,36586
GFramePeer::~GFramePeer() {~GFramePeer1448,36807
int GFramePeer::ConSetSize(int X, int Y) {ConSetSize1452,36857
int GFramePeer::ConQuerySize(int *X, int *Y) {ConQuerySize1457,36950
int GFramePeer::ConSetTitle(char *Title, char *STitle) {ConSetTitle1470,37210
int GFramePeer::ConGetTitle(char *Title, int MaxLen, char *STitle, int SMaxLen) {ConGetTitle1476,37348
void GFramePeer::MapFrame() {MapFrame1484,37600
void GFramePeer::ShowFrame() {ShowFrame1517,38744
GFrame::GFrame(int XSize, int YSize) {GFrame1523,38875
GFrame::~GFrame() {~GFrame1538,39218
int GFrame::ConSetTitle(char *Title, char *STitle) {ConSetTitle1554,39509
int GFrame::ConGetTitle(char *Title, int MaxLen, char *STitle, int SMaxLen) {ConGetTitle1558,39610
int GFrame::ConSetSize(int X, int Y) {ConSetSize1562,39753
int GFrame::ConQuerySize(int *X, int *Y) {ConQuerySize1566,39830
int GFrame::ConSplitView(GView *view, GView *newview) {ConSplitView1570,39913
int GFrame::ConCloseView(GView *view) {ConCloseView1585,40402
int GFrame::ConResizeView(GView *view, int DeltaY) {ConResizeView1589,40459
int GFrame::AddView(GView *view) {AddView1593,40529
void GFrame::Update() {Update1611,40925
void GFrame::UpdateMenu() {UpdateMenu1623,41107
void GFrame::Repaint() {Repaint1626,41138
void GFrame::InsertView(GView *Prev, GView *view) {InsertView1637,41304
void GFrame::RemoveView(GView *view) {RemoveView1654,41679
void GFrame::SelectNext(int back) {SelectNext1682,42446
int GFrame::SelectView(GView *view) {SelectView1703,42899
void GFrame::Resize(int width, int height) {Resize1720,43262
void GFrame::Show() {Show1733,43486
void GFrame::Activate() {Activate1738,43547
QPopupMenu *QEFrame::CreatePopup(QWidget *parent, int Id, int do_connect) {CreatePopup1744,43632
QMenuBar *QEFrame::CreateMenuBar(QWidget *parent, int Id) {CreateMenuBar1773,44630
int GFrame::SetMenu(const char *Name) {SetMenu1802,45585
int GFrame::ExecMainMenu(char Sub) {ExecMainMenu1822,46136
int GFrame::PopupMenu(const char *Name) {PopupMenu1826,46190
void QEFrame::timerDone() {timerDone1834,46373
GUI::GUI(int &argc, char **argv, int XSize, int YSize) {GUI1842,46455
GUI::~GUI() {~GUI1870,47156
int GUI::ConGrabEvents(TEventMask EventMask) {ConGrabEvents1874,47186
void GUI::DispatchEvent(GFrame *frame, GView *view, TEvent &Event) {DispatchEvent1878,47250
int GUI::ConSuspend(void) { return 0; }ConSuspend1885,47416
int GUI::ConContinue(void) { return 0; }ConContinue1887,47457
int GUI::ConGetEvent(TEventMask EventMask, TEvent *Event, int WaitTime, int Delete, GView **view) {ConGetEvent1889,47499
int GUI::ConPutEvent(TEvent Event) {ConPutEvent1895,47706
int GUI::ConFlush(void) {ConFlush1900,47782
void GUI::ProcessEvent() {ProcessEvent1904,47825
int GUI::Run() {Run1944,48913
int GUI::ShowEntryScreen() {ShowEntryScreen1958,49120
int GUI::RunProgram(char *Command) {RunProgram1962,49166
int GUI::OpenPipe(char *Command, EModel *notify) {OpenPipe1997,50126
int GUI::SetPipeView(int id, EModel *notify) {SetPipeView2035,51212
int GUI::ReadPipe(int id, void *buffer, int len) {ReadPipe2055,51825
int GUI::ClosePipe(int id) {ClosePipe2081,52436
int GUI::multiFrame() { return 1; }multiFrame2094,52724
int GetXSelection(int *len, char **data) {GetXSelection2096,52761
int SetXSelection(int len, char *data) {SetXSelection2112,53083
void DieError(int rc, const char *msg, ...) {DieError2123,53333
char ConGetDrawChar(int index) {ConGetDrawChar2132,53487

g_qt_dlg.cpp,1721
#define DEBUGX(DEBUGX21,347
unsigned long HaveGUIDialogs = GUIDLG_FILE | GUIDLG_CHOICE;HaveGUIDialogs23,378
int DLGGetFile(GView *v, const char *Prompt, unsigned int BufLen, char *FileName, int Flags) {DLGGetFile25,439
const int kMaxButton = 16;kMaxButton49,1103
class QChoiceBox : public QDialog {QChoiceBox51,1131
    QChoiceBox(QWidget *parent=0, const char *name=0);parent54,1188
    QChoiceBox(QWidget *parent=0, const char *name=0);name54,1188
    int getChoice() { return buttonActivated; }getChoice61,1343
    QLabel *label;label72,1527
    QPushButton *button[kMaxButton];button73,1546
    int buttonCount;buttonCount74,1583
    int buttonArmed;buttonArmed75,1604
    int buttonSelected;buttonSelected76,1625
    int buttonActivated;buttonActivated77,1649
    void *reserved1;reserved178,1674
    void *reserved2;reserved279,1695
QChoiceBox::QChoiceBox(QWidget *parent, const char *name)QChoiceBox83,1721
void QChoiceBox::setText(const char *text) {setText100,2109
void QChoiceBox::addButton(const char *text) {addButton104,2183
void QChoiceBox::adjustSize() {adjustSize117,2713
void QChoiceBox::resizeEvent( QResizeEvent * ) {resizeEvent136,3213
void QChoiceBox::pressed() {pressed153,3642
void QChoiceBox::released() {released164,3896
void QChoiceBox::clicked() {clicked169,3982
int DLGPickChoice(GView *v, char *ATitle, int NSel, va_list ap, int Flags) {DLGPickChoice177,4138
int DLGGetFind(GView *View, SearchReplaceOptions &sr) {DLGGetFind200,4646
int DLGGetFindReplace(GView *View, SearchReplaceOptions &sr) {DLGGetFindReplace205,4737
int DLGGetStr(GView *View, char *Prompt, unsigned int BufLen, char *Str, int HistId, int Flags) {DLGGetStr210,4835

g_text.cpp,8023
#define new new25,500
int ShowVScroll = 1;ShowVScroll30,592
int ShowHScroll = 1;ShowHScroll31,613
int ShowMenuBar = 1;ShowMenuBar32,634
int ShowToolBar = 0;ShowToolBar33,655
unsigned long HaveGUIDialogs = 0; // no gui dialogs in text guiHaveGUIDialogs34,676
GFrame *frames = 0;frames36,741
GUI *gui = 0;gui37,761
GView *MouseCapture = 0;MouseCapture39,776
GView *FocusCapture = 0;FocusCapture40,801
TEvent NextEvent = { 0 };NextEvent42,827
#define sfFocus sfFocus44,854
class GViewPeer {GViewPeer51,1007
    GView *View;View53,1033
    int wX, wY, wW, wH, wState;wX54,1050
    int wX, wY, wW, wH, wState;wY54,1050
    int wX, wY, wW, wH, wState;wW54,1050
    int wX, wY, wW, wH, wState;wH54,1050
    int wX, wY, wW, wH, wState;wState54,1050
    int cX, cY, cVisible, cStart, cEnd;cX55,1082
    int cX, cY, cVisible, cStart, cEnd;cY55,1082
    int cX, cY, cVisible, cStart, cEnd;cVisible55,1082
    int cX, cY, cVisible, cStart, cEnd;cStart55,1082
    int cX, cY, cVisible, cStart, cEnd;cEnd55,1082
    int sbVstart, sbVamount, sbVtotal, sbVupdate;sbVstart56,1122
    int sbVstart, sbVamount, sbVtotal, sbVupdate;sbVamount56,1122
    int sbVstart, sbVamount, sbVtotal, sbVupdate;sbVtotal56,1122
    int sbVstart, sbVamount, sbVtotal, sbVupdate;sbVupdate56,1122
    int sbHstart, sbHamount, sbHtotal, sbHupdate;sbHstart57,1172
    int sbHstart, sbHamount, sbHtotal, sbHupdate;sbHamount57,1172
    int sbHstart, sbHamount, sbHtotal, sbHupdate;sbHtotal57,1172
    int sbHstart, sbHamount, sbHtotal, sbHupdate;sbHupdate57,1172
    int SbVBegin, SbVEnd, SbHBegin, SbHEnd;SbVBegin58,1222
    int SbVBegin, SbVEnd, SbHBegin, SbHEnd;SbVEnd58,1222
    int SbVBegin, SbVEnd, SbHBegin, SbHEnd;SbHBegin58,1222
    int SbVBegin, SbVEnd, SbHBegin, SbHEnd;SbHEnd58,1222
class GFramePeer {GFramePeer91,2237
    int fW, fH;fW93,2264
    int fW, fH;fH93,2264
    GFrame *Frame;Frame94,2280
GViewPeer::GViewPeer(GView *view, int XSize, int YSize) {GViewPeer109,2663
GViewPeer::~GViewPeer() {~GViewPeer130,3033
int GViewPeer::ConPutBox(int X, int Y, int W, int H, PCell Cell) {ConPutBox137,3174
int GViewPeer::ConGetBox(int X, int Y, int W, int H, PCell Cell) {ConGetBox141,3296
int GViewPeer::ConPutLine(int X, int Y, int W, int H, PCell Cell) {ConPutLine145,3418
int GViewPeer::ConSetBox(int X, int Y, int W, int H, TCell Cell) {ConSetBox149,3542
int GViewPeer::ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count) {ConScroll153,3664
int GViewPeer::ConSetSize(int X, int Y) {ConSetSize157,3822
int GViewPeer::ConQuerySize(int *X, int *Y) {ConQuerySize163,3905
int GViewPeer::ConSetCursorPos(int X, int Y) {ConSetCursorPos169,4008
int GViewPeer::ConQueryCursorPos(int *X, int *Y) {ConQueryCursorPos182,4289
int GViewPeer::ConShowCursor() {ConShowCursor188,4397
int GViewPeer::ConHideCursor() {ConHideCursor196,4538
int GViewPeer::ConCursorVisible() {ConCursorVisible204,4679
int GViewPeer::ConSetCursorSize(int Start, int End) {ConSetCursorSize208,4739
int GViewPeer::CaptureMouse(int grab) {CaptureMouse217,4932
int GViewPeer::CaptureFocus(int grab) {CaptureFocus232,5230
int GViewPeer::ExpandHeight(int DeltaY) {ExpandHeight247,5528
int GViewPeer::QuerySbVPos() {QuerySbVPos262,6073
int GViewPeer::SetSbVPos(int Start, int Amount, int Total) {SetSbVPos266,6128
int GViewPeer::SetSbHPos(int Start, int Amount, int Total) {SetSbHPos280,6435
int GViewPeer::UpdateCursor() {UpdateCursor294,6742
int GViewPeer::DrawScrollBar() {DrawScrollBar304,6933
GView::GView(GFrame *parent, int XSize, int YSize) {GView373,8962
GView::~GView() {~GView381,9153
int GView::ConClear() {ConClear387,9241
int GView::ConPutBox(int X, int Y, int W, int H, PCell Cell) {ConPutBox397,9416
int GView::ConGetBox(int X, int Y, int W, int H, PCell Cell) {ConGetBox401,9528
int GView::ConPutLine(int X, int Y, int W, int H, PCell Cell) {ConPutLine405,9640
int GView::ConSetBox(int X, int Y, int W, int H, TCell Cell) {ConSetBox409,9754
int GView::ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count) {ConScroll413,9866
int GView::ConSetSize(int X, int Y) {ConSetSize417,10010
int GView::ConQuerySize(int *X, int *Y) {ConQuerySize425,10146
int GView::ConSetCursorPos(int X, int Y) {ConSetCursorPos429,10228
int GView::ConQueryCursorPos(int *X, int *Y) {ConQueryCursorPos433,10314
int GView::ConShowCursor() {ConShowCursor437,10406
int GView::ConHideCursor() {ConHideCursor441,10472
int GView::ConCursorVisible() {ConCursorVisible445,10538
int GView::ConSetCursorSize(int Start, int End) {ConSetCursorSize449,10611
int GView::CaptureMouse(int grab) {CaptureMouse453,10711
int GView::CaptureFocus(int grab) {CaptureFocus457,10787
int GView::QuerySbVPos() {QuerySbVPos461,10863
int GView::SetSbVPos(int Start, int Amount, int Total) {SetSbVPos465,10925
int GView::SetSbHPos(int Start, int Amount, int Total) {SetSbHPos469,11035
int GView::ExpandHeight(int DeltaY) {ExpandHeight473,11145
void GView::Update() {Update477,11225
void GView::Repaint() {Repaint480,11251
void GView::HandleEvent(TEvent &/*Event*/) {HandleEvent483,11278
void GView::Resize(int /*width*/, int /*height*/) {Resize486,11326
void GView::EndExec(int NewResult) {EndExec490,11396
int GView::Execute() {Execute494,11460
int GView::IsActive() {IsActive515,11917
void GView::Activate(int gotfocus) {Activate519,11981
GFramePeer::GFramePeer(GFrame *aFrame, int Width, int Height) {GFramePeer531,12249
GFramePeer::~GFramePeer() {~GFramePeer538,12436
int GFramePeer::ConSetSize(int X, int Y) {ConSetSize541,12467
int GFramePeer::ConQuerySize(int *X, int *Y) {ConQuerySize545,12544
int GFramePeer::ConSetTitle(char *Title, char *STitle) {ConSetTitle558,12798
int GFramePeer::ConGetTitle(char *Title, int MaxLen, char *STitle, int SMaxLen) {ConGetTitle563,12906
GFrame::GFrame(int XSize, int YSize) {GFrame569,13126
GFrame::~GFrame() {~GFrame584,13469
int GFrame::ConSetTitle(char *Title, char *STitle) {ConSetTitle602,13785
int GFrame::ConGetTitle(char *Title, int MaxLen, char *STitle, int SMaxLen) {ConGetTitle606,13886
int GFrame::ConSetSize(int X, int Y) {ConSetSize610,14029
int GFrame::ConQuerySize(int *X, int *Y) {ConQuerySize614,14106
int GFrame::ConSplitView(GView *view, GView *newview) {ConSplitView618,14189
int GFrame::ConCloseView(GView * /*view*/) {ConCloseView639,14812
int GFrame::ConResizeView(GView * /*view*/, int /*DeltaY*/) {ConResizeView643,14874
int GFrame::AddView(GView *view) {AddView647,14953
void GFrame::Update() {Update674,15545
void GFrame::UpdateMenu() {UpdateMenu691,15937
void GFrame::Repaint() {Repaint696,16012
void GFrame::InsertView(GView *Prev, GView *view) {InsertView714,16384
void GFrame::RemoveView(GView *view) {RemoveView731,16759
void GFrame::SelectNext(int back) {SelectNext759,17566
int GFrame::SelectView(GView *view) {SelectView784,18030
void GFrame::Resize(int width, int height) {Resize799,18288
int GFrame::ExecMainMenu(char Sub) {ExecMainMenu850,19285
int GFrame::SetMenu(const char *Name) {SetMenu857,19443
void GFrame::Show() {Show863,19551
void GFrame::Activate() {Activate866,19576
int GUI::ConGrabEvents(TEventMask /*EventMask*/) {ConGrabEvents870,19624
void GUI::DispatchEvent(GFrame * /*frame*/, GView *view, TEvent &Event) {DispatchEvent874,19692
int GUI::ConGetEvent(TEventMask EventMask, TEvent *Event, int WaitTime, int Delete, GView **view) {ConGetEvent881,19863
int GUI::ConPutEvent(TEvent Event) {ConPutEvent887,20061
int GUI::ConFlush(void) {ConFlush891,20134
static inline int scrollBreak(TEvent &E)scrollBreak895,20177
void HandleVScroll(GView *view, TEvent &E) {HandleVScroll905,20405
void HandleHScroll(GView *view, TEvent &E) {HandleHScroll992,23399
void GUI::ProcessEvent() {ProcessEvent1079,26396
int GUI::Run() {Run1209,30960
int GUI::multiFrame() {multiFrame1220,31141
void DieError(int rc, const char *msg, ...) {DieError1224,31182

gui.cpp,238
int GFrame::isLastFrame() {isLastFrame10,139
void GUI::deleteFrame(GFrame *frame) {deleteFrame17,255
int GUI::Start(int &/*argc*/, char ** /*argv*/) {Start32,596
void GUI::Stop() {Stop36,663
void GUI::StopLoop() {StopLoop39,685

h_ada.cpp,410
#define hsAda_Normal hsAda_Normal14,262
#define hsAda_Comment hsAda_Comment15,291
#define hsAda_CommentL hsAda_CommentL16,320
#define hsAda_Keyword hsAda_Keyword17,349
#define hsAda_String1 hsAda_String118,378
#define hsAda_String2 hsAda_String219,407
int Hilit_ADA(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine *Line, hlState &State, hsState *StateMap, int *ECol) {Hilit_ADA21,437

h_catbs.cpp,190
#define hsBS_Normal hsBS_Normal14,266
int Hilit_CATBS(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine *Line, hlState &State, hsState *StateMap, int *ECol) {Hilit_CATBS18,351

h_c.cpp,3890
#define NEED_LOG_HNEED_LOG_H10,217
#define PRINTF(PRINTF16,278
#define ISNAME(ISNAME18,308
#define hsC_Normal hsC_Normal21,356
#define hsC_Comment hsC_Comment22,383
#define hsC_CommentL hsC_CommentL23,410
#define hsC_Keyword hsC_Keyword24,437
#define hsC_String1 hsC_String125,464
#define hsC_String2 hsC_String226,491
#define hsC_CPP hsC_CPP27,518
#define hsC_CPP_Comm hsC_CPP_Comm28,545
#define hsC_CPP_String1 hsC_CPP_String129,572
#define hsC_CPP_String2 hsC_CPP_String230,599
#define hsC_CPP_ABrace hsC_CPP_ABrace31,626
int Hilit_C(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine *Line, hlState &State, hsState *StateMap, int *ECol) {Hilit_C33,654
int IsState(hsState *Buf, hsState State, int Len) {IsState336,13044
int LookAt(EBuffer *B, int Row, unsigned int Pos, const char *What, hsState State, int NoWord, int CaseInsensitive) {LookAt344,13193
int C_Indent = 4;C_Indent377,14165
int C_BraceOfs = 0;C_BraceOfs378,14183
int C_ParenDelta = -1;C_ParenDelta379,14203
int C_CaseOfs = 0;C_CaseOfs380,14226
int C_CaseDelta = 4;C_CaseDelta381,14245
int C_ClassOfs = 0;C_ClassOfs382,14266
int C_ClassDelta = 4;C_ClassDelta383,14286
int C_ColonOfs = 0;//-4;C_ColonOfs384,14308
int C_CommentOfs = 0;C_CommentOfs385,14333
int C_CommentDelta = 1;C_CommentDelta386,14355
int C_FirstLevelWidth = -1;C_FirstLevelWidth387,14379
int C_FirstLevelIndent = 4;C_FirstLevelIndent388,14407
int C_Continuation = 4;C_Continuation389,14435
int FunctionUsesContinuation = 0;FunctionUsesContinuation390,14459
int EBuffer::SetCIndentStyle(ExState &State) {SetCIndentStyle393,14538
#define C_INDENT C_INDENT423,15526
#define C_BRACE_OFS C_BRACE_OFS424,15563
#define C_PAREN_DELTA C_PAREN_DELTA425,15602
#define C_CASE_OFS C_CASE_OFS426,15643
#define C_CASE_DELTA C_CASE_DELTA427,15681
#define C_CLASS_OFS C_CLASS_OFS428,15721
#define C_CLASS_DELTA C_CLASS_DELTA429,15760
#define C_COLON_OFS C_COLON_OFS430,15801
#define C_COMMENT_OFS C_COMMENT_OFS431,15840
#define C_COMMENT_DELTA C_COMMENT_DELTA432,15881
#define C_CONTINUATION C_CONTINUATION433,15924
#define C_FIRST_INDENT C_FIRST_INDENT434,15967
#define C_FIRST_WIDTH C_FIRST_WIDTH435,16014
#define FIND_IF FIND_IF437,16061
#define FIND_SEMICOLON FIND_SEMICOLON438,16092
#define FIND_COMMA FIND_COMMA439,16123
#define FIND_COLON FIND_COLON440,16154
#define FIND_ELSE FIND_ELSE441,16185
#define FIND_FOR FIND_FOR442,16216
#define FIND_WHILE FIND_WHILE443,16247
#define FIND_ENDBLOCK FIND_ENDBLOCK444,16278
#define FIND_CLASS FIND_CLASS446,16342
#define FIND_CASE FIND_CASE447,16373
#define FIND_SWITCH FIND_SWITCH448,16404
#define FIND_QUESTION FIND_QUESTION449,16435
static int CheckLabel(EBuffer *B, int Line) {CheckLabel451,16467
static int SearchBackMatch(int Count, EBuffer *B, int Row, hsState State, const char *Open, const char *Close, int *OPos, int *OLine, int matchparens = 0, int bolOnly = 0) {SearchBackMatch471,17035
static int FindPrevIndent(EBuffer *B, int &RowP, int &ColP, char &CharP, int Flags) {FindPrevIndent541,19300
#define TEST_ZERO TEST_ZERO555,19681
#undef TEST_ZEROTEST_ZERO816,29365
#define SKIP_FORWARD SKIP_FORWARD820,29403
#define SKIP_BACK SKIP_BACK821,29427
#define SKIP_MATCH SKIP_MATCH822,29451
#define SKIP_LINE SKIP_LINE823,29475
#define SKIP_TOBOL SKIP_TOBOL824,29499
static int SkipWhite(EBuffer *B, int Bottom, int &Row, int &Col, int Flags) {SkipWhite826,29524
static int IndentNormal(EBuffer *B, int Line, int /*StateLen*/, hsState * /*StateMap*/) {IndentNormal895,31331
static int IndentComment(EBuffer *B, int Row, int /*StateLen*/, hsState * /*StateMap*/) {IndentComment1235,44946
static int IndentCPP(EBuffer *B, int Line, int /*StateLen*/, hsState * /*StateMap*/) {IndentCPP1257,45595
int Indent_C(EBuffer *B, int Line, int PosCursor) {Indent_C1264,45782

h_diff.cpp,148
int Hilit_DIFF(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine* Line, hlState& State, hsState *StateMap, int *ECol) {Hilit_DIFF14,264

h_fte.cpp,486
#define hsFTE_Normal hsFTE_Normal14,262
#define hsFTE_Comment hsFTE_Comment15,291
#define hsFTE_Keyword hsFTE_Keyword16,320
#define hsFTE_String1 hsFTE_String117,349
#define hsFTE_String2 hsFTE_String218,378
#define hsFTE_CPP hsFTE_CPP19,407
#define hsFTE_Regexp hsFTE_Regexp20,436
#define hsFTE_KeySpec hsFTE_KeySpec21,465
int Hilit_FTE(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine *Line, hlState &State, hsState *StateMap, int *ECol) {Hilit_FTE23,495

h_html.cpp,462
#define hsHTML_Normal hsHTML_Normal14,264
#define hsHTML_Command hsHTML_Command15,289
#define hsHTML_String1 hsHTML_String116,314
#define hsHTML_String2 hsHTML_String217,339
#define hsHTML_Char hsHTML_Char18,364
#define hsHTML_Slashed hsHTML_Slashed19,389
#define hsHTML_Comment hsHTML_Comment20,414
int Hilit_HTML(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine *Line, hlState &State, hsState *StateMap, int *ECol) {Hilit_HTML22,440

h_ipf.cpp,352
#define hsIPF_Normal hsIPF_Normal14,262
#define hsIPF_Symbol hsIPF_Symbol15,286
#define hsIPF_Tag hsIPF_Tag16,310
#define hsIPF_Control hsIPF_Control17,334
#define hsIPF_String hsIPF_String18,358
int Hilit_IPF(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine *Line, hlState &State, hsState *StateMap, int *ECol) {Hilit_IPF20,383

h_make.cpp,328
#define hsMAKE_Normal hsMAKE_Normal14,264
#define hsMAKE_Comment hsMAKE_Comment15,289
#define hsMAKE_DotCmd hsMAKE_DotCmd16,314
#define hsMAKE_Command hsMAKE_Command17,339
int Hilit_MAKE(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine *Line, hlState &State, hsState *StateMap, int *ECol) {Hilit_MAKE19,365

h_merge.cpp,384
#define hsMERGE_Normal hsMERGE_Normal14,266
#define hsMERGE_Modified hsMERGE_Modified15,295
#define hsMERGE_Original hsMERGE_Original16,324
#define hsMERGE_New hsMERGE_New17,353
#define hsMERGE_Control hsMERGE_Control18,382
int Hilit_MERGE(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine* Line, hlState& State, hsState *StateMap, int *ECol) {Hilit_MERGE20,412

h_msg.cpp,350
#define hsMSG_Normal hsMSG_Normal14,262
#define hsMSG_Header hsMSG_Header15,286
#define hsMSG_Quote hsMSG_Quote16,310
#define hsMSG_Tag hsMSG_Tag17,334
#define hsMSG_Control hsMSG_Control18,358
int Hilit_MSG(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine* Line, hlState& State, hsState *StateMap, int *ECol) {Hilit_MSG20,383

h_pascal.cpp,418
#define hsPas_Normal hsPas_Normal14,268
#define hsPas_Comment1 hsPas_Comment115,297
#define hsPas_Comment2 hsPas_Comment216,326
#define hsPas_Keyword hsPas_Keyword17,355
#define hsPas_String1 hsPas_String118,384
#define hsPas_String2 hsPas_String219,413
int Hilit_PASCAL(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine *Line, hlState &State, hsState *StateMap, int *ECol) {Hilit_PASCAL21,443

h_perl.cpp,1904
#define X_BIT X_BIT25,482
#define X_MASK X_MASK26,544
#define X_NOT(X_NOT27,567
#define kwd(kwd29,610
#define IS_OBRACE(IS_OBRACE31,653
#define NUM_BRACE(NUM_BRACE34,736
#define GET_BRACE(GET_BRACE42,873
#define IS_MBRACE(IS_MBRACE50,1005
#define QCHAR(QCHAR58,1184
#define QSET(QSET59,1237
#define hsPerl_Punct hsPerl_Punct61,1338
#define hsPerl_Comment hsPerl_Comment62,1368
#define hsPerl_Normal hsPerl_Normal63,1398
#define hsPerl_Keyword hsPerl_Keyword64,1428
#define hsPerl_String1 hsPerl_String165,1458
#define hsPerl_String2 hsPerl_String266,1488
#define hsPerl_StringBk hsPerl_StringBk67,1518
#define hsPerl_Variable hsPerl_Variable68,1548
#define hsPerl_Number hsPerl_Number69,1578
#define hsPerl_Function hsPerl_Function70,1608
#define hsPerl_RegexpM hsPerl_RegexpM71,1638
#define hsPerl_RegexpS1 hsPerl_RegexpS172,1668
#define hsPerl_RegexpS2 hsPerl_RegexpS273,1698
#define hsPerl_Docs hsPerl_Docs74,1728
#define hsPerl_Data hsPerl_Data75,1758
#define hsPerl_RegexpS3 hsPerl_RegexpS376,1788
#define hsPerl_Quote1Op hsPerl_Quote1Op78,1819
#define hsPerl_Quote1 hsPerl_Quote179,1849
#define hsPerl_Quote1M hsPerl_Quote1M80,1879
#define hsPerl_Regexp1Op hsPerl_Regexp1Op82,1910
#define hsPerl_Regexp1 hsPerl_Regexp183,1940
#define hsPerl_Regexp1M hsPerl_Regexp1M84,1970
#define hsPerl_Regexp2Op hsPerl_Regexp2Op86,2001
#define hsPerl_Regexp2 hsPerl_Regexp287,2031
#define hsPerl_Regexp2M hsPerl_Regexp2M88,2061
#define hsPerl_HereDoc hsPerl_HereDoc90,2092
#define opQ opQ92,2159
#define opQQ opQQ93,2174
#define opQW opQW94,2189
#define opQX opQX95,2204
#define opM opM96,2219
#define opS opS97,2234
#define opTR opTR98,2249
int Hilit_PERL(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine *Line, hlState &State, hsState *StateMap, int *ECol) {Hilit_PERL100,2265
#define MAXSEOF MAXSEOF107,2556

h_plain.cpp,273
#define hsPLAIN_Normal hsPLAIN_Normal12,239
int Hilit_Plain(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine* Line, hlState& State, hsState *StateMap, int *ECol) {Hilit_Plain14,265
int Indent_Plain(EBuffer *B, int Line, int PosCursor) {Indent_Plain82,2558

h_rexx.cpp,1249
#define hsREXX_Normal hsREXX_Normal14,264
#define hsREXX_Comment hsREXX_Comment15,291
#define hsREXX_String1 hsREXX_String116,318
#define hsREXX_String2 hsREXX_String217,345
#define hsREXX_Keyword hsREXX_Keyword18,372
int Hilit_REXX(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine *Line, hlState &State, hsState *StateMap, int *ECol) {Hilit_REXX20,400
static int Match(int Len, int Pos, hsState *StateMap, const char *Text, const char *String, hsState State) {Match137,4561
static int SearchMatch(int Count, EBuffer *B, int Row, int Ctx) {SearchMatch147,4887
static int CheckLabel(EBuffer *B, int Line) {CheckLabel199,6566
static int SearchBackContext(EBuffer *B, int Row, char &ChFind) {SearchBackContext219,7101
int REXX_Base_Indent = 4;REXX_Base_Indent294,9765
int REXX_Do_Offset = 0;REXX_Do_Offset295,9791
#define REXX_BASE_INDENT REXX_BASE_INDENT297,9816
#define REXX_DO_OFFSET REXX_DO_OFFSET298,9864
static int IndentComment(EBuffer *B, int Row, int /*StateLen*/, hsState * /*StateMap*/) {IndentComment300,9911
static int IndentNormal(EBuffer *B, int Line, int /*StateLen*/, hsState * /*StateMap*/) {IndentNormal312,10226
int Indent_REXX(EBuffer *B, int Line, int PosCursor) {Indent_REXX349,11298

h_sh.cpp,922
enum { hsSH_Normal, hsSH_SQuote, hsSH_DQuote, hsSH_BQuote,hsSH_Normal14,260
enum { hsSH_Normal, hsSH_SQuote, hsSH_DQuote, hsSH_BQuote,hsSH_SQuote14,260
enum { hsSH_Normal, hsSH_SQuote, hsSH_DQuote, hsSH_BQuote,hsSH_DQuote14,260
enum { hsSH_Normal, hsSH_SQuote, hsSH_DQuote, hsSH_BQuote,hsSH_BQuote14,260
hsSH_DBQuote, hsSH_Control, hsSH_Keyword, hsSH_Comment,hsSH_DBQuote15,319
hsSH_DBQuote, hsSH_Control, hsSH_Keyword, hsSH_Comment,hsSH_Control15,319
hsSH_DBQuote, hsSH_Control, hsSH_Keyword, hsSH_Comment,hsSH_Keyword15,319
hsSH_DBQuote, hsSH_Control, hsSH_Keyword, hsSH_Comment,hsSH_Comment15,319
hsSH_Variable, hsSH_EOF };hsSH_Variable16,375
hsSH_Variable, hsSH_EOF };hsSH_EOF16,375
#define MAXSEOF MAXSEOF18,403
static char seof[MAXSEOF];seof19,423
int Hilit_SH(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine *Line, hlState &State, hsState *StateMap, int *ECol) {Hilit_SH21,451

h_simple.cpp,152
int Hilit_SIMPLE(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine *Line, hlState &State, hsState *StateMap, int *ECol) {Hilit_SIMPLE14,268

h_tex.cpp,312
#define hsTEX_Normal hsTEX_Normal14,262
#define hsTEX_Tag hsTEX_Tag15,286
#define hsTEX_Comment hsTEX_Comment16,310
#define hsTEX_Special hsTEX_Special17,334
int Hilit_TEX(EBuffer *BF, int /*LN*/, PCell B, int Pos, int Width, ELine *Line, hlState &State, hsState *StateMap, int *ECol) {Hilit_TEX19,359

i_ascii.cpp,522
static int SPos = 0;SPos14,262
static int SLPos = 0;SLPos15,283
ExASCII::ExASCII(): ExView() {ExASCII17,306
ExASCII::~ExASCII() {~ExASCII22,374
void ExASCII::Activate(int gotfocus) {Activate27,433
int ExASCII::BeginMacro() {BeginMacro31,507
void ExASCII::HandleEvent(TEvent &Event) {HandleEvent35,552
void ExASCII::UpdateView() {UpdateView94,2605
void ExASCII::RepaintView() {RepaintView100,2687
void ExASCII::UpdateStatus() {UpdateStatus106,2771
void ExASCII::RepaintStatus() {RepaintStatus110,2826

i_choice.cpp,582
ExChoice::ExChoice(const char *ATitle, int NSel, va_list ap): ExView() {ExChoice12,240
ExChoice::~ExChoice() {~ExChoice35,765
void ExChoice::Activate(int gotfocus) {Activate41,867
int ExChoice::BeginMacro() {BeginMacro45,942
int ExChoice::FindChoiceByPoint(int x, int y) {FindChoiceByPoint49,988
void ExChoice::HandleEvent(TEvent &Event) {HandleEvent72,1405
void ExChoice::UpdateView() {UpdateView135,3431
void ExChoice::RepaintView() {RepaintView141,3514
void ExChoice::UpdateStatus() {UpdateStatus147,3599
void ExChoice::RepaintStatus() {RepaintStatus151,3655

i_complete.cpp,985
#define STRCOMPLETE STRCOMPLETE14,266
#define STRNOCOMPLETE STRNOCOMPLETE15,305
#define LOCALE_SORTLOCALE_SORT17,358
static int _LNK_CONV CmpStr(const void *p1, const void *p2) {CmpStr22,423
ExComplete::ExComplete(EBuffer *B): ExView()ExComplete35,771
ExComplete::~ExComplete()~ExComplete46,1012
void ExComplete::Activate(int gotfocus)Activate60,1287
int ExComplete::BeginMacro()BeginMacro65,1364
void ExComplete::HandleEvent(TEvent &Event)HandleEvent70,1412
void ExComplete::UpdateView()UpdateView196,4266
void ExComplete::RepaintView()RepaintView203,4351
void ExComplete::UpdateStatus()UpdateStatus210,4438
void ExComplete::RepaintStatus()RepaintStatus215,4496
#define COM_NORM COM_NORM221,4644
#define COM_ORIG COM_ORIG222,4666
#define COM_HIGH COM_HIGH223,4688
#define COM_MARK COM_MARK224,4710
#define COM_ERR COM_ERR225,4732
int ExComplete::RefreshComplete()RefreshComplete263,5752
void ExComplete::FixedUpdate(int add)FixedUpdate382,8555

i_input.cpp,554
ExInput::ExInput(const char *APrompt, char *ALine, unsigned int ABufLen, Completer AComp, int Select, int AHistId): ExView() {ExInput12,239
ExInput::~ExInput() {~ExInput34,848
void ExInput::Activate(int gotfocus) {Activate47,1055
int ExInput::BeginMacro() {BeginMacro51,1129
void ExInput::HandleEvent(TEvent &Event) {HandleEvent55,1174
void ExInput::UpdateView() {UpdateView266,8408
void ExInput::RepaintView() {RepaintView272,8490
void ExInput::UpdateStatus() {UpdateStatus278,8574
void ExInput::RepaintStatus() {RepaintStatus282,8629

i_key.cpp,440
ExKey::ExKey(const char *APrompt): ExView() {ExKey12,237
ExKey::~ExKey() {~ExKey19,366
void ExKey::Activate(int gotfocus) {Activate23,405
int ExKey::BeginMacro() {BeginMacro27,477
void ExKey::HandleEvent(TEvent &Event) {HandleEvent31,520
void ExKey::UpdateView() {UpdateView42,775
void ExKey::RepaintView() {RepaintView48,855
void ExKey::UpdateStatus() {UpdateStatus54,937
void ExKey::RepaintStatus() {RepaintStatus58,990

i_modelview.cpp,837
ExModelView::ExModelView(EView *AView): ExView() {ExModelView12,243
ExModelView::~ExModelView() {~ExModelView19,382
int ExModelView::GetContext() {GetContext26,488
void ExModelView::Activate(int gotfocus) {Activate30,554
EEventMap *ExModelView::GetEventMap() {GetEventMap35,662
int ExModelView::ExecCommand(int Command, ExState &State) {ExecCommand39,737
int ExModelView::BeginMacro() {BeginMacro43,846
void ExModelView::HandleEvent(TEvent &Event) {HandleEvent47,912
void ExModelView::UpdateView() {UpdateView52,1024
void ExModelView::RepaintView() {RepaintView56,1084
void ExModelView::RepaintStatus() {RepaintStatus60,1146
void ExModelView::UpdateStatus() {UpdateStatus64,1212
void ExModelView::Resize(int width, int height) {Resize68,1276
void ExModelView::WnSwitchBuffer(EModel *B) {WnSwitchBuffer72,1362

indent.cpp,78
int Indent_SIMPLE(EBuffer *B, int Line, int PosCursor) {Indent_SIMPLE16,287

i_oview.cpp,1254
ExView::ExView() {ExView12,239
ExView::~ExView() {~ExView15,261
void ExView::Activate(int /*gotfocus*/) {Activate18,284
int ExView::IsActive() {IsActive21,329
EEventMap *ExView::GetEventMap() { return 0; }GetEventMap27,416
int ExView::ExecCommand(int /*Command*/, ExState &/*State*/) { return ErFAIL; }ExecCommand29,464
int ExView::BeginMacro() {BeginMacro31,545
void ExView::HandleEvent(TEvent &Event) {HandleEvent35,589
void ExView::EndExec(int NewResult) {EndExec40,738
void ExView::UpdateView() {UpdateView50,941
void ExView::UpdateStatus() {UpdateStatus53,972
void ExView::RepaintView() {RepaintView56,1005
void ExView::RepaintStatus() {RepaintStatus59,1037
void ExView::Resize(int /*width*/, int /*height*/) {Resize62,1071
int ExView::ConPutBox(int X, int Y, int W, int H, PCell Cell) {ConPutBox66,1142
int ExView::ConScroll(int Way, int X, int Y, int W, int H, TAttr Fill, int Count) {ConScroll72,1286
int ExView::ConQuerySize(int *X, int *Y) {ConQuerySize78,1462
int ExView::ConSetCursorPos(int X, int Y) {ConSetCursorPos84,1576
int ExView::ConShowCursor() {ConShowCursor90,1694
int ExView::ConHideCursor() {ConHideCursor96,1792
int ExView::ConSetCursorSize(int Start, int End) {ConSetCursorSize102,1890

i_search.cpp,609
static char PrevISearch[MAXISEARCH] = "";PrevISearch14,264
ExISearch::ExISearch(EBuffer *B) {ExISearch16,307
ExISearch::~ExISearch() {~ExISearch26,489
void ExISearch::Activate(int gotfocus) {Activate31,587
int ExISearch::BeginMacro() { return 1; }BeginMacro35,663
void ExISearch::HandleEvent(TEvent &Event) {HandleEvent37,706
void ExISearch::UpdateView() {UpdateView145,4138
void ExISearch::RepaintView() {RepaintView151,4222
void ExISearch::UpdateStatus() {UpdateStatus157,4308
void ExISearch::RepaintStatus() {RepaintStatus161,4365
void ExISearch::SetState(IState s) {SetState184,4941

i_view.cpp,1529
GxView::GxView(GFrame *Parent): GView(Parent, -1, -1) {GxView12,238
GxView::~GxView() {~GxView17,342
void GxView::PushView(ExView *view) {PushView30,534
ExView *GxView::PopView() {PopView47,851
void GxView::NewView(ExView * /*view*/) {NewView69,1129
EEventMap *GxView::GetEventMap() {GetEventMap72,1174
int GxView::ExecCommand(int Command, ExState &State) {ExecCommand78,1274
int GxView::BeginMacro() {BeginMacro84,1408
int GxView::GetContext() {GetContext90,1499
void GxView::HandleEvent(TEvent &Event) {HandleEvent97,1614
void GxView::Update() {Update140,2798
void GxView::Repaint() {Repaint147,2897
void GxView::Resize(int width, int height) {Resize160,3123
void GxView::Activate(int gotfocus) {Activate171,3311
void GxView::UpdateTitle(char *Title, char *STitle) {UpdateTitle177,3429
int GxView::GetStr(const char *Prompt, unsigned int BufLen, char *Str, int HistId) {GetStr183,3580
int GxView::GetFile(const char *Prompt, unsigned int BufLen, char *Str, int HistId, int Flags) {GetFile191,3868
int GxView::ReadStr(const char *Prompt, unsigned int BufLen, char *Str, Completer Comp, int Select, int HistId) {ReadStr198,4175
int GxView::Choice(unsigned long Flags, const char *Title, int NSel, ... /* choices, format, args */) {Choice223,4652
TKeyCode GxView::GetChar(const char *Prompt) {GetChar255,5296
int GxView::IncrementalSearch(EView *View) {IncrementalSearch277,5624
int GxView::PickASCII() {PickASCII304,6033
int GxView::ICompleteWord(EView *View) {ICompleteWord323,6298

log.cpp,798
GlobalLog globalLog;globalLog33,789
bool GlobalLog::OpenLogFile()OpenLogFile35,811
static ofstream ofsInvalid;ofsInvalid60,1361
ostream& GlobalLog::operator()()operator ()62,1390
FunctionLog::FunctionLog(GlobalLog& gl, const char* funcName, unsigned long line)FunctionLog83,2016
FunctionLog::~FunctionLog()~FunctionLog89,2234
ostream& FunctionLog::RC(unsigned long line)RC96,2357
ostream& FunctionLog::OutputIndent(ostream& os)OutputIndent102,2492
ostream& Log__osBinChar(ostream& os, char const& c)Log__osBinChar112,2742
ostream& Log__osFillChar(ostream& os, char const& c, size_t const& len)Log__osFillChar121,2960
#define LINE_LENGTH LINE_LENGTH128,3106
void Log__BinaryData(FunctionLog& LOGOBJNAME, void* bin_data, size_t len, unsigned long line)Log__BinaryData129,3128

memicmp.cpp,69
int memicmp(const void *s1, const void *s2, size_t n)memicmp11,198

menu_text.cpp,854
class UpMenu {UpMenu22,441
    class UpMenu *up;up24,464
    int id;id25,486
    int vert;vert26,498
    int x, y, w, h;x27,512
    int x, y, w, h;y27,512
    int x, y, w, h;w27,512
    int x, y, w, h;h27,512
int GetHOfsItem(int id, int cur) {GetHOfsItem30,536
int GetHPosItem(int id, int X) {GetHPosItem45,864
int DrawHMenu(int x, int y, int id, int active) {DrawHMenu60,1215
int GetVPosItem(int id, int w, int X, int Y) {GetVPosItem95,2280
int GetVSize(int id, int &X, int &Y) {GetVSize102,2492
int DrawVMenu(int x, int y, int id, int active) {DrawVMenu119,2822
int ExecVertMenu(int x, int y, int id, TEvent &E, UpMenu *up) {ExecVertMenu182,4988
int ExecMainMenu(TEvent &E, char sub) {ExecMainMenu469,14722
void GFrame::DrawMenuBar() {DrawMenuBar653,20732
int GFrame::PopupMenu(const char *Name) {PopupMenu661,20850

o_buffer.cpp,4807
SearchReplaceOptions LSearch = { 0 };LSearch12,240
int suspendLoads = 0;suspendLoads13,278
EViewPort *EBuffer::CreateViewPort(EView *V) {CreateViewPort15,301
EEditPort::EEditPort(EBuffer *B, EView *V): EViewPort(V) {EEditPort42,889
EEditPort::~EEditPort() {~EEditPort56,1184
void EEditPort::Resize(int Width, int Height) {Resize60,1229
int EEditPort::SetTop(int Col, int Line) {SetTop66,1338
void EEditPort::StorePos() {StorePos86,1736
void EEditPort::GetPos() {GetPos91,1810
void EEditPort::ScrollY(int Delta) {ScrollY96,1882
void EEditPort::DrawLine(int L, TDrawBuffer B) {DrawLine112,2377
void EEditPort::RedrawAll() {RedrawAll120,2709
int EBuffer::GetContext() {GetContext125,2809
void EEditPort::HandleEvent(TEvent &Event) {HandleEvent129,2865
void EEditPort::HandleMouse(TEvent &Event) {HandleMouse210,5156
void EEditPort::UpdateView() {UpdateView333,9381
void EEditPort::RepaintView() {RepaintView337,9437
void EEditPort::UpdateStatus() {UpdateStatus341,9489
void EEditPort::RepaintStatus() {RepaintStatus344,9525
EEventMap *EBuffer::GetEventMap() {GetEventMap348,9586
int EBuffer::BeginMacro() {BeginMacro352,9657
int EBuffer::ExecCommand(int Command, ExState &State) {ExecCommand356,9714
void EBuffer::HandleEvent(TEvent &Event) {HandleEvent643,24170
int EBuffer::MoveToLine(ExState &State) {MoveToLine647,24248
int EBuffer::MoveToColumn(ExState &State) {MoveToColumn661,24605
int EBuffer::FoldCreateByRegexp(ExState &State) {FoldCreateByRegexp674,24937
int EBuffer::PlaceBookmark(ExState &State) {PlaceBookmark684,25264
int EBuffer::RemoveBookmark(ExState &State) {RemoveBookmark695,25582
int EBuffer::GotoBookmark(ExState &State) {GotoBookmark703,25855
int EBuffer::PlaceGlobalBookmark(ExState &State) {PlaceGlobalBookmark712,26129
int EBuffer::PushGlobalBookmark() {PushGlobalBookmark726,26558
int EBuffer::InsertChar(ExState &State) {InsertChar736,26777
int EBuffer::TypeChar(ExState &State) {TypeChar752,27158
int EBuffer::InsertString(ExState &State) {InsertString768,27523
int EBuffer::SelfInsert(ExState &/*State*/) {SelfInsert780,27865
int EBuffer::FileReload(ExState &/*State*/) {FileReload786,28003
int EBuffer::FileSaveAs(char *FName) {FileSaveAs806,28451
int EBuffer::FileSaveAs(ExState &State) {FileSaveAs840,29363
int EBuffer::FileWriteTo(char *FName) {FileWriteTo850,29674
int EBuffer::FileWriteTo(ExState &State) {FileWriteTo880,30512
int EBuffer::BlockReadX(ExState &State, int blockMode) {BlockReadX889,30814
int EBuffer::BlockRead(ExState &State) {BlockRead905,31373
int EBuffer::BlockReadStream(ExState &State) {BlockReadStream909,31458
int EBuffer::BlockReadLine(ExState &State) {BlockReadLine913,31548
int EBuffer::BlockReadColumn(ExState &State) {BlockReadColumn917,31634
int EBuffer::BlockWrite(ExState &State) {BlockWrite921,31724
int EBuffer::Find(ExState &State) {Find964,32992
int EBuffer::FindReplace(ExState &State) {FindReplace1009,34689
int EBuffer::FindRepeat(ExState &State) {FindRepeat1062,36951
int EBuffer::FindRepeatReverse(ExState &State) {FindRepeatReverse1070,37168
int EBuffer::FindRepeatOnce(ExState &State) {FindRepeatOnce1082,37464
int EBuffer::ChangeMode(ExState &State) {ChangeMode1091,37721
int EBuffer::ChangeKeys(ExState &State) {ChangeKeys1103,38015
int EBuffer::ChangeFlags(ExState &State) {ChangeFlags1115,38309
int EBuffer::ChangeTabSize(ExState &State) {ChangeTabSize1127,38605
int EBuffer::SetIndentWithTabs(ExState &State) {SetIndentWithTabs1144,39028
int EBuffer::ChangeRightMargin(ExState &State) {ChangeRightMargin1152,39208
int EBuffer::ChangeLeftMargin(ExState &State) {ChangeLeftMargin1167,39657
int EBuffer::CanQuit() {CanQuit1183,40101
int EBuffer::ConfQuit(GxView *V, int multiFile) {ConfQuit1190,40192
void EBuffer::GetName(char *AName, int MaxLen) {GetName1256,42332
void EBuffer::GetPath(char *APath, int MaxLen) {GetPath1261,42449
void EBuffer::GetInfo(char *AInfo, int MaxLen) {GetInfo1265,42537
void EBuffer::GetTitle(char *ATitle, int MaxLen, char *ASTitle, int SMaxLen) {GetTitle1289,43313
int EBuffer::ASCIITable(ExState &/*State*/) {ASCIITable1305,43724
int EBuffer::ScrollLeft(ExState &State) {ScrollLeft1316,43903
int EBuffer::ScrollRight(ExState &State) {ScrollRight1324,44055
int EBuffer::ScrollDown(ExState &State) {ScrollDown1332,44209
int EBuffer::ScrollUp(ExState &State) {ScrollUp1340,44361
int EBuffer::FindTag(ExState &State) {FindTag1349,44528
int EBuffer::InsertDate(ExState &State) {InsertDate1377,45212
int EBuffer::InsertUid() {InsertUid1401,45743
int EBuffer::ShowHelpWord(ExState &State) {ShowHelpWord1415,46150
int EBuffer::GetStrVar(int var, char *str, int buflen) {GetStrVar1461,47671
int EBuffer::GetIntVar(int var, int *value) {GetIntVar1521,49038

o_buflist.cpp,889
BufferView *BufferList = 0;BufferList12,241
BufferView::BufferView(int createFlags, EModel **ARoot): EList(createFlags, ARoot, "Buffers") {BufferView14,270
BufferView::~BufferView() {~BufferView20,426
EEventMap *BufferView::GetEventMap() {GetEventMap30,624
int BufferView::GetContext() {GetContext34,702
void BufferView::DrawLine(PCell B, int Line, int Col, ChColor color, int Width) {DrawLine38,765
char* BufferView::FormatLine(int Line) {FormatLine44,984
void BufferView::UpdateList() {UpdateList48,1060
EModel *BufferView::GetBufferById(int No) {GetBufferById81,1776
int BufferView::ExecCommand(int Command, ExState &State) {ExecCommand96,2031
int BufferView::Activate(int No) {Activate147,3282
void BufferView::GetInfo(char *AInfo, int MaxLen) {GetInfo158,3450
void BufferView::GetTitle(char *ATitle, int MaxLen, char *ASTitle, int SMaxLen) {GetTitle162,3575

o_directory.cpp,1625
#define NEED_LOG_HNEED_LOG_H10,225
EDirectory::EDirectory(int createFlags, EModel **ARoot, char *aPath): EList(createFlags, ARoot, aPath) {EDirectory14,290
EDirectory::~EDirectory() {~EDirectory26,569
EEventMap *EDirectory::GetEventMap() {GetEventMap35,730
void EDirectory::DrawLine(PCell B, int Line, int Col, ChColor color, int Width) {DrawLine39,810
int _LNK_CONV FileNameCmp(const void *a, const void *b) {FileNameCmp79,1956
void EDirectory::RescanList() {RescanList92,2303
void EDirectory::FreeList() {FreeList152,3765
int EDirectory::isDir(int No) {isDir162,3943
int EDirectory::ExecCommand(int Command, ExState &State) {ExecCommand171,4137
int EDirectory::Activate(int No) {Activate225,5389
void EDirectory::HandleEvent(TEvent &Event) {HandleEvent239,5696
int EDirectory::RescanDir() {RescanDir296,7652
int EDirectory::FmChDir(const char *Name) {FmChDir315,8049
int EDirectory::FmRmDir(char const* Name)FmRmDir348,8789
int EDirectory::FmLoad(char *Name, EView *XView) {FmLoad384,9603
void EDirectory::GetName(char *AName, int MaxLen) {GetName393,9816
void EDirectory::GetPath(char *APath, int MaxLen) {GetPath399,9953
void EDirectory::GetInfo(char *AInfo, int MaxLen) {GetInfo405,10090
void EDirectory::GetTitle(char *ATitle, int MaxLen, char *ASTitle, int SMaxLen) {GetTitle433,10944
int EDirectory::ChangeDir(ExState &State) {ChangeDir448,11244
int EDirectory::GetContext() { return CONTEXT_DIRECTORY; }GetContext471,11795
char *EDirectory::FormatLine(int Line) { return 0; };FormatLine472,11854
int EDirectory::CanActivate(int Line) { return 1; }CanActivate473,11908

o_list.cpp,2723
EListPort::EListPort(EList *L, EView *V): EViewPort(V) {EListPort12,238
EListPort::~EListPort() {~EListPort18,379
void EListPort::StorePos() {StorePos22,424
void EListPort::GetPos() {GetPos29,560
void EListPort::HandleEvent(TEvent &Event) {HandleEvent35,667
void EListPort::HandleMouse(TEvent &Event) {HandleMouse106,2478
void EListPort::UpdateView() {UpdateView181,4696
void EListPort::RepaintView() {RepaintView207,5365
void EListPort::PaintView(int PaintAll) {PaintView217,5568
void EListPort::UpdateStatus() {UpdateStatus246,6386
void EListPort::RepaintStatus() {RepaintStatus250,6443
EList::EList(int createFlags, EModel **ARoot, const char *aTitle): EModel(createFlags, ARoot) {EList294,7701
EList::~EList() {~EList303,7953
EViewPort *EList::CreateViewPort(EView *V) {CreateViewPort307,7991
EListPort *EList::GetViewVPort(EView *V) {GetViewVPort314,8118
EListPort *EList::GetVPort() {GetVPort317,8196
void EList::SetTitle(char *ATitle) {SetTitle321,8266
int EList::ExecCommand(int Command, ExState &State) {ExecCommand330,8442
EEventMap *EList::GetEventMap() {GetEventMap360,9625
void EList::HandleEvent(TEvent &/*Event*/) {HandleEvent364,9695
void EList::DrawLine(PCell /*B*/, int /*Line*/, int /*Col*/, ChColor /*color*/, int /*Width*/) {DrawLine367,9743
char *EList::FormatLine(int /*Line*/) {FormatLine370,9843
void EList::RescanList() {}RescanList374,9900
void EList::UpdateList() { NeedsUpdate = 1; }UpdateList375,9928
void EList::FreeList() {}FreeList376,9974
void EList::FixPos() {FixPos378,10001
int EList::GetContext() { return CONTEXT_LIST; };GetContext415,11078
int EList::BeginMacro() { return 1; }BeginMacro416,11128
int EList::CanActivate(int /*Line*/) { return 1; }CanActivate417,11166
int EList::Activate(int /*No*/) { return 0; }Activate418,11217
int EList::SetPos(int ARow, int ACol) {SetPos420,11264
int EList::MoveLeft() {MoveLeft427,11381
int EList::MoveRight() {MoveRight435,11506
int EList::MoveUp() {MoveUp441,11587
int EList::MoveDown() {MoveDown449,11702
int EList::MoveLineStart() {MoveLineStart457,11827
int EList::MoveLineEnd() {MoveLineEnd465,11952
int EList::MovePageUp() {MovePageUp477,12155
int EList::MovePageDown() {MovePageDown496,12446
int EList::ScrollRight(int Cols) {ScrollRight519,12842
int EList::ScrollLeft(int Cols) {ScrollLeft531,13085
int EList::ScrollUp(int Rows) {ScrollUp537,13181
int EList::ScrollDown(int Rows) {ScrollDown554,13474
int EList::MovePageStart() {MovePageStart569,13714
int EList::MovePageEnd() {MovePageEnd577,13848
int EList::MoveFileStart() {MoveFileStart597,14200
int EList::MoveFileEnd() {MoveFileEnd606,14355
int EList::Activate() {Activate617,14555

o_messages.cpp,2524
#define MAXREGEXP MAXREGEXP13,269
EMessages *CompilerMsgs = 0;CompilerMsgs15,292
int NCRegexp = 0;NCRegexp17,322
    int RefFile;RefFile19,349
    int RefLine;RefLine20,366
    int RefMsg;RefMsg21,383
    RxNode *rx;rx22,399
} CRegexp[MAXREGEXP];CRegexp23,415
int AddCRegexp(int file, int line, int msg, const char *regexp) {AddCRegexp25,438
void FreeCRegexp()FreeCRegexp37,776
EMessages::EMessages(int createFlags, EModel **ARoot, char *ADir, char *ACommand): EList(createFlags, ARoot, "Messages") {EMessages45,872
EMessages::~EMessages() {~EMessages61,1248
void EMessages::freeDirStack()freeDirStack70,1405
void EMessages::NotifyDelete(EModel *Deleting) {NotifyDelete81,1582
void EMessages::FindErrorFiles() {FindErrorFiles94,1932
void EMessages::FindErrorFile(int err) {FindErrorFile100,2098
void EMessages::AddFileError(EBuffer *B, int err) {AddFileError119,2425
void EMessages::FindFileErrors(EBuffer *B) {FindFileErrors139,2818
int EMessages::RunPipe(char *ADir, char *ACommand) {RunPipe148,3089
EEventMap *EMessages::GetEventMap() {GetEventMap182,3774
int EMessages::ExecCommand(int Command, ExState &State) {ExecCommand186,3852
void EMessages::AddError(Error *p) {AddError209,4433
void EMessages::AddError(char *file, int line, char *msg, const char *text) {AddError225,4841
void EMessages::FreeErrors() {FreeErrors240,5172
int EMessages::GetLine(char *Line, int maxim) {GetLine260,5700
static void getWord(char* dest, char*& pin)getWord316,7291
void EMessages::GetErrors() {GetErrors354,8094
int EMessages::CompilePrevError(EView *V) {CompilePrevError487,12985
int EMessages::CompileNextError(EView *V) {CompileNextError505,13405
int EMessages::Compile(char * /*Command*/) {Compile529,14032
void EMessages::ShowError(EView *V, int err) {ShowError533,14094
void EMessages::DrawLine(PCell B, int Line, int Col, ChColor color, int Width) {DrawLine559,15000
char* EMessages::FormatLine(int Line) {FormatLine574,15464
void EMessages::UpdateList() {UpdateList583,15624
int EMessages::Activate(int No) {Activate588,15705
int EMessages::CanActivate(int Line) {CanActivate595,15823
void EMessages::NotifyPipe(int APipeId) {NotifyPipe602,15995
void EMessages::GetName(char *AName, int MaxLen) {GetName608,16127
void EMessages::GetInfo(char *AInfo, int MaxLen) {GetInfo612,16221
void EMessages::GetPath(char *APath, int MaxLen) {GetPath621,16434
void EMessages::GetTitle(char *ATitle, int MaxLen, char *ASTitle, int SMaxLen) {GetTitle627,16575

o_model.cpp,2359
EModel *ActiveModel = 0;ActiveModel12,239
char msgbuftmp[MSGBUFTMP_SIZE] = "";msgbuftmp13,264
EModel *FindModelID(EModel *Model, int ID) {FindModelID15,302
int GetNewModelID(EModel *B) {GetNewModelID29,543
EModel::EModel(int createFlags, EModel **ARoot) {EModel37,675
EModel::~EModel() {~EModel63,1282
void EModel::AddView(EView *V) {AddView82,1614
void EModel::RemoveView(EView *V) {RemoveView89,1723
void EModel::SelectView(EView *V) {SelectView102,1949
EViewPort *EModel::CreateViewPort(EView *V) {CreateViewPort107,2023
int EModel::ExecCommand(int Command, ExState &State) {ExecCommand111,2086
void EModel::HandleEvent(TEvent &Event) {HandleEvent115,2163
void EModel::Msg(int level, const char *s, ...) {Msg118,2208
int EModel::CanQuit() {CanQuit132,2454
int EModel::ConfQuit(GxView *V, int multiFile) {ConfQuit136,2495
int EModel::GetContext() { return CONTEXT_NONE; }GetContext140,2561
EEventMap *EModel::GetEventMap() { return 0; }GetEventMap141,2611
int EModel::BeginMacro() { return 1; }BeginMacro142,2658
void EModel::GetName(char *AName, int MaxLen) { *AName = 0; }GetName143,2697
void EModel::GetPath(char *APath, int MaxLen) { *APath = 0; }GetPath144,2759
void EModel::GetInfo(char *AInfo, int MaxLen) { *AInfo = 0; }GetInfo145,2821
void EModel::GetTitle(char *ATitle, int MaxLen, char *ASTitle, int SMaxLen) { *ATitle = 0; *ASTitle = 0; }GetTitle146,2883
void EModel::NotifyPipe(int PipeId) { }NotifyPipe147,2990
void EModel::NotifyDelete(EModel *Deleted) {NotifyDelete149,3031
void EModel::DeleteRelated() {DeleteRelated151,3078
EViewPort::EViewPort(EView *V) { View = V; ReCenter = 0; }EViewPort154,3112
EViewPort::~EViewPort() {}~EViewPort155,3171
void EViewPort::HandleEvent(TEvent &Event) { }HandleEvent156,3198
void EViewPort::UpdateView() { }UpdateView157,3245
void EViewPort::RepaintView() { }RepaintView158,3278
void EViewPort::UpdateStatus() { }UpdateStatus159,3312
void EViewPort::RepaintStatus() { }RepaintStatus160,3347
void EViewPort::GetPos() { }GetPos161,3383
void EViewPort::StorePos() { }StorePos162,3412
void EViewPort::Resize(int Width, int Height) {}Resize163,3443
void EModel::UpdateTitle() {UpdateTitle165,3493
int EModel::GetStrVar(int var, char *str, int buflen) {GetStrVar180,3840
int EModel::GetIntVar(int var, int *value) {GetIntVar188,4018

o_modemap.cpp,1390
EventMapView *TheEventMapView = 0;TheEventMapView12,241
void EventMapView::AddLine(const char *Line) {AddLine14,277
void EventMapView::DumpKey(const char *aPrefix, EKey *Key) {DumpKey26,581
void EventMapView::DumpMap(const char *aPrefix, EKeyMap *aKeyMap) {DumpMap59,1694
void EventMapView::DumpEventMap(EEventMap *aEventMap) {DumpEventMap80,2224
EventMapView::EventMapView(int createFlags, EModel **ARoot, EEventMap *Map): EList(createFlags, ARoot, "Event Map") {EventMapView98,2692
EventMapView::~EventMapView() {~EventMapView105,2902
void EventMapView::FreeView() {FreeView110,2978
void EventMapView::ViewMap(EEventMap *Map) {ViewMap121,3187
EEventMap *EventMapView::GetEventMap() {GetEventMap126,3281
int EventMapView::ExecCommand(int Command, ExState &State) {ExecCommand130,3366
int EventMapView::GetContext() {GetContext134,3477
void EventMapView::DrawLine(PCell B, int Line, int Col, ChColor color, int Width) {DrawLine138,3541
char *EventMapView::FormatLine(int Line) {FormatLine144,3763
void EventMapView::UpdateList() {UpdateList148,3841
int EventMapView::CanActivate(int /*Line*/) {CanActivate153,3923
void EventMapView::GetName(char *AName, int MaxLen) {GetName157,3986
void EventMapView::GetInfo(char *AInfo, int MaxLen) {GetInfo161,4087
void EventMapView::GetTitle(char *ATitle, int MaxLen, char *ASTitle, int SMaxLen) {GetTitle169,4285

o_routine.cpp,931
RoutineView::RoutineView(int createFlags, EModel **ARoot, EBuffer *AB): EList(createFlags, ARoot, "Routines") {RoutineView13,267
RoutineView::~RoutineView() {~RoutineView34,856
EEventMap *RoutineView::GetEventMap() {GetEventMap38,915
int RoutineView::ExecCommand(int Command, ExState &State) {ExecCommand42,995
void RoutineView::DrawLine(PCell B, int Line, int Col, ChColor color, int Width) {DrawLine63,1533
char* RoutineView::FormatLine(int Line) {FormatLine77,2022
int RoutineView::Activate(int No) {Activate89,2281
void RoutineView::RescanList() {RescanList98,2485
void RoutineView::UpdateList() {UpdateList104,2591
int RoutineView::GetContext() {GetContext108,2659
void RoutineView::GetName(char *AName, int MaxLen) {GetName112,2723
void RoutineView::GetInfo(char *AInfo, int MaxLen) {GetInfo116,2819
void RoutineView::GetTitle(char *ATitle, int MaxLen, char *ASTitle, int SMaxLen) {GetTitle120,2969

pm_tool.cpp,457
#define InRange(InRange2,1
#define Min(Min3,54
#define Max(Max4,93
#define TYBORDER TYBORDER6,133
#define TXBORDER TXBORDER7,202
#define TXSEPARATOR TXSEPARATOR8,221
#define TYICON TYICON9,243
#define TXICON TXICON10,261
MRESULT EXPENTRY ToolBarProc(HWND hwnd, ULONG msg, MPARAM mp1, MPARAM mp2) {ToolBarProc12,280
void RegisterToolBarClass(HAB hab) {RegisterToolBarClass357,14398
HWND CreateToolBar(HWND parent,CreateToolBar365,14657

s_direct.cpp,543
#define INCL_BASEINCL_BASE15,401
#define WIN32_LEAN_AND_MEAN WIN32_LEAN_AND_MEAN20,454
static int my_stat(const char *name, struct stat *s)my_stat31,646
FileInfo::FileInfo(char *Name, int Type, off_t Size, time_t MTime) {FileInfo49,1149
FileInfo::~FileInfo() {~FileInfo58,1356
FileFind::FileFind(const char *aDirectory, const char *aPattern, int aFlags) {FileFind62,1403
FileFind::~FileFind() {~FileFind86,2033
int FileFind::FindFirst(FileInfo **fi) {FindFirst103,2424
int FileFind::FindNext(FileInfo **fi) {FindNext273,7052

s_files.cpp,1432
#define INCL_DOSINCL_DOS14,280
#   define  WIN32_LEAN_AND_MEAN WIN32_LEAN_AND_MEAN19,338
static inline int is_end(int c)is_end29,473
static inline int is_filename_char(int c)is_filename_char34,553
static void my_fixpath(const char *in, char *out) {my_fixpath40,639
char *Slash(char *Path, int Add) {Slash88,1971
char *SlashDir(char *Path) {SlashDir110,2430
int IsDirectory(const char *Path) {IsDirectory140,3159
static int GetDiskCurDir(int drive, char *dir) {GetDiskCurDir163,3727
static int SetDrive(int drive) { // 1 = A, 2 = B, 3 = C, ...SetDrive199,4724
int RemoveDots(char *Source, char *Dest) {RemoveDots228,5436
int ExpandPath(const char *Path, char *Expand) {ExpandPath259,6336
int IsSameFile(const char *Path1, const char *Path2) {IsSameFile356,8544
int JustDirectory(const char *Path, char *Dir) {JustDirectory365,8788
int JustLastDirectory(const char *Path, char *Dir) {JustLastDirectory376,9000
int JustFileName(const char *Path, char *Name) {JustFileName389,9411
int JustRoot(const char *Path, char *Root) {JustRoot397,9588
int FileExists(const char *Path) {FileExists407,9761
int IsFullPath(const char *Path) {IsFullPath411,9842
const char *ShortFName(const char *Path, int len) {ShortFName422,10036
int ChangeDir(char *Dir) {ChangeDir441,10434
int JoinDirFile(char *Dest, const char *Dir, const char *Name) {JoinDirFile453,10724
char *SepRChr(char *Dir)SepRChr460,10873

s_util.cpp,405
#define BUF_SZ BUF_SZ13,239
int copyfile(char *f1, char *f2) { // from F1 to F2copyfile18,346
char *MakeBackup(char *FileName, char *NewName) {MakeBackup44,926
int GetCharFromEvent(TEvent &E, char *Ch) {GetCharFromEvent85,2202
int CompletePath(const char *Base, char *Match, int Count) {CompletePath107,2980
int UnTabStr(char *dest, int maxlen, const char *source, int slen) {UnTabStr211,5742

view.cpp,3017
EView *ActiveView = 0;ActiveView12,236
EView::EView(EModel *AModel) {EView16,292
EView::~EView() {~EView34,659
int EView::CanQuit() {CanQuit50,979
void EView::FocusChange(int GetFocus) {FocusChange57,1080
void EView::Resize(int Width, int Height) {Resize73,1498
void EView::SetModel(EModel *AModel) {SetModel78,1596
void EView::SelectModel(EModel *AModel) {SelectModel83,1683
void EView::SwitchToModel(EModel *AModel) {SwitchToModel93,1881
void EView::Activate(int GotFocus) {Activate117,2418
int EView::GetContext() {GetContext131,2736
EEventMap *EView::GetEventMap() {GetEventMap135,2809
int EView::BeginMacro() {BeginMacro139,2891
int EView::ExecCommand(int Command, ExState &State) {ExecCommand143,2964
void EView::HandleEvent(TEvent &Event) {HandleEvent205,5290
void EView::UpdateView() {UpdateView227,5812
void EView::RepaintView() {RepaintView232,5884
void EView::UpdateStatus() {UpdateStatus237,5958
void EView::RepaintStatus() {RepaintStatus242,6034
void EView::DeleteModel(EModel *M) {DeleteModel247,6112
int EView::FilePrev() {FilePrev279,6794
int EView::FileNext() {FileNext287,6910
int EView::FileLast() {FileLast295,7026
int EView::SwitchTo(ExState &State) {SwitchTo303,7144
int EView::FileSaveAll() {FileSaveAll327,7611
int EView::FileOpen(ExState &State) {FileOpen343,7973
int EView::FileOpenInMode(ExState &State) {FileOpenInMode361,8485
int EView::SetPrintDevice(ExState &State) {SetPrintDevice391,9362
int EView::ToggleSysClipboard(ExState &/*State*/) {ToggleSysClipboard402,9653
int EView::ShowKey(ExState &/*State*/) {ShowKey408,9845
void EView::Msg(int level, const char *s, ...) {Msg420,10069
void EView::SetMsg(char *Msg) {SetMsg431,10260
int EView::ViewBuffers(ExState &/*State*/) {ViewBuffers457,10920
int EView::ViewRoutines(ExState &/*State*/) {ViewRoutines471,11259
int EView::DirOpen(ExState &State) {DirOpen499,11965
int EView::OpenDir(char *Path) {OpenDir508,12201
int EView::Compile(ExState &State) {Compile537,12874
int EView::RunCompiler(ExState &State) {RunCompiler564,13707
int EView::Compile(char *Command) {Compile584,14292
int EView::ViewMessages(ExState &/*State*/) {ViewMessages602,14739
int EView::CompilePrevError(ExState &/*State*/) {CompilePrevError610,14892
int EView::CompileNextError(ExState &/*State*/) {CompileNextError616,15039
int EView::ShowVersion() {ShowVersion623,15193
int EView::ViewModeMap(ExState &/*State*/) {ViewModeMap628,15318
int EView::ClearMessages() {ClearMessages640,15629
int EView::TagLoad(ExState &State) {TagLoad653,15914
int EView::ConfigRecompile(ExState &State) {ConfigRecompile674,16434
int EView::RemoveGlobalBookmark(ExState &State) {RemoveGlobalBookmark694,16936
int EView::GotoGlobalBookmark(ExState &State) {GotoGlobalBookmark706,17324
int EView::PopGlobalBookmark() {PopGlobalBookmark717,17711
int EView::GetStrVar(int var, char *str, int buflen) {GetStrVar725,17871
int EView::GetIntVar(int var, int *value) {GetIntVar731,18027

c_bind.h,1935
#define __BIND_H__BIND_H11,235
#define ABBREV_HASH ABBREV_HASH13,253
    TKeyCode Mask;Mask23,385
    TKeyCode Key;Key24,404
} KeySel;KeySel25,422
class EMode {EMode27,433
    EMode *fNext;fNext29,455
    char *fName;fName30,473
    char *MatchName;MatchName31,490
    char *MatchLine;MatchLine32,511
    RxNode *MatchNameRx;MatchNameRx33,532
    RxNode *MatchLineRx;MatchLineRx34,557
    EBufferFlags Flags;Flags35,582
    EEventMap *fEventMap;fEventMap36,606
    EMode *fParent;fParent37,632
    EColorize *fColorize;fColorize39,679
    char filename[256];filename41,712
class EKeyMap {EKeyMap48,864
    EKeyMap *fParent;fParent50,888
    EKey *fKeys;fKeys51,910
class EEventMap {EEventMap60,1035
    EEventMap *Next;Next62,1061
    EEventMap *Parent;Parent63,1082
    char *Name;Name64,1105
    EKeyMap *KeyMap;KeyMap66,1126
    char *Menu[EM_MENUS]; // main + localMenu67,1147
    EAbbrev *abbrev[ABBREV_HASH];abbrev69,1194
#define CT_COMMAND CT_COMMAND80,1446
#define CT_NUMBER CT_NUMBER81,1468
#define CT_STRING CT_STRING82,1490
#define CT_VARIABLE CT_VARIABLE83,1512
#define CT_CONCAT CT_CONCAT84,1534
    int type;type87,1600
    short repeat;repeat88,1614
    short ign;ign89,1632
        long num;num91,1659
        char *string;string92,1677
    } u;u93,1699
} CommandType;CommandType94,1708
    char *Name;Name97,1741
    int Count;Count98,1757
    CommandType *cmds;cmds99,1772
} ExMacro;ExMacro100,1795
class EKey {EKey102,1807
    KeySel fKey;fKey104,1828
    int Cmd;Cmd105,1845
    EKeyMap *fKeyMap;fKeyMap106,1858
    EKey *fNext;fNext107,1880
class EAbbrev {EAbbrev115,2002
    EAbbrev *next;next117,2026
    int Cmd;Cmd118,2045
    char *Match;Match119,2058
    char *Replace;Replace120,2075
class ExState { // state of macro executionExState128,2224
    int Macro;Macro130,2276
    int Pos;Pos131,2291

c_cmdtab.h,140
#define TAB(TAB10,220
    unsigned short CmdId;CmdId14,271
    const char *Name;Name15,297
} Command_Table[] = {Command_Table16,319

c_color.h,35
#define __COLOR_H__COLOR_H11,237

c_commands.h,13355
#define __COMMANDS_H____COMMANDS_H__11,245
    ErFAIL = 0,ErFAIL14,284
    ErOK = 1ErOK15,300
} ExResult;ExResult16,313
    ExNop,ExNop19,341
    ExFail,ExFail20,352
    ExMoveDown,ExMoveDown26,476
    ExMoveUp,ExMoveUp28,526
    ExMoveLeft,ExMoveLeft30,577
    ExMoveRight,ExMoveRight32,633
    ExMovePrev,ExMovePrev34,686
    ExMoveNext,ExMoveNext37,826
    ExMoveWordLeft,ExMoveWordLeft40,958
    ExMoveWordRight,ExMoveWordRight42,1040
    ExMoveWordPrev,ExMoveWordPrev44,1124
    ExMoveWordNext,ExMoveWordNext46,1203
    ExMoveWordEndLeft,ExMoveWordEndLeft48,1278
    ExMoveWordEndRight,ExMoveWordEndRight50,1354
    ExMoveWordEndPrev,ExMoveWordEndPrev52,1435
    ExMoveWordEndNext,ExMoveWordEndNext54,1511
    ExMoveWordOrCapLeft,ExMoveWordOrCapLeft56,1583
    ExMoveWordOrCapRight,ExMoveWordOrCapRight58,1689
    ExMoveWordOrCapPrev,ExMoveWordOrCapPrev60,1795
    ExMoveWordOrCapNext,ExMoveWordOrCapNext63,1917
    ExMoveWordOrCapEndLeft,ExMoveWordOrCapEndLeft65,2023
    ExMoveWordOrCapEndRight,ExMoveWordOrCapEndRight67,2119
    ExMoveWordOrCapEndPrev,ExMoveWordOrCapEndPrev69,2217
    ExMoveWordOrCapEndNext,ExMoveWordOrCapEndNext71,2310
    ExMoveLineStart,ExMoveLineStart73,2399
    ExMoveLineEnd,ExMoveLineEnd75,2466
    ExMovePageStart,ExMovePageStart77,2525
    ExMovePageEnd,ExMovePageEnd79,2601
    ExMovePageUp,ExMovePageUp81,2676
    ExMovePageDown,ExMovePageDown83,2725
    ExMoveFileStart,ExMoveFileStart85,2772
    ExMoveFileEnd,ExMoveFileEnd87,2839
    ExMovePageLeft,ExMovePageLeft89,2898
    ExMovePageRight,ExMovePageRight91,2975
    ExMoveBlockStart,ExMoveBlockStart93,3054
    ExMoveBlockEnd,ExMoveBlockEnd95,3123
    ExMoveFirstNonWhite,ExMoveFirstNonWhite97,3190
    ExMoveLastNonWhite,ExMoveLastNonWhite99,3277
    ExMovePrevEqualIndent,ExMovePrevEqualIndent101,3362
    ExMoveNextEqualIndent,ExMoveNextEqualIndent103,3454
    ExMovePrevTab,ExMovePrevTab105,3542
    ExMoveNextTab,ExMoveNextTab107,3611
    ExMoveTabStart,ExMoveTabStart109,3676
    ExMoveTabEnd,ExMoveTabEnd112,3788
    ExMoveLineTop,ExMoveLineTop115,3892
    ExMoveLineCenter,ExMoveLineCenter117,3993
    ExMoveLineBottom,ExMoveLineBottom119,4100
    ExScrollLeft,ExScrollLeft121,4207
    ExScrollRight,ExScrollRight123,4253
    ExScrollDown,ExScrollDown125,4301
    ExScrollUp,ExScrollUp127,4347
    ExMoveFoldTop,ExMoveFoldTop129,4389
    ExMoveFoldPrev,ExMoveFoldPrev131,4455
    ExMoveFoldNext,ExMoveFoldNext133,4523
    ExMoveBeginOrNonWhite,ExMoveBeginOrNonWhite135,4587
    ExMoveBeginLinePageFile,ExMoveBeginLinePageFile137,4681
    ExMoveEndLinePageFile,ExMoveEndLinePageFile140,4852
    ExMoveToLine,ExMoveToLine143,5003
    ExMoveToColumn,ExMoveToColumn145,5067
    ExMoveSavedPosCol,ExMoveSavedPosCol147,5128
    ExMoveSavedPosRow,ExMoveSavedPosRow149,5194
    ExMoveSavedPos,ExMoveSavedPos151,5258
    ExSavePos,ExSavePos153,5309
    ExMovePrevPos,ExMovePrevPos155,5361
    ExKillLine,ExKillLine162,5497
    ExKillChar,ExKillChar165,5618
    ExKillCharPrev,ExKillCharPrev167,5681
    ExKillWord,ExKillWord169,5741
    ExKillWordPrev,ExKillWordPrev171,5795
    ExKillWordOrCap,ExKillWordOrCap173,5854
    ExKillWordOrCapPrev,ExKillWordOrCapPrev175,5921
    ExKillToLineStart,ExKillToLineStart177,5993
    ExKillToLineEnd,ExKillToLineEnd179,6068
    ExKillBlock,ExKillBlock181,6135
    ExKillBlockOrChar,ExKillBlockOrChar183,6174
    ExKillBlockOrCharPrev,ExKillBlockOrCharPrev185,6277
    ExDelete,ExDelete187,6385
    ExBackSpace,ExBackSpace191,6578
    ExLineInsert,ExLineInsert197,6799
    ExLineAdd,ExLineAdd199,6867
    ExLineSplit,ExLineSplit201,6928
    ExLineJoin,ExLineJoin203,6994
    ExLineNew,ExLineNew206,7157
    ExLineIndent,ExLineIndent208,7237
    ExLineTrim,ExLineTrim210,7286
    ExLineDuplicate,ExLineDuplicate212,7354
    ExLineCenter,ExLineCenter214,7411
    ExBlockBegin,ExBlockBegin218,7495
    ExBlockEnd,ExBlockEnd220,7562
    ExBlockUnmark,ExBlockUnmark222,7621
    ExBlockCut,ExBlockCut224,7662
    ExBlockCopy,ExBlockCopy226,7719
    ExBlockCutAppend,ExBlockCutAppend228,7778
    ExBlockCopyAppend,ExBlockCopyAppend230,7855
    ExBlockClear,ExBlockClear232,7922
    ExBlockPaste,ExBlockPaste234,7969
    ExBlockKill,ExBlockKill236,8032
    ExBlockIndent,ExBlockIndent238,8079
    ExBlockUnindent,ExBlockUnindent240,8135
    ExBlockMarkStream,ExBlockMarkStream242,8195
    ExBlockMarkLine,ExBlockMarkLine244,8259
    ExBlockMarkColumn,ExBlockMarkColumn246,8319
    ExBlockExtendBegin,ExBlockExtendBegin248,8383
    ExBlockExtendEnd,ExBlockExtendEnd250,8447
    ExBlockReIndent,ExBlockReIndent252,8508
    ExBlockSelectWord,ExBlockSelectWord254,8573
    ExBlockSelectLine,ExBlockSelectLine256,8639
    ExBlockSelectPara,ExBlockSelectPara258,8700
    ExBlockPasteStream,ExBlockPasteStream260,8793
    ExBlockPasteLine,ExBlockPasteLine262,8878
    ExBlockPasteColumn,ExBlockPasteColumn264,8959
    ExBlockPrint,ExBlockPrint266,9044
    ExBlockRead,ExBlockRead268,9106
    ExBlockReadStream,ExBlockReadStream270,9153
    ExBlockReadLine,ExBlockReadLine272,9221
    ExBlockReadColumn,ExBlockReadColumn274,9285
    ExBlockWrite,ExBlockWrite276,9353
    ExBlockSort,ExBlockSort278,9407
    ExBlockSortReverse,ExBlockSortReverse290,9935
    ExBlockUnTab,ExBlockUnTab293,10057
    ExBlockEnTab,ExBlockEnTab295,10114
    ExBlockMarkFunction,ExBlockMarkFunction297,10184
    ExBlockTrim,ExBlockTrim299,10249
    ExUndo,ExUndo303,10347
    ExRedo,ExRedo305,10387
    ExFoldCreate,ExFoldCreate309,10466
    ExFoldCreateByRegexp,ExFoldCreateByRegexp311,10504
    ExFoldCreateAtRoutines,ExFoldCreateAtRoutines313,10590
    ExFoldDestroy,ExFoldDestroy315,10667
    ExFoldDestroyAll,ExFoldDestroyAll317,10723
    ExFoldPromote,ExFoldPromote319,10783
    ExFoldDemote,ExFoldDemote321,10838
    ExFoldOpen,ExFoldOpen323,10891
    ExFoldOpenNested,ExFoldOpenNested325,10941
    ExFoldClose,ExFoldClose327,10998
    ExFoldOpenAll,ExFoldOpenAll329,11042
    ExFoldCloseAll,ExFoldCloseAll331,11096
    ExFoldToggleOpenClose,ExFoldToggleOpenClose333,11152
    ExPlaceBookmark,ExPlaceBookmark337,11250
    ExRemoveBookmark,ExRemoveBookmark339,11308
    ExGotoBookmark,ExGotoBookmark341,11367
    ExPlaceGlobalBookmark,ExPlaceGlobalBookmark343,11431
    ExRemoveGlobalBookmark,ExRemoveGlobalBookmark345,11502
    ExGotoGlobalBookmark,ExGotoGlobalBookmark347,11562
    ExPushGlobalBookmark,ExPushGlobalBookmark349,11628
    ExPopGlobalBookmark,ExPopGlobalBookmark351,11711
    ExCharCaseUp,ExCharCaseUp355,11817
    ExCharCaseDown,ExCharCaseDown357,11882
    ExCharCaseToggle,ExCharCaseToggle359,11949
    ExCharTrans,ExCharTrans361,12012
    ExLineCaseUp,ExLineCaseUp363,12081
    ExLineCaseDown,ExLineCaseDown365,12141
    ExLineCaseToggle,ExLineCaseToggle367,12203
    ExLineTrans,ExLineTrans369,12261
    ExBlockCaseUp,ExBlockCaseUp371,12323
    ExBlockCaseDown,ExBlockCaseDown373,12400
    ExBlockCaseToggle,ExBlockCaseToggle375,12479
    ExBlockTrans,ExBlockTrans377,12554
    ExInsertString,ExInsertString380,12625
    ExInsertSpace,ExInsertSpace382,12695
    ExInsertChar,ExInsertChar384,12735
    ExTypeChar,ExTypeChar386,12806
    ExInsertTab,ExInsertTab388,12892
    ExInsertSpacesToTab,ExInsertSpacesToTab390,12957
    ExSelfInsert,ExSelfInsert392,13045
    ExWrapPara,ExWrapPara394,13094
    ExInsPrevLineChar,ExInsPrevLineChar396,13141
    ExInsPrevLineToEol,ExInsPrevLineToEol398,13219
    ExCompleteWord,ExCompleteWord400,13299
    ExFilePrev,ExFilePrev404,13406
    ExFileNext,ExFileNext406,13463
    ExFileLast,ExFileLast408,13516
    ExSwitchTo,ExSwitchTo410,13573
    ExFileOpen,ExFileOpen414,13673
    ExFileOpenInMode,ExFileOpenInMode416,13707
    ExFileReload,ExFileReload418,13765
    ExFileSave,ExFileSave420,13811
    ExFileSaveAll,ExFileSaveAll422,13853
    ExFileSaveAs,ExFileSaveAs424,13904
    ExFileWriteTo,ExFileWriteTo426,13955
    ExFilePrint,ExFilePrint428,14019
    ExFileClose,ExFileClose430,14063
    ExFileCloseAll,ExFileCloseAll432,14107
    ExFileTrim,ExFileTrim434,14156
    ExDirOpen,ExDirOpen438,14250
    ExDirGoUp,ExDirGoUp440,14296
    ExDirGoDown,ExDirGoDown442,14346
    ExDirGoRoot,ExDirGoRoot444,14410
    ExDirGoto,ExDirGoto446,14460
    ExIncrementalSearch,ExIncrementalSearch450,14560
    ExFind,ExFind452,14612
    ExFindReplace,ExFindReplace454,14637
    ExFindRepeat,ExFindRepeat456,14681
    ExFindRepeatOnce,ExFindRepeatOnce458,14742
    ExFindRepeatReverse,ExFindRepeatReverse460,14817
    ExMatchBracket,ExMatchBracket462,14896
    ExHilitWord,ExHilitWord464,14955
    ExSearchWordPrev,ExSearchWordPrev466,15026
    ExSearchWordNext,ExSearchWordNext468,15107
    ExHilitMatchBracket,ExHilitMatchBracket470,15184
    ExSearch,ExSearch472,15244
    ExSearchB,ExSearchB473,15258
    ExSearchRx,ExSearchRx474,15273
    ExSearchAgain,ExSearchAgain475,15289
    ExSearchAgainB,ExSearchAgainB476,15308
    ExSearchReplace,ExSearchReplace477,15328
    ExSearchReplaceB,ExSearchReplaceB478,15349
    ExSearchReplaceRx,ExSearchReplaceRx479,15371
    ExWinHSplit,ExWinHSplit482,15430
    ExWinNext,ExWinNext484,15481
    ExWinPrev,ExWinPrev486,15535
    ExWinClose,ExWinClose488,15591
    ExWinZoom,ExWinZoom490,15636
    ExWinResize,ExWinResize492,15701
    ExViewBuffers,ExViewBuffers494,15774
    ExListRoutines,ExListRoutines496,15829
    ExExitEditor,ExExitEditor498,15897
    ExShowEntryScreen,ExShowEntryScreen500,15933
    ExCompile,ExCompile504,16044
    ExRunCompiler,ExRunCompiler506,16108
    ExViewMessages,ExViewMessages508,16166
    ExCompileNextError,ExCompileNextError510,16215
    ExCompilePrevError,ExCompilePrevError512,16277
    ExRunProgram,ExRunProgram514,16343
    ExTagFind,ExTagFind519,16488
    ExTagFindWord,ExTagFindWord521,16543
    ExTagNext,ExTagNext523,16607
    ExTagPrev,ExTagPrev525,16662
    ExTagPop,ExTagPop527,16721
    ExTagLoad,ExTagLoad529,16777
    ExTagClear,ExTagClear531,16842
    ExTagGoto,ExTagGoto533,16884
    ExToggleAutoIndent,ExToggleAutoIndent537,16943
    ExToggleInsert,ExToggleInsert539,16975
    ExToggleExpandTabs,ExToggleExpandTabs541,17003
    ExToggleShowTabs,ExToggleShowTabs543,17035
    ExToggleUndo,ExToggleUndo545,17065
    ExToggleReadOnly,ExToggleReadOnly547,17091
    ExToggleKeepBackups,ExToggleKeepBackups549,17121
    ExToggleMatchCase,ExToggleMatchCase551,17154
    ExToggleBackSpKillTab,ExToggleBackSpKillTab553,17185
    ExToggleDeleteKillTab,ExToggleDeleteKillTab555,17220
    ExToggleSpaceTabs,ExToggleSpaceTabs557,17255
    ExToggleIndentWithTabs,ExToggleIndentWithTabs559,17286
    ExToggleBackSpUnindents,ExToggleBackSpUnindents561,17322
    ExToggleWordWrap,ExToggleWordWrap563,17359
    ExToggleTrim,ExToggleTrim565,17389
    ExToggleShowMarkers,ExToggleShowMarkers567,17415
    ExSetLeftMargin,ExSetLeftMargin569,17448
    ExSetRightMargin,ExSetRightMargin571,17477
    ExToggleSysClipboard,ExToggleSysClipboard573,17507
    ExSetPrintDevice,ExSetPrintDevice575,17541
    ExChangeTabSize,ExChangeTabSize577,17571
    ExChangeLeftMargin,ExChangeLeftMargin579,17600
    ExChangeRightMargin,ExChangeRightMargin581,17632
    ExShowPosition,ExShowPosition586,17700
    ExShowVersion,ExShowVersion588,17778
    ExShowKey,ExShowKey590,17837
    ExWinRefresh,ExWinRefresh592,17912
    ExMainMenu,ExMainMenu595,17955
    ExShowMenu,ExShowMenu597,17998
    ExLocalMenu,ExLocalMenu599,18055
    ExChangeMode,ExChangeMode602,18100
    ExChangeKeys,ExChangeKeys604,18164
    ExChangeFlags,ExChangeFlags606,18228
    ExCancel,ExCancel609,18295
    ExActivate,ExActivate611,18317
    ExRescan,ExRescan613,18341
    ExCloseActivate,ExCloseActivate615,18363
    ExActivateInOtherWindow,ExActivateInOtherWindow617,18392
    ExDeleteFile,ExDeleteFile619,18429
    ExASCIITable,ExASCIITable622,18456
    ExDesktopSave,ExDesktopSave624,18521
    ExClipClear,ExClipClear626,18561
    ExDesktopSaveAs,ExDesktopSaveAs628,18602
    ExChildClose,ExChildClose630,18661
    ExBufListFileSave,ExBufListFileSave633,18688
    ExBufListFileClose,ExBufListFileClose635,18763
    ExViewModeMap,ExViewModeMap638,18841
    ExClearMessages,ExClearMessages640,18898
    ExIndentFunction,ExIndentFunction644,18953
    ExMoveFunctionPrev,ExMoveFunctionPrev646,19007
    ExMoveFunctionNext,ExMoveFunctionNext648,19072
    ExInsertDate,ExInsertDate650,19133
    ExInsertUid,ExInsertUid652,19181
    ExFrameNew,ExFrameNew655,19234
    ExFrameClose,ExFrameClose657,19258
    ExFrameNext,ExFrameNext659,19284
    ExFramePrev,ExFramePrev661,19309
    ExBufferViewNext,ExBufferViewNext664,19335
    ExBufferViewPrev,ExBufferViewPrev666,19365
    ExShowHelpWord,ExShowHelpWord669,19396
    ExShowHelp,ExShowHelp671,19454
    ExConfigRecompile,ExConfigRecompile673,19497
    ExSetCIndentStyle,ExSetCIndentStyle676,19560
    ExSetIndentWithTabs,ExSetIndentWithTabs693,20014
    ExRunProgramAsyncExRunProgramAsync695,20089
} ExCommands;ExCommands696,20111

c_config.h,37
#define __CONFIG_H__CONFIG_H11,239

c_desktop.h,149
#define __DESKTOP_H____DESKTOP_H__11,243
#    define        DESKTOP_NAME DESKTOP_NAME16,301
#    define        DESKTOP_NAME DESKTOP_NAME18,360

c_fconfig.h,1145
#define __FCONFIG_H____FCONFIG_H__11,243
#define CF_STRING CF_STRING13,266
#define CF_INT CF_INT14,288
#define CF_REGEXP CF_REGEXP15,310
#define CF_END CF_END17,333
#define CF_SUB CF_SUB18,357
#define CF_MENU CF_MENU19,381
#define CF_OBJECT CF_OBJECT20,405
#define CF_COMMAND CF_COMMAND21,429
#define CF_ITEM CF_ITEM22,453
#define CF_SUBMENU CF_SUBMENU23,477
#define CF_MENUSUB CF_MENUSUB24,501
#define CF_MODE CF_MODE25,525
#define CF_PARENT CF_PARENT26,549
#define CF_KEYSUB CF_KEYSUB27,573
#define CF_KEY CF_KEY28,597
#define CF_COLOR CF_COLOR29,621
#define CF_KEYWORD CF_KEYWORD30,645
#define CF_SETVAR CF_SETVAR31,669
#define CF_COMPRX CF_COMPRX32,693
#define CF_EVENTMAP CF_EVENTMAP33,717
#define CF_COLORIZE CF_COLORIZE34,741
#define CF_ABBREV CF_ABBREV35,765
#define CF_HSTATE CF_HSTATE36,789
#define CF_HTRANS CF_HTRANS37,813
#define CF_HWORDS CF_HWORDS38,837
#define CF_SUBMENUCOND CF_SUBMENUCOND39,861
#define CF_HWTYPE CF_HWTYPE40,888
#define CF_VARIABLE CF_VARIABLE41,912
#define CF_CONCAT CF_CONCAT42,936
#define CF_EOF CF_EOF44,961
#define CONFIG_ID CONFIG_ID46,986

c_hilit.h,2702
#define __HILIT_H____HILIT_H__11,239
typedef unsigned short hlState;hlState13,260
typedef unsigned char hsState;hsState14,292
#define HILIT_P(HILIT_P19,353
typedef HILIT_P((*SyntaxProc));HILIT_P23,631
HILIT_P(Hilit_Plain);Hilit_Plain27,720
HILIT_P(Hilit_C);Hilit_C33,818
HILIT_P(Hilit_HTML);Hilit_HTML36,868
HILIT_P(Hilit_PERL);Hilit_PERL39,921
HILIT_P(Hilit_MAKE);Hilit_MAKE42,974
HILIT_P(Hilit_REXX);Hilit_REXX45,1027
HILIT_P(Hilit_DIFF);Hilit_DIFF48,1080
HILIT_P(Hilit_MERGE);Hilit_MERGE51,1134
HILIT_P(Hilit_IPF);Hilit_IPF54,1187
HILIT_P(Hilit_ADA);Hilit_ADA57,1238
HILIT_P(Hilit_MSG);Hilit_MSG60,1289
HILIT_P(Hilit_SH);Hilit_SH63,1339
HILIT_P(Hilit_PASCAL);Hilit_PASCAL66,1392
HILIT_P(Hilit_TEX);Hilit_TEX69,1446
HILIT_P(Hilit_FTE);Hilit_FTE72,1497
HILIT_P(Hilit_CATBS);Hilit_CATBS75,1550
HILIT_P(Hilit_SIMPLE);Hilit_SIMPLE78,1606
#    define PCLI PCLI97,2103
#    define PCLI PCLI99,2141
#define ColorChar(ColorChar102,2180
#define NextChar(NextChar117,2535
#define ColorNext(ColorNext118,2593
#define HILIT_VARS(HILIT_VARS120,2656
#define IF_TAB(IF_TAB135,3030
#define CK_MAXLEN CK_MAXLEN146,3329
    int TotalCount;TotalCount149,3368
    int count[CK_MAXLEN];count150,3388
    char *key[CK_MAXLEN];key151,3414
} ColorKeywords;ColorKeywords152,3440
struct HTrans {HTrans154,3458
    char *match;match155,3474
    int matchLen;matchLen156,3491
    long matchFlags;matchFlags157,3509
    int nextState;nextState158,3530
    int color;color159,3549
struct HState {HState164,3595
    int transCount;transCount165,3611
    int firstTrans;firstTrans166,3631
    int color;color167,3651
    ColorKeywords keywords;keywords169,3671
    char *wordChars;wordChars170,3699
    long options;options171,3720
    int nextKwdMatchedState;nextKwdMatchedState172,3738
    int nextKwdNotMatchedState;nextKwdNotMatchedState173,3767
    int nextKwdNoCharState;nextKwdNoCharState174,3799
class HMachine {HMachine180,3914
    int stateCount;stateCount182,3939
    int transCount;transCount183,3959
    HState *state;state184,3979
    HTrans *trans;trans185,3998
    HState *LastState() { return state + stateCount - 1; }LastState192,4126
class EColorize {EColorize195,4189
    char *Name;Name197,4215
    EColorize *Next;Next198,4231
    EColorize *Parent;Parent199,4252
    int SyntaxParser;SyntaxParser200,4275
    ColorKeywords Keywords; // keywords to highlightKeywords201,4297
    HMachine *hm;hm202,4350
    ChColor Colors[COUNT_CLR];Colors203,4368
inline int LookAtNoCase(EBuffer *B, int Row, unsigned int Pos, const char *What, hsState State, int NoWord = 1)LookAtNoCase218,4818

c_history.h,921
#define __FPOSHIST_H____FPOSHIST_H__11,244
#define HISTORY_NAME HISTORY_NAME16,303
#define HISTORY_NAME HISTORY_NAME18,345
    char *FileName;FileName22,401
    int Row, Col;Row23,421
    int Row, Col;Col23,421
} FPosHistory;FPosHistory24,439
#define MAX_INPUT_HIST MAX_INPUT_HIST26,455
    int Count;Count29,500
    char **Line;Line30,515
    int *Id;Id31,532
} InputHistory;InputHistory32,545
#define HIST_DEFAULT HIST_DEFAULT49,951
#define HIST_PATH HIST_PATH50,977
#define HIST_SEARCH HIST_SEARCH51,1003
#define HIST_POSITION HIST_POSITION52,1029
#define HIST_SETUP HIST_SETUP53,1055
#define HIST_SHELL HIST_SHELL54,1081
#define HIST_COMPILE HIST_COMPILE55,1107
#define HIST_SEARCHOPT HIST_SEARCHOPT56,1133
#define HIST_BOOKMARK HIST_BOOKMARK57,1159
#define HIST_REGEXP HIST_REGEXP58,1185
#define HIST_TRANS HIST_TRANS59,1211
#define HIST_TAGFILES HIST_TAGFILES60,1237

clip.h,133
#define __CLIPLIB_H__CLIPLIB_H11,236
    unsigned long fLen;fLen18,314
    char *fChar;fChar19,338
} ClipData;ClipData20,355

c_mode.h,10063
#define __EMODE_H____EMODE_H__11,238
#define CMD_EXT CMD_EXT13,259
#define CONTEXT_NONE CONTEXT_NONE15,330
#define CONTEXT_FILE CONTEXT_FILE16,358
#define CONTEXT_DIRECTORY CONTEXT_DIRECTORY17,386
#define CONTEXT_MESSAGES CONTEXT_MESSAGES18,414
#define CONTEXT_SHELL CONTEXT_SHELL19,442
#define CONTEXT_INPUT CONTEXT_INPUT20,470
#define CONTEXT_CHOICE CONTEXT_CHOICE21,498
#define CONTEXT_LIST CONTEXT_LIST22,526
#define CONTEXT_CHAR CONTEXT_CHAR23,554
#define CONTEXT_BUFFERS CONTEXT_BUFFERS24,582
#define CONTEXT_ROUTINES CONTEXT_ROUTINES25,610
#define CONTEXT_MAPVIEW CONTEXT_MAPVIEW26,638
typedef unsigned char ChColor;ChColor28,667
#define HILIT_PLAIN HILIT_PLAIN30,699
#define HILIT_C HILIT_C31,723
#define HILIT_HTML HILIT_HTML32,747
#define HILIT_MAKE HILIT_MAKE33,771
#define HILIT_REXX HILIT_REXX34,795
#define HILIT_DIFF HILIT_DIFF35,819
#define HILIT_IPF HILIT_IPF36,843
#define HILIT_PERL HILIT_PERL37,867
#define HILIT_MERGE HILIT_MERGE38,891
#define HILIT_ADA HILIT_ADA39,915
#define HILIT_MSG HILIT_MSG40,939
#define HILIT_SH HILIT_SH41,963
#define HILIT_PASCAL HILIT_PASCAL42,987
#define HILIT_TEX HILIT_TEX43,1011
#define HILIT_FTE HILIT_FTE44,1035
#define HILIT_CATBS HILIT_CATBS45,1059
#define HILIT_SIMPLE HILIT_SIMPLE46,1083
#define INDENT_PLAIN INDENT_PLAIN48,1108
#define INDENT_C INDENT_C49,1132
#define INDENT_REXX INDENT_REXX50,1156
#define INDENT_SIMPLE INDENT_SIMPLE51,1180
#define BFI_AutoIndent BFI_AutoIndent53,1205
#define BFI_Insert BFI_Insert54,1239
#define BFI_DrawOn BFI_DrawOn55,1273
#define BFI_HilitOn BFI_HilitOn56,1307
#define BFI_ExpandTabs BFI_ExpandTabs57,1341
#define BFI_Trim BFI_Trim58,1375
#define BFI_TabSize BFI_TabSize59,1409
#define BFI_ShowTabs BFI_ShowTabs60,1443
#define BFI_HardMode BFI_HardMode61,1477
#define BFI_Undo BFI_Undo62,1511
#define BFI_ReadOnly BFI_ReadOnly63,1545
#define BFI_AutoSave BFI_AutoSave64,1579
#define BFI_KeepBackups BFI_KeepBackups65,1613
#define BFI_MatchCase BFI_MatchCase66,1647
#define BFI_BackSpKillTab BFI_BackSpKillTab67,1681
#define BFI_DeleteKillTab BFI_DeleteKillTab68,1715
#define BFI_BackSpUnindents BFI_BackSpUnindents69,1749
#define BFI_SpaceTabs BFI_SpaceTabs70,1783
#define BFI_IndentWithTabs BFI_IndentWithTabs71,1817
#define BFI_SeeThruSel BFI_SeeThruSel72,1851
#define BFI_ShowMarkers BFI_ShowMarkers73,1885
#define BFI_CursorThroughTabs BFI_CursorThroughTabs74,1919
#define BFI_MultiLineHilit BFI_MultiLineHilit75,1953
#define BFI_WordWrap BFI_WordWrap77,1988
#define BFI_LeftMargin BFI_LeftMargin78,2022
#define BFI_RightMargin BFI_RightMargin79,2056
#define BFI_Colorizer BFI_Colorizer81,2091
#define BFI_IndentMode BFI_IndentMode82,2125
#define BFI_LineChar BFI_LineChar84,2160
#define BFI_StripChar BFI_StripChar85,2194
#define BFI_AddLF BFI_AddLF86,2228
#define BFI_AddCR BFI_AddCR87,2262
#define BFI_ForceNewLine BFI_ForceNewLine88,2296
#define BFI_LoadMargin BFI_LoadMargin89,2330
#define BFI_SaveFolds BFI_SaveFolds90,2364
#define BFI_UndoLimit BFI_UndoLimit92,2399
#define BFI_AutoHilitParen BFI_AutoHilitParen94,2434
#define BFI_Abbreviations BFI_Abbreviations95,2468
#define BFI_BackSpKillBlock BFI_BackSpKillBlock96,2502
#define BFI_DeleteKillBlock BFI_DeleteKillBlock97,2536
#define BFI_PersistentBlocks BFI_PersistentBlocks98,2570
#define BFI_InsertKillBlock BFI_InsertKillBlock99,2604
#define BFI_EventMap BFI_EventMap100,2638
#define BFI_UndoMoves BFI_UndoMoves101,2672
#define BFI_DetectLineSep BFI_DetectLineSep102,2706
#define BFI_TrimOnSave BFI_TrimOnSave103,2740
#define BFI_COUNT BFI_COUNT105,2775
#define BFS_RoutineRegexp BFS_RoutineRegexp107,2810
#define BFS_DefFindOpt BFS_DefFindOpt108,2852
#define BFS_DefFindReplaceOpt BFS_DefFindReplaceOpt109,2894
#define BFS_CommentStart BFS_CommentStart110,2936
#define BFS_CommentEnd BFS_CommentEnd111,2978
#define BFS_FileNameRx BFS_FileNameRx112,3020
#define BFS_FirstLineRx BFS_FirstLineRx113,3062
#define BFS_CompileCommand BFS_CompileCommand114,3104
#define BFS_COUNT BFS_COUNT116,3147
#define BFS_WordChars BFS_WordChars118,3182
#define BFS_CapitalChars BFS_CapitalChars119,3233
#define BFI(BFI121,3278
#define BFI_SET(BFI_SET122,3324
#define BFS(BFS123,3380
#define WSETBIT(WSETBIT125,3427
#define WGETBIT(WGETBIT130,3652
    int num[BFI_COUNT];num134,3772
    char *str[BFS_COUNT];str135,3796
    char WordChars[32];WordChars136,3822
    char CapitalChars[32];CapitalChars137,3846
} EBufferFlags;EBufferFlags138,3873
#define FLAG_C_Indent FLAG_C_Indent143,3945
#define FLAG_C_BraceOfs FLAG_C_BraceOfs144,3980
#define FLAG_REXX_Indent FLAG_REXX_Indent145,4015
#define FLAG_ScreenSizeX FLAG_ScreenSizeX146,4050
#define FLAG_ScreenSizeY FLAG_ScreenSizeY147,4085
#define FLAG_CursorInsertStart FLAG_CursorInsertStart148,4120
#define FLAG_CursorInsertEnd FLAG_CursorInsertEnd149,4155
#define FLAG_CursorOverStart FLAG_CursorOverStart150,4190
#define FLAG_CursorOverEnd FLAG_CursorOverEnd151,4225
#define FLAG_SysClipboard FLAG_SysClipboard152,4260
#define FLAG_ShowHScroll FLAG_ShowHScroll153,4295
#define FLAG_ShowVScroll FLAG_ShowVScroll154,4330
#define FLAG_ScrollBarWidth FLAG_ScrollBarWidth155,4365
#define FLAG_SelectPathname FLAG_SelectPathname156,4400
#define FLAG_C_CaseOfs FLAG_C_CaseOfs157,4435
#define FLAG_DefaultModeName FLAG_DefaultModeName158,4470
#define FLAG_CompletionFilter FLAG_CompletionFilter159,4505
#define FLAG_ShowMenuBar FLAG_ShowMenuBar160,4540
#define FLAG_C_CaseDelta FLAG_C_CaseDelta161,4575
#define FLAG_C_ClassOfs FLAG_C_ClassOfs162,4610
#define FLAG_C_ClassDelta FLAG_C_ClassDelta163,4645
#define FLAG_C_ColonOfs FLAG_C_ColonOfs164,4680
#define FLAG_C_CommentOfs FLAG_C_CommentOfs165,4715
#define FLAG_C_CommentDelta FLAG_C_CommentDelta166,4750
#define FLAG_OpenAfterClose FLAG_OpenAfterClose167,4785
#define FLAG_PrintDevice FLAG_PrintDevice168,4820
#define FLAG_CompileCommand FLAG_CompileCommand169,4855
#define FLAG_REXX_Do_Offset FLAG_REXX_Do_Offset170,4890
#define FLAG_KeepHistory FLAG_KeepHistory171,4925
#define FLAG_LoadDesktopOnEntry FLAG_LoadDesktopOnEntry172,4960
#define FLAG_SaveDesktopOnExit FLAG_SaveDesktopOnExit173,4995
#define FLAG_WindowFont FLAG_WindowFont174,5030
#define FLAG_KeepMessages FLAG_KeepMessages175,5065
#define FLAG_ScrollBorderX FLAG_ScrollBorderX176,5100
#define FLAG_ScrollBorderY FLAG_ScrollBorderY177,5135
#define FLAG_ScrollJumpX FLAG_ScrollJumpX178,5170
#define FLAG_ScrollJumpY FLAG_ScrollJumpY179,5205
#define FLAG_ShowToolBar FLAG_ShowToolBar180,5240
#define FLAG_GUIDialogs FLAG_GUIDialogs181,5275
#define FLAG_PMDisableAccel FLAG_PMDisableAccel182,5310
#define FLAG_SevenBit FLAG_SevenBit183,5345
#define FLAG_WeirdScroll FLAG_WeirdScroll184,5380
#define FLAG_LoadDesktopMode FLAG_LoadDesktopMode185,5415
#define FLAG_HelpCommand FLAG_HelpCommand186,5450
#define FLAG_C_FirstLevelIndent FLAG_C_FirstLevelIndent187,5485
#define FLAG_C_FirstLevelWidth FLAG_C_FirstLevelWidth188,5520
#define FLAG_C_Continuation FLAG_C_Continuation189,5555
#define FLAG_C_ParenDelta FLAG_C_ParenDelta190,5590
#define FLAG_FunctionUsesContinuation FLAG_FunctionUsesContinuation191,5625
#define EM_MENUS EM_MENUS193,5667
#define EM_MainMenu EM_MainMenu194,5686
#define EM_LocalMenu EM_LocalMenu195,5708
#define COL_SyntaxParser COL_SyntaxParser197,5732
#define CLR_Normal CLR_Normal199,5760
#define CLR_Keyword CLR_Keyword200,5789
#define CLR_String CLR_String201,5818
#define CLR_Comment CLR_Comment202,5847
#define CLR_CPreprocessor CLR_CPreprocessor203,5876
#define CLR_Regexp CLR_Regexp204,5905
#define CLR_Header CLR_Header205,5934
#define CLR_Quotes CLR_Quotes206,5963
#define CLR_Number CLR_Number207,5992
#define CLR_HexNumber CLR_HexNumber208,6021
#define CLR_OctalNumber CLR_OctalNumber209,6050
#define CLR_FloatNumber CLR_FloatNumber210,6079
#define CLR_Function CLR_Function211,6108
#define CLR_Command CLR_Command212,6137
#define CLR_Tag CLR_Tag213,6166
#define CLR_Punctuation CLR_Punctuation214,6195
#define CLR_New CLR_New215,6224
#define CLR_Old CLR_Old216,6253
#define CLR_Changed CLR_Changed217,6282
#define CLR_Control CLR_Control218,6311
#define CLR_Separator CLR_Separator219,6340
#define CLR_Variable CLR_Variable220,6369
#define CLR_Symbol CLR_Symbol221,6398
#define CLR_Directive CLR_Directive222,6427
#define CLR_Label CLR_Label223,6456
#define CLR_Special CLR_Special224,6485
#define CLR_QuoteDelim CLR_QuoteDelim225,6514
#define CLR_RegexpDelim CLR_RegexpDelim226,6543
#define COUNT_CLR COUNT_CLR228,6573
#define MATCH_MUST_BOL MATCH_MUST_BOL230,6603
#define MATCH_MUST_BOLW MATCH_MUST_BOLW231,6637
#define MATCH_MUST_EOL MATCH_MUST_EOL232,6671
#define MATCH_MUST_EOLW MATCH_MUST_EOLW233,6705
#define MATCH_NO_CASE MATCH_NO_CASE234,6739
#define MATCH_SET MATCH_SET235,6773
#define MATCH_NOTSET MATCH_NOTSET236,6807
#define MATCH_QUOTECH MATCH_QUOTECH237,6841
#define MATCH_QUOTEEOL MATCH_QUOTEEOL238,6875
#define MATCH_NOGRAB MATCH_NOGRAB239,6909
#define MATCH_NEGATE MATCH_NEGATE240,6943
#define MATCH_TAGASNEXT MATCH_TAGASNEXT241,6977
#define ACTION_NXSTATE ACTION_NXSTATE243,7012
#define STATE_NOCASE STATE_NOCASE245,7047
#define STATE_TAGASNEXT STATE_TAGASNEXT246,7081
#define STATE_NOGRAB STATE_NOGRAB247,7115
    mvFilePath = 1,  /* directory + name + extension */mvFilePath250,7165
    mvFileName,      /* name + extension */mvFileName251,7221
    mvFileDirectory, /* directory + '/' */mvFileDirectory252,7265
    mvFileBaseName,  /* without the last extension */mvFileBaseName253,7308
    mvFileExtension, /* the last one */mvFileExtension254,7362
    mvCurDirectory,mvCurDirectory255,7402
    mvCurRow,mvCurRow256,7422
    mvCurCol,mvCurCol257,7436
    mvChar,mvChar258,7450
    mvWord,mvWord259,7462
    mvLinemvLine260,7474
} MacroVariable;MacroVariable261,7485

con_i18n.h,345
#define __CONI18N_H____CONI18N_H__2,22
#define XIM_INPUT_STYLE XIM_INPUT_STYLE11,202
struct remapKey {remapKey13,234
    KeySym key_english;key_english14,252
    KeySym key_remap;key_remap15,276
struct keyboardRec {keyboardRec18,302
    struct remapKey *tab;tab19,323
    KeySym deadkey;deadkey20,349
    short next;next21,369

con_ikcz.h,1192
#define  __CON_IKCS_H__CON_IKCS_H2,22
static struct remapKey keyboardStd[] =keyboardStd4,45
static struct remapKey keyboardHalfCz[] =keyboardHalfCz9,99
static struct remapKey keyboardFullCz[] =keyboardFullCz23,372
static struct remapKey keyboardAcute[] =keyboardAcute69,1412
static struct remapKey keyboardCaron[] =keyboardCaron117,2412
static struct remapKey keyboardFirst[] =keyboardFirst154,3170
static struct remapKey keyboardSecond[] =keyboardSecond200,4141
static struct remapKey keyboardThird[] =keyboardThird241,4931
static struct remapKey keyboardFourth[] =keyboardFourth265,5374
static struct remapKey keyboardFifth[] =keyboardFifth282,5673
#define KEYMAPS_MACRO KEYMAPS_MACRO295,5875
#define XKB_DEAD_KEYS XKB_DEAD_KEYS305,6220
#define XKB_DEAD_KEYSXKB_DEAD_KEYS316,6555
#define F22_DEAD_KEYS F22_DEAD_KEYS320,6599
#define F22_DEAD_KEYSF22_DEAD_KEYS328,6819
#define KBD_MACRO KBD_MACRO331,6849
static struct keyboardRec kbdStdRec[] =kbdStdRec342,7113
static struct keyboardRec kbdHalfCzRec[] =kbdHalfCzRec353,7247
static struct keyboardRec kbdFullCzRec[] =kbdFullCzRec364,7384
static struct keyboardRec *nationalKey[] =nationalKey382,7681

conkbd.h,1783
#define __CONKBD_H____CONKBD_H__11,239
#define kfAltXXX kfAltXXX13,261
#define kfModifier kfModifier14,293
#define kfSpecial kfSpecial15,325
#define kfAlt kfAlt16,357
#define kfCtrl kfCtrl17,389
#define kfShift kfShift18,421
#define kfGray kfGray19,453
#define kfKeyUp kfKeyUp20,485
#define kfAll kfAll21,517
#define isAltXXX(isAltXXX23,550
#define isAlt(isAlt24,596
#define isCtrl(isCtrl25,635
#define isShift(isShift26,676
#define isGray(isGray27,718
#define keyType(keyType28,758
#define keyCode(keyCode29,791
#define kbCode(kbCode30,829
#define isAscii(isAscii31,891
#define kbF1 kbF133,1001
#define kbF2 kbF234,1042
#define kbF3 kbF335,1083
#define kbF4 kbF436,1124
#define kbF5 kbF537,1165
#define kbF6 kbF638,1206
#define kbF7 kbF739,1247
#define kbF8 kbF840,1288
#define kbF9 kbF941,1329
#define kbF10 kbF1042,1370
#define kbF11 kbF1143,1411
#define kbF12 kbF1244,1452
#define kbUp kbUp46,1494
#define kbDown kbDown47,1535
#define kbLeft kbLeft48,1576
#define kbCenter kbCenter49,1617
#define kbRight kbRight50,1658
#define kbHome kbHome51,1699
#define kbEnd kbEnd52,1740
#define kbPgUp kbPgUp53,1781
#define kbPgDn kbPgDn54,1822
#define kbIns kbIns55,1863
#define kbDel kbDel56,1904
#define kbSpace kbSpace58,1946
#define kbBackSp kbBackSp60,1971
#define kbTab kbTab61,2008
#define kbEnter kbEnter62,2046
#define kbEsc kbEsc63,2084
#define kbAlt kbAlt65,2123
#define kbCtrl kbCtrl66,2165
#define kbShift kbShift67,2207
#define kbCapsLock kbCapsLock68,2249
#define kbNumLock kbNumLock69,2291
#define kbScrollLock kbScrollLock70,2333
#define kbPause kbPause72,2376
#define kbPrtScr kbPrtScr73,2417
#define kbSysReq kbSysReq74,2458
#define kbBreak kbBreak75,2499

console.h,3893
#define __CONSOLE_H____CONSOLE_H__11,241
#define DCH_C1 DCH_C114,304
#define DCH_C2 DCH_C215,321
#define DCH_C3 DCH_C316,338
#define DCH_C4 DCH_C417,355
#define DCH_H DCH_H18,372
#define DCH_V DCH_V19,389
#define DCH_M1 DCH_M120,406
#define DCH_M2 DCH_M221,423
#define DCH_M3 DCH_M322,440
#define DCH_M4 DCH_M423,457
#define DCH_X DCH_X24,474
#define DCH_RPTR DCH_RPTR25,492
#define DCH_EOL DCH_EOL26,512
#define DCH_EOF DCH_EOF27,531
#define DCH_END DCH_END28,550
#define DCH_AUP DCH_AUP29,569
#define DCH_ADOWN DCH_ADOWN30,588
#define DCH_HFORE DCH_HFORE31,609
#define DCH_HBACK DCH_HBACK32,630
#define DCH_ALEFT DCH_ALEFT33,651
#define DCH_ARIGHT DCH_ARIGHT34,672
#define ConMaxCols ConMaxCols36,695
#define ConMaxRows ConMaxRows37,718
#define csUp csUp39,742
#define csDown csDown40,763
#define csLeft csLeft41,784
#define csRight csRight42,805
#define evNone evNone44,827
#define evKeyDown evKeyDown45,856
#define evKeyUp evKeyUp46,885
#define evMouseDown evMouseDown47,914
#define evMouseUp evMouseUp48,943
#define evMouseMove evMouseMove49,972
#define evMouseAuto evMouseAuto50,1001
#define evCommand evCommand51,1030
#define evBroadcast evBroadcast52,1059
#define evNotify evNotify53,1088
#define evKeyboard evKeyboard55,1118
#define evMouse evMouse56,1162
#define evMessage evMessage57,1238
#define cmRefresh cmRefresh61,1308
#define cmResize cmResize62,1330
#define cmClose cmClose63,1352
#define cmPipeRead cmPipeRead64,1374
#define cmMainMenu cmMainMenu65,1396
#define cmPopupMenu cmPopupMenu66,1418
#define cmVScrollUp cmVScrollUp70,1468
#define cmVScrollDown cmVScrollDown71,1495
#define cmVScrollPgUp cmVScrollPgUp72,1522
#define cmVScrollPgDn cmVScrollPgDn73,1549
#define cmVScrollMove cmVScrollMove74,1576
#define cmHScrollLeft cmHScrollLeft78,1637
#define cmHScrollRight cmHScrollRight79,1664
#define cmHScrollPgLt cmHScrollPgLt80,1691
#define cmHScrollPgRt cmHScrollPgRt81,1718
#define cmHScrollMove cmHScrollMove82,1745
#define cmDroppedFile cmDroppedFile84,1773
#define cmRenameFile cmRenameFile85,1800
typedef unsigned char TAttr;TAttr87,1875
typedef TAttr *PAttr;PAttr88,1904
typedef unsigned long TCell;TCell91,1945
typedef unsigned short TCell;TCell93,1980
typedef TCell *PCell;PCell96,2018
typedef TCell TDrawBuffer[ConMaxCols];TDrawBuffer97,2040
typedef TDrawBuffer *PDrawBuffer;PDrawBuffer98,2079
typedef unsigned long TEventMask;TEventMask99,2113
typedef unsigned long TKeyCode;TKeyCode100,2147
typedef unsigned long TCommand;TCommand101,2179
    TEventMask What;What107,2268
    GView *View;View108,2289
    TKeyCode Code;Code109,2306
} TKeyEvent;TKeyEvent110,2325
    TEventMask What;What113,2356
    GView *View;View114,2377
    long X;X115,2394
    long Y;Y116,2406
    unsigned short Buttons;Buttons117,2418
    unsigned short Count;Count118,2446
    TKeyCode KeyMask;KeyMask119,2472
} TMouseEvent;TMouseEvent120,2494
    TEventMask What;What123,2527
    GView *View;View124,2548
    EModel *Model;Model125,2565
    TCommand Command;Command126,2584
    long Param1;Param1127,2606
    void *Param2;Param2128,2623
} TMsgEvent;TMsgEvent129,2641
    TEventMask What;What132,2671
    TKeyEvent Key;Key133,2692
    TMouseEvent Mouse;Mouse134,2711
    TMsgEvent Msg;Msg135,2734
    char fill[32];fill136,2753
} TEvent;TEvent137,2772
#define SUBMENU_NORMAL SUBMENU_NORMAL139,2783
#define SUBMENU_CONDITIONAL SUBMENU_CONDITIONAL140,2816
typedef struct _mItem {_mItem142,2850
    char *Name;Name143,2874
    char *Arg;Arg144,2890
    int SubMenu;SubMenu145,2905
    int Cmd;Cmd146,2922
} mItem;mItem147,2935
typedef struct _mMenu {_mMenu149,2945
    char *Name;Name150,2969
    int Count;Count151,2985
    mItem *Items;Items152,3000
} mMenu;mMenu153,3018

defcfg.h,44
char DefaultConfig[] = {DefaultConfig2,18

dialog.h,163
#define __DIALOG_H____DIALOG_H__11,239
#define askYes askYes13,261
#define askNo askNo14,282
#define askCancel askCancel15,303
#define askOK askOK16,324

e_buffer.h,4379
#define _BUFFER_H__BUFFER_H_11,239
#define bmLine bmLine13,259
#define bmStream bmStream14,279
#define bmColumn bmColumn15,299
#define E_OK E_OK17,320
#define E_CANCEL E_CANCEL18,356
#define E_ERROR E_ERROR19,405
#define E_NOMEM E_NOMEM20,440
#define umDelete umDelete22,484
#define umInsert umInsert23,508
#define umSplitLine umSplitLine24,532
#define umJoinLine umJoinLine25,556
#define tmNone tmNone27,581
#define tmLeft tmLeft28,605
#define tmRight tmRight29,629
typedef unsigned char TransTable[256];TransTable31,654
#define RWBUFSIZE RWBUFSIZE34,732
#define RWBUFSIZE RWBUFSIZE36,765
#define ChClass(ChClass41,837
#define ChClassK(ChClassK42,897
#define InRange(InRange44,966
#define Min(Min45,1019
#define Max(Max46,1058
#define NextTab(NextTab48,1098
#define GapLine(GapLine50,1151
typedef class ELine* PELine;PELine52,1217
typedef class EPoint* PEPoint;PEPoint53,1246
#define CHAR_TRESHOLD CHAR_TRESHOLD55,1278
class ELine {ELine57,1307
    int Count;Count59,1329
    char *Chars;Chars60,1344
    hlState StateE;StateE62,1388
class EPoint {EPoint73,1593
    int Row;Row75,1616
    int Col;Col76,1629
    EPoint(int aRow = 0, int aCol = 0) { Row = aRow; Col = aCol; }EPoint79,1697
    ~EPoint() {}~EPoint80,1764
typedef struct _UndoStack {_UndoStack83,1785
    int NextCmd, Record, Undo;NextCmd84,1813
    int NextCmd, Record, Undo;Record84,1813
    int NextCmd, Record, Undo;Undo84,1813
    int UndoPtr;UndoPtr85,1844
    int Num;Num86,1861
    void **Data;  Data87,1874
    int *Top;Top88,1893
} UndoStack;UndoStack89,1907
typedef struct _RoutineList {_RoutineList94,1967
    int Count;Count95,1997
    int *Lines;Lines96,2012
} RoutineList;RoutineList97,2028
    char *Name;Name102,2092
    EPoint BM;BM103,2108
} EBookmark;EBookmark104,2123
    int line;line108,2161
    unsigned char level;level109,2175
    unsigned char open;open110,2200
    unsigned short flags;flags111,2224
} EFold;EFold112,2250
class EEditPort: public EViewPort {EEditPort114,2260
    EBuffer *Buffer;Buffer116,2304
    EPoint TP, OldTP;TP117,2325
    EPoint TP, OldTP;OldTP117,2325
    EPoint CP;CP118,2347
    int Rows, Cols;Rows119,2362
    int Rows, Cols;Cols119,2362
class EBuffer: public EModel {EBuffer140,2910
    char *FileName;FileName143,2967
    int Modified;Modified144,2987
    EPoint TP;TP145,3005
    EPoint CP;CP146,3020
    EPoint BB;BB147,3035
    EPoint BE;BE148,3050
    EPoint PrevPos;PrevPos149,3065
    EPoint SavedPos;SavedPos150,3085
    EBufferFlags Flags;Flags152,3107
    EMode *Mode;Mode153,3131
    int BlockMode;BlockMode154,3148
    int ExtendGrab;ExtendGrab155,3167
    int AutoExtend;AutoExtend156,3187
    int Loaded;Loaded157,3207
    UndoStack US;US160,3247
    struct stat FileStatus;FileStatus163,3273
    int FileOk;FileOk164,3301
    int Loading;Loading165,3317
    int RAllocated;   // text line allocationRAllocated167,3335
    int RGap;RGap168,3381
    int RCount;RCount169,3395
    PELine *LL;LL170,3411
    int VAllocated;   // visible linesVAllocated172,3432
    int VGap;VGap173,3471
    int VCount;VCount174,3485
    int *VV;VV175,3501
    int FCount;FCount178,3535
    EFold *FF;FF179,3551
    EPoint Match;Match182,3574
    int MatchLen;MatchLen183,3592
    int MatchCount;MatchCount184,3610
    RxMatchRes MatchRes;MatchRes185,3630
    int BMCount;BMCount188,3680
    EBookmark *BMarks;BMarks189,3697
    RoutineList rlst;rlst193,3758
    RoutineView *Routines;Routines194,3780
    int MinRedraw, MaxRedraw;MinRedraw197,3815
    int MinRedraw, MaxRedraw;MaxRedraw197,3815
    int RedrawToEos;RedrawToEos198,3845
    char **WordList;WordList201,3896
    int WordCount;WordCount202,3917
    SyntaxProc HilitProc;HilitProc205,3970
    int StartHilit, EndHilit;StartHilit206,3996
    int StartHilit, EndHilit;EndHilit206,3996
    PELine RLine(int No) {RLine231,4822
    void RLine(int No, PELine L) {RLine241,5230
    int Vis(int No) {Vis248,5435
    void Vis(int No, int V) {Vis257,5698
    PELine VLine(int No) {VLine266,5975
    void VLine(int No, PELine L) {VLine277,6269
    int VToR(int No) {VToR289,6533
#define ccUp ccUp530,14301
#define ccDown ccDown531,14322
#define ccToggle ccToggle532,14343

egui.h,308
#define __EGUI_H____EGUI_H__11,235
class EFrame: public GFrame {EFrame13,255
    EEventMap *CMap;CMap15,293
    EModel *CModel;CModel16,314
class EGUI: public GUI {EGUI25,463
    EKeyMap *ActiveMap;ActiveMap27,496
    EKeyMap *OverrideMap;OverrideMap28,520
    char CharMap[32];CharMap29,546

e_mark.h,472
#define __EMARK_H__EMARK_H2,18
class EMark {EMark4,37
    char *getName() { return Name; }getName12,230
    char *getFileName() { return FileName; }getFileName13,267
    EBuffer *getBuffer() { return Buffer; }getBuffer15,336
    char *Name;Name18,408
    EPoint Point;Point19,424
    char *FileName;FileName20,442
    EBuffer *Buffer;Buffer23,490
class EMarkIndex {EMarkIndex26,515
    int markCount;markCount51,1233
    EMark **marks;marks52,1252

e_regex.h,1485
#define __REGEX_H__REGEX_H11,237
#define RE_NOTHING RE_NOTHING51,1887
#define RE_JUMP RE_JUMP52,1928
#define RE_BREAK RE_BREAK53,1969
#define RE_ATBOL RE_ATBOL54,2010
#define RE_ATEOL RE_ATEOL55,2070
#define RE_ATBOW RE_ATBOW56,2124
#define RE_ATEOW RE_ATEOW57,2181
#define RE_CASE RE_CASE58,2232
#define RE_NCASE RE_NCASE59,2298
#define RE_END RE_END60,2354
#define RE_ANY RE_ANY62,2402
#define RE_INSET RE_INSET63,2455
#define RE_NOTINSET RE_NOTINSET64,2504
#define RE_CHAR RE_CHAR65,2557
#define RE_WSPACE RE_WSPACE66,2613
#define RE_NWSPACE RE_NWSPACE67,2663
#define RE_UPPER RE_UPPER68,2713
#define RE_LOWER RE_LOWER69,2762
#define RE_DIGIT RE_DIGIT70,2811
#define RE_NDIGIT RE_NDIGIT71,2856
#define RE_WORD RE_WORD72,2905
#define RE_NWORD RE_NWORD73,2949
#define RE_GROUP RE_GROUP75,2998
#define RE_OPEN RE_OPEN76,3040
#define RE_CLOSE RE_CLOSE77,3080
#define RE_MEM RE_MEM78,3121
#define RE_BRANCH RE_BRANCH80,3170
#define RE_GREEDY RE_GREEDY81,3199
#define NSEXPS NSEXPS83,3273
#define RX_CASE RX_CASE85,3328
typedef struct _RxNode RxNode;RxNode87,3369
struct _RxNode {_RxNode89,3401
    short fWhat;fWhat90,3418
    short fLen;fLen91,3435
    RxNode *fPrev;fPrev92,3451
    RxNode *fNext;fNext93,3470
        char *fChar;fChar95,3501
        RxNode *fPtr;fPtr96,3522
    int Open[NSEXPS];    // -1 = not matchedOpen101,3572
    int Close[NSEXPS];Close102,3617
} RxMatchRes;RxMatchRes103,3640

e_tags.h,33
#define __TAGS_H__TAGS_H11,235

e_undo.h,621
#define __UNDO_H____UNDO_H__11,237
#define ucInsLine ucInsLine24,458
#define ucDelLine ucDelLine25,487
#define ucInsChars ucInsChars26,516
#define ucDelChars ucDelChars27,545
#define ucJoinLine ucJoinLine29,575
#define ucSplitLine ucSplitLine30,604
#define ucPosition ucPosition32,634
#define ucBlock ucBlock33,663
#define ucModified ucModified34,692
#define ucFoldCreate ucFoldCreate36,722
#define ucFoldDestroy ucFoldDestroy37,752
#define ucFoldPromote ucFoldPromote38,782
#define ucFoldDemote ucFoldDemote39,812
#define ucFoldOpen ucFoldOpen40,842
#define ucFoldClose ucFoldClose41,872

feature.h,2825
#define __FEATURE_H____FEATURE_H__13,277
#undef CONFIG_EMULATE_VI CONFIG_EMULATE_VI15,300
#define CONFIG_CONFIGURABLECONFIG_CONFIGURABLE17,334
#define CONFIG_MOUSECONFIG_MOUSE18,362
#define CONFIG_CLIPBOARDCONFIG_CLIPBOARD19,383
#define CONFIG_SHELLCONFIG_SHELL20,408
#define CONFIG_MFRAMESCONFIG_MFRAMES22,430
#define CONFIG_MWINDOWSCONFIG_MWINDOWS23,453
#define CONFIG_MBUFFERSCONFIG_MBUFFERS24,477
#define CONFIG_MENUSCONFIG_MENUS25,501
#define CONFIG_SCROLLBARSCONFIG_SCROLLBARS26,522
#define CONFIG_I_SEARCHCONFIG_I_SEARCH27,548
#define CONFIG_I_ASCIICONFIG_I_ASCII28,572
#define CONFIG_HISTORYCONFIG_HISTORY29,595
#define CONFIG_DESKTOPCONFIG_DESKTOP30,618
#define CONFIG_BLOCK_STREAMCONFIG_BLOCK_STREAM32,642
#define CONFIG_BLOCK_COLUMNCONFIG_BLOCK_COLUMN33,670
#define CONFIG_BLOCK_LINECONFIG_BLOCK_LINE34,698
#define CONFIG_IOBLOCKSCONFIG_IOBLOCKS35,724
#define CONFIG_PRINTINGCONFIG_PRINTING36,748
#define CONFIG_BOOKMARKSCONFIG_BOOKMARKS37,772
#define CONFIG_WORDWRAPCONFIG_WORDWRAP38,797
#define CONFIG_ABBREVCONFIG_ABBREV39,821
#define CONFIG_TAGSCONFIG_TAGS40,843
#define CONFIG_UNDOREDOCONFIG_UNDOREDO42,864
#define CONFIG_REGEXPSCONFIG_REGEXPS43,888
#define CONFIG_FOLDSCONFIG_FOLDS44,911
#undef CONFIG_OBJ_HEXEDIT CONFIG_OBJ_HEXEDIT46,933
#undef CONFIG_OBJ_VIEWER CONFIG_OBJ_VIEWER47,978
#define CONFIG_OBJ_LISTCONFIG_OBJ_LIST48,1023
#define CONFIG_OBJ_FILECONFIG_OBJ_FILE49,1047
#define CONFIG_OBJ_DIRECTORYCONFIG_OBJ_DIRECTORY52,1095
#define CONFIG_OBJ_ROUTINECONFIG_OBJ_ROUTINE53,1124
#define CONFIG_OBJ_BUFFERSCONFIG_OBJ_BUFFERS54,1151
#define CONFIG_OBJ_MESSAGESCONFIG_OBJ_MESSAGES55,1178
#define CONFIG_SYNTAX_HILITCONFIG_SYNTAX_HILIT58,1214
#define CONFIG_WORD_HILITCONFIG_WORD_HILIT59,1242
#define CONFIG_HILIT_CCONFIG_HILIT_C62,1296
#define CONFIG_HILIT_REXXCONFIG_HILIT_REXX63,1319
#define CONFIG_HILIT_HTMLCONFIG_HILIT_HTML64,1345
#define CONFIG_HILIT_PERLCONFIG_HILIT_PERL65,1371
#define CONFIG_HILIT_ADACONFIG_HILIT_ADA66,1397
#define CONFIG_HILIT_MAKECONFIG_HILIT_MAKE67,1422
#define CONFIG_HILIT_DIFFCONFIG_HILIT_DIFF68,1448
#define CONFIG_HILIT_MERGECONFIG_HILIT_MERGE69,1474
#define CONFIG_HILIT_IPFCONFIG_HILIT_IPF70,1501
#define CONFIG_HILIT_MSGCONFIG_HILIT_MSG71,1526
#define CONFIG_HILIT_SHCONFIG_HILIT_SH72,1551
#define CONFIG_HILIT_PASCALCONFIG_HILIT_PASCAL73,1575
#define CONFIG_HILIT_TEXCONFIG_HILIT_TEX74,1603
#define CONFIG_HILIT_FTECONFIG_HILIT_FTE75,1628
#define CONFIG_HILIT_CATBSCONFIG_HILIT_CATBS76,1653
#define CONFIG_HILIT_SIMPLECONFIG_HILIT_SIMPLE77,1680
#define CONFIG_INDENT_CCONFIG_INDENT_C81,1744
#define CONFIG_INDENT_SIMPLECONFIG_INDENT_SIMPLE85,1809
#define CONFIG_INDENT_REXXCONFIG_INDENT_REXX89,1877
#define CONFIG_I_COMPLETECONFIG_I_COMPLETE92,1912

fnmatch.h,672
#define	_FNMATCH_H	_FNMATCH_H20,939
#  undef	__P__P28,1128
#  define __P(__P29,1142
# undef	__P__P32,1214
# define __P(__P33,1227
#  define __const	__const41,1561
#  define __const__const43,1594
#undef	FNM_PATHNAMEFNM_PATHNAME49,1765
#undef	FNM_NOESCAPEFNM_NOESCAPE50,1786
#undef	FNM_PERIODFNM_PERIOD51,1807
#define	FNM_PATHNAME	FNM_PATHNAME54,1881
#define	FNM_NOESCAPE	FNM_NOESCAPE55,1951
#define	FNM_PERIOD	FNM_PERIOD56,2028
# define FNM_FILE_NAME	FNM_FILE_NAME59,2182
# define FNM_LEADING_DIR FNM_LEADING_DIR60,2247
# define FNM_CASEFOLD	FNM_CASEFOLD61,2318
#define	FNM_NOMATCH	FNM_NOMATCH65,2470
# define FNM_NOSYS	FNM_NOSYS72,2741

fte.h,56
#define __FTE_H__FTE_H11,231
#define new new60,1220

ftever.h,226
#define __FTEVER_H__FTEVER_H2,19
#define PROG_FTE PROG_FTE4,39
#define PROG_CFTE PROG_CFTE5,64
#define PROGRAM PROGRAM6,90
#define VERSION VERSION7,118
#define VERNUM VERNUM8,147
#define COPYRIGHT COPYRIGHT9,179

gui.h,2212
#define __GUI_H__GUI_H11,231
#define RUN_WAIT RUN_WAIT13,248
#define RUN_ASYNC RUN_ASYNC14,267
class GView {GView22,350
    GFrame *Parent;Parent24,372
    GView *Next, *Prev;Next25,392
    GView *Next, *Prev;Prev25,392
    GViewPeer *Peer;Peer26,416
    int Result;Result27,437
class GFrame {GFrame69,1671
    GFrame *Prev, *Next;Prev71,1694
    GFrame *Prev, *Next;Next71,1694
    GView *Top, *Active;Top72,1719
    GView *Top, *Active;Active72,1719
    GFramePeer *Peer;Peer73,1744
    char *Menu;Menu74,1766
class GUI {GUI113,2725
    int fArgc;fArgc145,3596
    char **fArgv;fArgv146,3611
    int doLoop;doLoop147,3629
#define GUIDLG_CHOICE GUIDLG_CHOICE153,3690
#define GUIDLG_PROMPT GUIDLG_PROMPT154,3728
#define GUIDLG_PROMPT2 GUIDLG_PROMPT2155,3766
#define GUIDLG_FILE GUIDLG_FILE156,3804
#define GUIDLG_FIND GUIDLG_FIND157,3842
#define GUIDLG_FINDREPLACE GUIDLG_FINDREPLACE158,3880
#define GF_OPEN GF_OPEN164,4003
#define GF_SAVEAS GF_SAVEAS165,4029
#define GPC_NOTE GPC_NOTE170,4257
#define GPC_CONFIRM GPC_CONFIRM171,4284
#define GPC_WARNING GPC_WARNING172,4311
#define GPC_ERROR GPC_ERROR173,4338
#define GPC_FATAL GPC_FATAL174,4365
#define SEARCH_BACK SEARCH_BACK177,4478
#define SEARCH_RE SEARCH_RE178,4544
#define SEARCH_NCASE SEARCH_NCASE179,4594
#define SEARCH_GLOBAL SEARCH_GLOBAL180,4638
#define SEARCH_BLOCK SEARCH_BLOCK181,4715
#define SEARCH_NEXT SEARCH_NEXT182,4770
#define SEARCH_NASK SEARCH_NASK183,4820
#define SEARCH_ALL SEARCH_ALL184,4880
#define SEARCH_REPLACE SEARCH_REPLACE185,4930
#define SEARCH_JOIN SEARCH_JOIN186,4992
#define SEARCH_DELETE SEARCH_DELETE187,5041
#define SEARCH_CENTER SEARCH_CENTER188,5092
#define SEARCH_NOPOS SEARCH_NOPOS189,5144
#define SEARCH_WORDBEG SEARCH_WORDBEG190,5205
#define SEARCH_WORDEND SEARCH_WORDEND191,5277
#define SEARCH_WORD SEARCH_WORD192,5343
#define MAXSEARCH MAXSEARCH200,5759
    int ok;ok203,5799
    char strSearch[MAXSEARCH];strSearch204,5811
    char strReplace[MAXSEARCH];strReplace205,5842
    unsigned long Options;Options206,5874
    int resCount;resCount208,5908
} SearchReplaceOptions;SearchReplaceOptions209,5926

i_ascii.h,222
#define __EXASCII_H__EXASCII_H11,239
class ExASCII: public ExView {ExASCII13,260
    int Pos, LPos;Pos15,299
    int Pos, LPos;LPos15,299
    virtual ExView* GetViewContext() { return Next; }GetViewContext21,408

i_choice.h,419
#define __EXCHOICE_H__EXCHOICE_H11,241
class ExChoice: public ExView {ExChoice13,263
    char *Title;Title15,303
    char Prompt[160];Prompt16,320
    int NOpt;NOpt17,342
    char *SOpt[10];SOpt18,356
    int Cur;Cur19,376
    int lTitle;lTitle20,389
    int lChoice;lChoice21,405
    int MouseCaptured;MouseCaptured22,422
    virtual ExView* GetViewContext() { return Next; }GetViewContext28,605

i_complete.h,609
#define __EXCOMPLETE_H__EXCOMPLETE_H11,242
#define MAXCOMPLETEWORDS MAXCOMPLETEWORDS14,319
class ExComplete: public ExView {ExComplete16,349
    EPoint Orig;Orig17,383
    EBuffer *Buffer;Buffer18,400
    int WordsLast;WordsLast19,421
    char **Words;Words20,440
    char *WordBegin;WordBegin21,458
    char *WordContinue;WordContinue22,479
    int WordPos;WordPos23,503
    size_t WordFixed;WordFixed24,520
    size_t WordFixedCount;WordFixedCount25,542
    inline int CheckASCII(int c) {CheckASCII28,597
    virtual ExView* GetViewContext() { return Next; }GetViewContext39,850

i_input.h,693
#define __EXINPUT_H__EXINPUT_H11,239
typedef int (*Completer)(const char *Name, char *Completed, int Num);Completer13,260
class ExInput: public ExView {ExInput15,331
    char *Prompt;Prompt17,370
    char *Line;Line18,388
    char *MatchStr;MatchStr19,404
    char *CurStr;CurStr20,424
    unsigned int Pos;Pos21,442
    unsigned int LPos;LPos22,464
    unsigned int MaxLen;MaxLen23,487
    Completer Comp;Comp24,512
    int TabCount;TabCount25,532
    int HistId;HistId26,550
    int CurItem;CurItem27,566
    unsigned int SelStart;SelStart28,583
    unsigned int SelEnd;SelEnd29,610
    virtual ExView *GetViewContext() { return Next; }GetViewContext35,821

i_key.h,237
#define __EXKEY_H__EXKEY_H11,235
class ExKey: public ExView {ExKey13,254
    char *Prompt;Prompt15,291
    TKeyCode Key;Key16,309
    char ch;ch17,327
    virtual ExView* GetViewContext() { return Next; }GetViewContext23,445

i_modelview.h,265
#define __EXEDIT_H__EXEDIT_H11,242
class ExModelView: public ExView {ExModelView15,276
    EView *View;View17,319
    int MouseCaptured;MouseCaptured18,336
    int MouseMoved;MouseMoved19,359
    virtual int IsModelView() { return 1; }IsModelView37,913

i_oview.h,649
#define __IOVIEW_H__IOVIEW_H11,238
class ExView {ExView17,303
    GxView *Win;Win19,326
    ExView *Next;Next20,343
    virtual int GetContext() { return CONTEXT_NONE; }GetContext29,550
    virtual ExView *GetViewContext() { return this; }GetViewContext30,604
    virtual ExView *GetStatusContext() { return this; }GetStatusContext31,658
    void Repaint() { RepaintStatus(); RepaintView(); }Repaint42,1033
    void Update() { UpdateStatus(); UpdateView(); }Update43,1088
    virtual int IsModelView() { return 0; }IsModelView53,1461
    virtual void WnSwitchBuffer(EModel *M) { Next->WnSwitchBuffer(M); }WnSwitchBuffer54,1505

i_search.h,866
#define __ISEARCH_H__ISEARCH_H11,240
#define MAXISEARCH MAXISEARCH13,261
class ExISearch: public ExView {ExISearch15,285
    typedef enum { IOk, INoMatch, INoPrev, INoNext } IState;IOk17,326
    typedef enum { IOk, INoMatch, INoPrev, INoNext } IState;INoMatch17,326
    typedef enum { IOk, INoMatch, INoPrev, INoNext } IState;INoPrev17,326
    typedef enum { IOk, INoMatch, INoPrev, INoNext } IState;INoNext17,326
    typedef enum { IOk, INoMatch, INoPrev, INoNext } IState;IState17,326
    char ISearchStr[MAXISEARCH + 1];ISearchStr19,392
    EPoint Orig;Orig20,429
    EPoint stack[MAXISEARCH];stack21,446
    int len;len22,476
    int stacklen;stacklen23,489
    EBuffer *Buffer;Buffer24,507
    IState state;state25,528
    int Direction;Direction26,546
    virtual ExView *GetViewContext() { return Next; }GetViewContext32,661

i_view.h,472
class GxView: public GView {GxView12,232
    ExView *Top;Top14,269
    ExView *Bottom;Bottom15,286
    int MouseCaptured;MouseCaptured16,306
    virtual ExView* GetStatusContext() { if (Top) return Top->GetStatusContext(); else return 0; }GetStatusContext29,598
    virtual ExView* GetViewContext() { if (Top) return Top->GetViewContext(); else return 0; }GetViewContext30,697
    int IsModelView() { return Top ? Top->IsModelView() : 0; }IsModelView56,1675

log.h,2127
#define __LOGGING_HPP__LOGGING_HPP82,2336
#define bool bool96,2563
#define true true97,2581
#define false false98,2597
class GlobalLogGlobalLog109,2750
    char const* m_strLogFile;m_strLogFile113,2807
    ofstream    m_ofsLog;m_ofsLog114,2837
    bool        m_bOpened;m_bOpened116,2864
    int         indent;indent118,2892
    GlobalLog() : m_strLogFile(NULL), m_bOpened(false) {}GlobalLog123,2956
    GlobalLog(char const* strLogFile) : m_strLogFile(strdup(strLogFile)), m_bOpened(false) {}GlobalLog124,3014
    virtual ~GlobalLog() {free((void*)m_strLogFile);}~GlobalLog126,3109
    void SetLogFile(char const* strNewLogFile)SetLogFile128,3164
    operator bool() { return !m_ofsLog.fail(); }operator bool140,3524
class FunctionLogFunctionLog152,3778
    GlobalLog&  log;log155,3807
    char const* func;func156,3828
    int         myIndentLevel;myIndentLevel157,3850
    char        indentChar;indentChar158,3881
    ostream& OutputLine()OutputLine170,4098
    ostream& OutputLine(unsigned long line)OutputLine175,4212
#define LOGOBJNAME LOGOBJNAME182,4362
#define LOG LOG183,4398
#define ENDLINE ENDLINE184,4442
#define STARTFUNC(STARTFUNC186,4464
#define ENDFUNCRC(ENDFUNCRC187,4538
#define ENDFUNCRC_SAFE(ENDFUNCRC_SAFE188,4634
#define ENDFUNCAS(ENDFUNCAS189,4767
#define ENDFUNCAS_SAFE(ENDFUNCAS_SAFE190,4874
#define BOOLYESNO(BOOLYESNO191,5028
#define DECLARE_OSTREAM_FUNC1(DECLARE_OSTREAM_FUNC1246,6503
#define DECLARE_OSTREAM_FUNC2(DECLARE_OSTREAM_FUNC2258,7008
inline ostream_func1_char BinChar(char c)BinChar277,7838
inline ostream_func2_char_size_t FillChar(char const& c, size_t const& num)FillChar281,7995
#define LOGBINARYDATA(LOGBINARYDATA286,8220
#define LOG LOG290,8337
#define ENDLINE ENDLINE291,8366
#define STARTFUNC(STARTFUNC293,8391
#define ENDFUNCRC(ENDFUNCRC294,8416
#define ENDFUNCRC_SAFE(ENDFUNCRC_SAFE295,8448
#define ENDFUNCAS(ENDFUNCAS296,8490
#define ENDFUNCAS_SAFE(ENDFUNCAS_SAFE297,8527
#define BOOLYESNO(BOOLYESNO298,8579
#define BinChar(BinChar301,8660
#define LOGBINARYDATA(LOGBINARYDATA302,8681

namemaps.h,636
#define __NAMEMAPS_H____NAMEMAPS_H__3,40
#define access access5,64
#define chmod chmod6,91
#define chsize chsize7,117
#define close close8,144
#define creat creat9,170
#define dup dup10,196
#define dup2 dup211,220
#define eof eof12,245
#define filelength filelength13,269
#define isatty isatty14,300
#define locking locking15,327
#define lseek lseek16,355
#define mktemp mktemp17,381
#define open open18,408
#define read read19,433
#define setmode setmode20,458
#define sopen sopen21,486
#define tell tell22,512
#define umask umask23,537
#define unlink unlink24,563
#define write write25,590

o_buflist.h,151
#define __BUFLIST_H__BUFLIST_H11,241
class BufferView: public EList {BufferView13,262
    char **BList;BList15,303
    int BCount;BCount16,321

o_directory.h,324
#define __ODIRECTORY_H__ODIRECTORY_H11,246
class EDirectory: public EList {EDirectory15,299
    char *Path;Path17,340
    FileInfo **Files;Files18,356
    int FCount;FCount19,378
    int SearchLen;SearchLen20,394
    char SearchName[MAXISEARCH];SearchName21,413
    int SearchPos[MAXISEARCH];SearchPos22,446

o_list.h,973
#define __OLIST_H____OLIST_H__11,238
class EListPort: public EViewPort {EListPort15,273
    EList *List;List17,317
    int Row, TopRow, LeftCol;Row18,334
    int Row, TopRow, LeftCol;TopRow18,334
    int Row, TopRow, LeftCol;LeftCol18,334
    int OldRow, OldTopRow, OldLeftCol, OldCount;OldRow19,364
    int OldRow, OldTopRow, OldLeftCol, OldCount;OldTopRow19,364
    int OldRow, OldTopRow, OldLeftCol, OldCount;OldLeftCol19,364
    int OldRow, OldTopRow, OldLeftCol, OldCount;OldCount19,364
class EList: public EModel {EList37,788
    char *Title;Title39,825
    int Row, LeftCol, TopRow, Count;Row40,842
    int Row, LeftCol, TopRow, Count;LeftCol40,842
    int Row, LeftCol, TopRow, Count;TopRow40,842
    int Row, LeftCol, TopRow, Count;Count40,842
    int MouseCaptured;MouseCaptured41,879
    int MouseMoved;MouseMoved42,902
    int NeedsUpdate, NeedsRedraw;NeedsUpdate43,922
    int NeedsUpdate, NeedsRedraw;NeedsRedraw43,922

o_messages.h,880
#define __MESSAGES_H____MESSAGES_H__11,245
    char *file;file15,313
    int line;line16,329
    char *msg;msg17,343
    char *text;text18,358
    EBuffer *Buf;Buf19,374
} Error;Error20,392
struct aDiraDir22,402
    aDir*       next;next24,416
    char*       name;name25,438
class EMessages: public EList {EMessages28,464
    char *Command;Command30,504
    char *Directory;Directory31,523
    int ErrCount;ErrCount33,549
    Error **ErrList;ErrList34,567
    int Running;Running35,588
    int BufLen;BufLen37,606
    int BufPos;BufPos38,622
    int PipeId;PipeId39,638
    int ReturnCode;ReturnCode40,654
    int MatchCount;MatchCount41,674
    char MsgBuf[4096];MsgBuf42,694
    aDir*   curr_dir;                       // top of dir stack.curr_dir43,717
    virtual int GetContext() { return CONTEXT_MESSAGES; }GetContext55,1101

o_model.h,952
#define __MODEL_H____MODEL_H__11,239
class EViewPort {EViewPort15,274
    EView *View;View17,300
    int ReCenter;ReCenter18,317
enum createFlags {createFlags35,681
    cfAppend = 1,cfAppend36,700
    cfNoActivate = 2cfNoActivate37,718
class EModel {EModel40,743
    EModel **Root;   // root ptr of this listRoot42,766
    EModel *Next;    // next modelNext43,812
    EModel *Prev;    // prev modelPrev44,847
    EView *View;     // active view of modelView45,882
    int ModelNo;ModelNo47,932
class EView {EView85,2026
    EView *Next;        // next viewNext87,2048
    EView *Prev;        // prev viewPrev88,2085
    ExModelView *MView; // model view controllerMView89,2122
    EModel *Model;       // model for this viewModel90,2171
    EView *NextView;    // next view for modelNextView91,2219
    EViewPort *Port;Port92,2266
    char *CurMsg;CurMsg93,2287
#define MSGBUFTMP_SIZE MSGBUFTMP_SIZE173,4439

o_modemap.h,192
#define __MAPVIEW_H____MAPVIEW_H__11,243
class EventMapView: public EList {EventMapView13,266
    char **BList;BList15,309
    int BCount;BCount16,327
    EEventMap *EMap;EMap17,343

o_routine.h,131
#define __ROUTINE_H____ROUTINE_H__11,243
class RoutineView: public EList {RoutineView15,293
    EBuffer *Buffer;Buffer17,335

pmdlg.h,794
#define IDD_PROMPT IDD_PROMPT1,0
#define IDS_PROMPT IDS_PROMPT2,28
#define IDE_FIELD IDE_FIELD3,56
#define IDD_FINDREPLACE IDD_FINDREPLACE5,85
#define IDD_FIND IDD_FIND6,115
#define IDL_FIND IDL_FIND8,146
#define IDL_REPLACE IDL_REPLACE9,176
#define IDE_FIND IDE_FIND11,207
#define IDE_REPLACE IDE_REPLACE12,237
#define IDC_IGNORECASE IDC_IGNORECASE14,268
#define IDC_REGEXPS IDC_REGEXPS15,298
#define IDC_WORDS IDC_WORDS16,328
#define IDC_BLOCK IDC_BLOCK17,358
#define IDC_GLOBAL IDC_GLOBAL18,388
#define IDC_REVERSE IDC_REVERSE19,418
#define IDC_ALLOCCURENCES IDC_ALLOCCURENCES20,448
#define IDC_NOPROMPTING IDC_NOPROMPTING21,478
#define IDC_JOINLINE IDC_JOINLINE22,508
#define IDC_DELETELINE IDC_DELETELINE23,538
#define IDD_FILEDLG IDD_FILEDLG25,569

pm_tool.h,596
#define __TOOLBAR_H__TOOLBAR_H2,20
#define tiBITMAP tiBITMAP4,41
#define tiSEPARATOR tiSEPARATOR5,64
#define tfDISABLED tfDISABLED7,88
#define tfDEPRESSED tfDEPRESSED8,111
#define WC_MTOOLBAR WC_MTOOLBAR10,140
    ULONG ulType;ulType13,190
    ULONG ulId;ulId14,208
    ULONG ulCommand;ulCommand15,224
    ULONG ulFlags;ulFlags16,245
    HBITMAP hBitmap;hBitmap17,264
} ToolBarItem;ToolBarItem18,285
    USHORT cb;cb21,318
    LONG ulCount;ulCount22,333
    ToolBarItem *pItems;pItems23,351
    LONG ulDepressed;ulDepressed24,376
} ToolBarData;ToolBarData25,398

port.h,3933
#define __port_port_h__port_port_h2,22
#	define	ULONG	ULONG9,99
#	define	UWORD	UWORD13,150
#	define	UBYTE	UBYTE17,202
#	define	boolean boolean21,255
#	define	FALSE	FALSE25,298
#	define	TRUE	TRUE29,336
 #define __FILLER(__FILLER38,617
 #define __FILLER(__FILLER40,662
struct dosxEreg {dosxEreg43,691
	unsigned long	eax, ebx, ecx, edx, ebp, esi, edi;eax44,709
	unsigned long	eax, ebx, ecx, edx, ebp, esi, edi;ebx44,709
	unsigned long	eax, ebx, ecx, edx, ebp, esi, edi;ecx44,709
	unsigned long	eax, ebx, ecx, edx, ebp, esi, edi;edx44,709
	unsigned long	eax, ebx, ecx, edx, ebp, esi, edi;ebp44,709
	unsigned long	eax, ebx, ecx, edx, ebp, esi, edi;esi44,709
	unsigned long	eax, ebx, ecx, edx, ebp, esi, edi;edi44,709
	unsigned short	ds, es, fs, gs;ds45,759
	unsigned short	ds, es, fs, gs;es45,759
	unsigned short	ds, es, fs, gs;fs45,759
	unsigned short	ds, es, fs, gs;gs45,759
	unsigned long	flags;flags46,791
struct dosxBreg {dosxBreg49,817
	unsigned char al, ah;  __FILLER(_1)al50,835
	unsigned char al, ah;  __FILLER(_1)ah50,835
	unsigned char cl, ch;  __FILLER(_3)cl52,909
	unsigned char cl, ch;  __FILLER(_3)ch52,909
struct dosxWreg {dosxWreg56,987
	unsigned short ax;	__FILLER(_1)ax57,1005
	unsigned short cx;	__FILLER(_3)cx59,1071
	unsigned short bp;	__FILLER(_5)bp61,1137
	unsigned short di;	__FILLER(_7)di63,1203
	unsigned short es;es65,1256
	unsigned short fs;fs66,1276
	unsigned short gs;gs67,1296
	unsigned long	flags;flags68,1316
union dosxReg {dosxReg74,1562
	struct dosxBreg 	h;h75,1578
	struct dosxWreg 	w;w76,1599
	struct dosxEreg 	x;x77,1620
#define PLCPUF_C	PLCPUF_C84,1864
#define PLCPUF_P	PLCPUF_P85,1902
#define PLCPUF_A	PLCPUF_A86,1936
#define PLCPUF_Z	PLCPUF_Z87,1979
#define PLCPUF_S	PLCPUF_S88,2017
#define PLCPUF_T	PLCPUF_T89,2054
#define PLCPUF_I	PLCPUF_I90,2092
#define PLCPUF_D	PLCPUF_D91,2129
#define PLCPUF_O	PLCPUF_O92,2166
#define PL_WILDCARDS	PL_WILDCARDS98,2408
#define PL_EXTENSION	PL_EXTENSION99,2434
#define PL_FILENAME	PL_FILENAME100,2460
#define PL_DIRECTORY	PL_DIRECTORY101,2485
#define PL_DRIVE	PL_DRIVE102,2511
#define PLFA_NORMAL	PLFA_NORMAL107,2735
#define PLFA_RDONLY	PLFA_RDONLY108,2794
#define PLFA_HIDDEN	PLFA_HIDDEN109,2846
#define PLFA_SYSTEM	PLFA_SYSTEM110,2890
#define PLFA_LABEL	PLFA_LABEL111,2934
#define PLFA_DIREC	PLFA_DIREC112,2979
#define PLFA_ARCH	PLFA_ARCH113,3021
struct plFTimeplFTime119,3291
	unsigned	ft_tsec  : 5;	// Two second intervalft_tsec121,3308
	unsigned	ft_min	 : 6;	// Minuteft_min122,3355
	unsigned	ft_hour  : 5;	// Hourft_hour123,3388
	unsigned	ft_day	 : 5;	// Dayft_day124,3420
	unsigned	ft_month : 4;	// Monthft_month125,3450
	unsigned	ft_year  : 7;	// Yearft_year126,3483
struct plDFreeplDFree134,3756
	unsigned	df_avail;df_avail136,3773
	unsigned	df_total;df_total137,3793
	unsigned	df_bsec;df_bsec138,3813
	unsigned	df_sclus;df_sclus139,3832
#define PL_LK_UNLCK	PL_LK_UNLCK146,4064
#define PL_LK_LOCK	PL_LK_LOCK147,4113
#define PL_LK_NBLCK	PL_LK_NBLCK148,4160
#define PL_LK_RLCK	PL_LK_RLCK149,4204
#define PL_LK_NBRLCK	PL_LK_NBRLCK150,4247
enum ePlScnTypeePlScnType224,6379
	plsctUnknown,plsctUnknown226,6397
	plsctMono,		    // Monochrome adapter / unknown type,plsctMono227,6412
	plsctCGA,		    // Color graphics adapterplsctCGA228,6467
	plsctEGA,		    // EGA adapter,plsctEGA229,6509
	plsctVGA,		    // VGA adapter,plsctVGA230,6541
	plsctLastplsctLast231,6573
struct plKbdInfoplKbdInfo264,7648
	UBYTE	ki_scan;ki_scan266,7667
	UBYTE	ki_ascii;ki_ascii267,7683
	ULONG	ki_flags;	    // PLKF_ defines, above;ki_flags268,7700
#define PLKF_SHIFT	PLKF_SHIFT271,7750
#define PLKF_CTRL	PLKF_CTRL272,7777
#define PLKF_ALT	PLKF_ALT273,7803
#define PLKF_SCROLLLOCK PLKF_SCROLLLOCK274,7828
#define PLKF_NUMLOCK	PLKF_NUMLOCK275,7860
#define PLKF_CAPSLOCK	PLKF_CAPSLOCK276,7889

s_direct.h,970
#define __SDIRECT_H__SDIRECT_H11,240
#define fiUNKNOWN fiUNKNOWN15,296
#define fiFILE fiFILE16,318
#define fiDIRECTORY fiDIRECTORY17,340
class FileInfo {FileInfo19,363
    char *name;   // minimum set of file informationname21,389
    off_t size;size22,442
    time_t mtime;mtime23,458
    int type;type24,476
    char *Name() { return name; }Name30,583
    off_t Size() { return size; }Size31,617
    int Type() { return type; }Type32,651
    time_t MTime() { return mtime; }MTime33,683
#define ffFAST ffFAST36,724
#define ffFULLPATH ffFULLPATH37,831
#define ffDIRECTORY ffDIRECTORY38,884
#define ffHIDDEN ffHIDDEN39,956
class FileFind {FileFind41,1025
    char *Directory;Directory43,1051
    char *Pattern;Pattern44,1072
    int Flags;Flags45,1091
    DIR *dir;dir48,1131
    unsigned long dir; // should be HDIR, but we don't #include huge os2.h globallydir50,1188
    unsigned long dir; // should be HANDLEdir52,1314

s_files.h,363
#define __FILESYS_H____FILESYS_H__11,241
#define SDOT SDOT13,264
#define SLASH SLASH16,300
#define SSLASH SSLASH17,319
#define ISSLASH(ISSLASH19,339
#define ISSEP(ISSEP20,373
#define SLASH SLASH25,499
#define SSLASH SSLASH26,517
#define SLASH SLASH28,542
#define SSLASH SSLASH29,561
#define ISSLASH(ISSLASH32,589
#define ISSEP(ISSEP33,640

s_util.h,207
#define __EDITOR_H____EDITOR_H__11,239
#define USE_CtrlEnter USE_CtrlEnter13,261
#define S_BUSY S_BUSY15,289
#define S_INFO S_INFO16,310
#define S_BOLD S_BOLD17,331
#define S_ERROR S_ERROR18,352

sysdep.h,1098
#define __SYSDEP_H__SYSDEP_H11,237
#    define USE_DIRENTUSE_DIRENT46,908
#    define strnicmp strnicmp61,1187
#    define stricmp stricmp62,1220
#    define filecmp filecmp63,1251
#    define filecmp filecmp81,1736
#        define NO_NEW_CPP_FEATURESNO_NEW_CPP_FEATURES83,1790
#    define NO_NEW_CPP_FEATURESNO_NEW_CPP_FEATURES92,1971
#        undef MAXPATHMAXPATH102,2200
#    define filecmp filecmp105,2309
#    define filecmp filecmp125,2692
#    define popen popen126,2720
#    define pclose pclose127,2745
#    define MAXPATH MAXPATH131,2796
#    define O_BINARY O_BINARY135,2846
#        define FAKE_BEGINTHREAD_NULL FAKE_BEGINTHREAD_NULL140,3024
#        define FAKE_BEGINTHREAD_NULLFAKE_BEGINTHREAD_NULL142,3078
#    define _LNK_CONV_LNK_CONV147,3201
#define PT_UNIXISH PT_UNIXISH150,3231
#define PT_DOSISH PT_DOSISH151,3254
#        define S_ISDIR(S_ISDIR155,3333
#        define S_ISDIR(S_ISDIR157,3393
#define S_IWGRP S_IWGRP162,3479
#define S_IWOTH S_IWOTH163,3497
#define PATHTYPE PATHTYPE167,3590
#define PATHTYPE PATHTYPE169,3625
